var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.286,1,2.778]],["body/controllers/AppController.html",[0,2.157,1,4.659,2,1.761,3,0.206,4,0.183,5,0.183,6,4.625,7,0.743,8,1.767,9,6.377,10,1.912,11,0.015,12,0.888,13,5.337,14,1.443,15,1.838,16,0.533,17,0.926,18,4.357,19,4.625,20,0.206,21,0.173,22,2.764,23,1.835,24,1.443,25,5.337,26,0.012,27,0.012]],["title/modules/AppModule.html",[28,1.187,29,2.778]],["body/modules/AppModule.html",[1,3.854,2,1.513,3,0.122,4,0.108,5,0.108,11,0.016,16,0.636,17,0.546,18,4.062,19,2.728,20,0.122,21,0.102,26,0.009,27,0.009,28,1.646,29,5.614,30,1.341,31,1.341,32,1.473,33,1.473,34,1.341,35,2.529,36,1.473,37,2.728,38,2.728,39,2.728,40,4.35,41,4.062,42,4.35,43,4.35,44,4.35,45,4.35,46,4.062,47,4.35,48,4.062,49,2.145,50,1.473,51,1.405,52,3.148,53,2.374,54,3.148,55,1.722,56,1.176,57,3.148,58,0.851,59,3.148,60,1.473,61,3.148,62,1.473,63,3.148,64,1.283,65,3.148,66,1.228,67,3.148,68,1.039,69,3.148,70,2.728,71,3.148,72,3.148,73,3.148,74,3.148,75,3.148,76,3.148,77,3.972,78,2.728,79,2.451,80,2.728,81,3.148,82,2.728,83,3.148,84,4.233,85,3.148,86,0.501,87,3.148,88,3.148,89,3.148,90,3.148,91,3.148,92,3.148,93,3.148,94,3.148,95,1.825,96,3.148,97,3.148,98,3.148,99,3.148,100,3.148,101,3.148]],["title/injectables/AppService.html",[18,2.404,102,0.831]],["body/injectables/AppService.html",[3,0.214,4,0.19,5,0.19,7,0.771,8,1.808,9,6.46,11,0.015,12,0.922,14,1.499,15,1.881,16,0.452,17,0.962,18,4.126,20,0.214,21,0.18,24,1.499,26,0.013,27,0.013,102,1.426,103,2.162,104,4.804,105,5.543,106,5.543,107,5.543]],["title/classes/Auth.html",[21,0.126,108,2.574]],["body/classes/Auth.html",[3,0.235,4,0.209,5,0.209,11,0.014,20,0.235,21,0.197,26,0.013,27,0.013,108,4.665,109,2.006,110,5.268]],["title/controllers/AuthController.html",[0,1.286,111,2.778]],["body/controllers/AuthController.html",[0,0.713,2,0.713,3,0.084,4,0.074,5,0.074,7,0.3,8,0.929,10,2.215,11,0.016,12,1.028,14,1.672,15,1.205,16,0.519,17,0.375,20,0.084,21,0.07,23,1.182,24,1.672,26,0.007,27,0.007,58,1.672,64,1.4,66,1.34,68,1.134,86,0.778,95,2.482,108,1.426,111,2.451,112,1.871,113,1.181,114,4.882,115,4.882,116,2.753,117,4.23,118,4.23,119,4.246,120,3.481,121,2.978,122,1.824,123,2.159,124,2.676,125,3.437,126,3.437,127,2.159,128,4.92,129,2.159,130,1.69,131,2.159,132,2.159,133,2.159,134,1.871,135,2.829,136,2.159,137,1.56,138,1.281,139,1.386,140,2.67,141,2.621,142,2.159,143,2.159,144,2.159,145,4.619,146,2.159,147,2.159,148,3.801,149,2.159,150,2.159,151,2.676,152,2.159,153,1.871,154,3.751,155,2.159,156,3.437,157,2.271,158,2.978,159,3.437,160,4.15,161,2.159,162,2.978,163,0.842,164,1.205,165,4.23,166,3.291,167,2.159,168,2.159,169,0.894,170,1.181,171,1.181,172,1.118,173,1.181,174,2.271,175,1.251,176,1.539,177,2.159,178,1.426,179,2.159,180,2.642,181,1.871,182,1.539,183,2.342,184,1.871,185,1.539,186,2.271,187,2.67,188,3.484,189,1.181,190,1.118,191,1.539,192,2.159,193,2.159,194,0.92,195,1.69,196,2.159,197,3.381,198,3.053,199,1.464,200,2.978,201,2.121,202,2.978,203,2.004,204,2.978,205,1.69,206,1.539,207,2.121,208,1.871,209,1.871,210,2.978,211,2.159,212,2.159,213,2.978,214,2.159,215,2.978,216,2.159,217,2.159,218,2.159,219,2.159,220,2.159,221,2.159,222,2.159,223,0.92,224,2.271,225,1.062,226,2.159,227,2.159,228,0.842,229,0.774,230,2.159,231,2.159,232,4.882,233,1.681,234,1.871,235,1.871,236,2.159,237,2.159,238,2.159,239,2.159,240,2.159,241,1.181,242,2.159,243,2.159,244,3.437,245,2.159,246,2.159,247,2.159,248,2.159,249,3.437,250,3.437,251,3.437,252,2.159,253,2.159,254,2.159,255,2.159,256,2.159,257,2.159]],["title/modules/AuthModule.html",[28,1.187,40,2.574]],["body/modules/AuthModule.html",[2,1.732,3,0.147,4,0.131,5,0.131,11,0.016,16,0.619,17,0.662,20,0.147,21,0.123,26,0.01,27,0.01,28,1.97,30,1.624,31,1.624,32,1.784,33,1.784,34,1.624,35,2.809,36,2.809,40,5.149,46,4.325,48,4.325,49,2.456,50,1.784,51,1.701,53,2.718,58,1.031,70,3.303,78,3.303,79,2.968,82,3.303,111,4.28,180,4.721,181,3.303,258,3.303,259,3.303,260,3.303,261,3.811,262,4.631,263,4.631,264,3.811,265,3.811,266,3.811,267,2.968,268,5.248,269,2.352,270,3.811,271,3.811,272,3.811,273,3.811,274,3.811,275,2.968,276,3.811,277,3.303,278,2.968,279,5.248,280,3.811,281,3.811,282,3.303,283,3.811,284,3.811]],["title/injectables/AuthService.html",[102,0.831,180,2.404]],["body/injectables/AuthService.html",[3,0.078,4,0.069,5,0.069,7,0.28,8,0.879,11,0.016,12,1.002,14,1.566,15,1.695,16,0.532,17,0.349,20,0.078,21,0.065,23,1.405,24,1.566,26,0.006,27,0.006,58,1.682,66,1.829,68,2.053,86,0.959,95,3.786,102,0.693,103,0.785,116,2.791,117,3.54,118,3.54,119,2.317,120,4.746,121,3.54,122,0.752,128,1.744,137,1.763,138,1.447,139,1.566,141,2.306,153,2.815,154,3.098,162,2.815,164,1.695,165,4.063,166,2.718,169,1.062,174,1.33,180,2.005,182,1.435,183,3.166,184,1.744,185,1.435,186,2.146,191,1.435,194,1.384,195,2.009,199,2.192,201,3.175,203,2.709,205,2.306,207,2.893,223,2.883,224,2.699,225,3.273,228,1.593,229,1.68,267,1.567,277,2.815,278,1.567,282,2.815,285,1.744,286,3.249,287,3.249,288,2.013,289,3.189,290,5.789,291,2.013,292,2.013,293,2.013,294,3.249,295,2.013,296,3.249,297,2.013,298,2.013,299,3.249,300,2.013,301,1.744,302,2.013,303,2.565,304,3.249,305,2.013,306,2.013,307,2.013,308,1.33,309,0.785,310,2.815,311,1.435,312,0.785,313,2.013,314,1.744,315,1.567,316,1.567,317,1.744,318,1.744,319,2.013,320,2.013,321,2.013,322,2.013,323,2.013,324,4.284,325,3.249,326,5.145,327,3.249,328,2.53,329,0.566,330,3.249,331,2.013,332,4.085,333,4.689,334,3.249,335,1.598,336,2.013,337,3.249,338,2.013,339,3.249,340,2.013,341,4.085,342,2.013,343,1.567,344,2.815,345,2.013,346,3.249,347,3.249,348,3.249,349,2.013,350,1.744,351,2.013,352,2.013,353,1.744,354,1.744,355,2.013,356,2.013,357,2.013,358,3.249,359,3.249,360,3.249,361,2.013,362,2.013,363,2.013,364,2.013,365,2.013,366,2.013]],["title/classes/CreateAuthDto.html",[21,0.126,308,2.574]],["body/classes/CreateAuthDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,308,4.655,367,5.247,368,4.715]],["title/classes/CreateInscriptionDto.html",[21,0.126,369,2.404]],["body/classes/CreateInscriptionDto.html",[3,0.218,4,0.193,5,0.193,7,0.782,11,0.015,12,1.122,20,0.218,21,0.182,26,0.013,27,0.013,86,1.074,109,1.856,335,3.552,369,4.161,370,6.26,371,4.378,372,2.63,373,4.457,374,5.623,375,5.623]],["title/classes/CreateMarqueDto.html",[21,0.126,376,2.404]],["body/classes/CreateMarqueDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,376,4.347,377,5.247,378,4.715]],["title/classes/CreateProfilDto.html",[21,0.126,379,2.404]],["body/classes/CreateProfilDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,379,4.347,380,5.247,381,4.715]],["title/classes/CreateTrajetDto.html",[21,0.126,382,2.404]],["body/classes/CreateTrajetDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,382,4.347,383,5.247,384,4.715]],["title/classes/CreateUtilisateurDto.html",[21,0.126,385,2.404]],["body/classes/CreateUtilisateurDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,385,4.347,386,5.247,387,4.318]],["title/classes/CreateVilleDto.html",[21,0.126,388,2.404]],["body/classes/CreateVilleDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,388,4.347,389,5.247,390,4.715]],["title/classes/CreateVoitureDto.html",[21,0.126,391,2.258]],["body/classes/CreateVoitureDto.html",[3,0.234,4,0.208,5,0.208,11,0.014,20,0.234,21,0.196,26,0.013,27,0.013,109,1.999,391,4.084,392,4.715,393,4.715]],["title/modules/EmailModule.html",[28,1.187,41,2.404]],["body/modules/EmailModule.html",[3,0.198,4,0.176,5,0.176,11,0.015,16,0.52,17,0.89,20,0.198,21,0.166,26,0.012,27,0.012,28,2.113,30,2.185,31,2.185,32,2.4,33,2.4,34,2.185,35,3.246,36,3.246,41,4.76,49,2.983,50,2.4,51,2.288,394,4.444,395,4.444,396,4.444,397,4.933,398,5.128,399,5.128]],["title/injectables/EmailService.html",[102,0.831,397,2.404]],["body/injectables/EmailService.html",[3,0.144,4,0.127,5,0.127,7,0.517,8,1.394,11,0.015,12,1.064,14,1.394,15,2.077,16,0.42,17,0.644,20,0.144,21,0.12,23,2.035,24,1.004,26,0.01,27,0.01,58,1.394,86,0.591,102,1.099,103,1.448,108,2.453,116,2.309,137,1.087,138,0.892,139,0.965,141,1.826,157,4.224,172,3.066,194,2.522,195,3.419,203,2.412,223,2.196,224,2.453,225,1.826,228,1.448,229,1.847,372,2.01,397,3.18,400,3.217,401,6.395,402,5.919,403,5.153,404,5.153,405,5.153,406,6.718,407,6.718,408,3.712,409,5.153,410,5.153,411,5.153,412,5.153,413,5.153,414,2.453,415,2.891,416,5.153,417,3.712,418,4.466,419,3.712,420,3.712,421,3.712,422,3.712,423,5.153,424,3.712,425,3.712,426,3.712,427,3.217,428,5.153,429,3.712,430,3.712,431,3.712,432,3.217,433,4.466,434,3.712,435,3.217,436,3.712,437,3.217,438,3.712,439,3.712]],["title/entities/Inscription.html",[62,1.823,440,1.456]],["body/entities/Inscription.html",[3,0.153,4,0.135,5,0.135,7,0.549,10,2.538,11,0.015,12,1.178,16,0.498,20,0.153,21,0.128,26,0.01,27,0.01,58,2.023,60,3.5,62,2.515,86,1.154,138,1.291,164,1.993,169,1.589,182,2.813,335,3.376,372,2.096,373,4.236,414,3.55,440,1.474,441,2.158,442,3.419,443,5.296,444,3.115,445,2.813,446,4.656,447,4.656,448,3.945,449,3.542,450,3.945,451,5.373,452,3.945,453,3.945,454,4.106,455,3.945,456,3.945,457,3.945,458,3.945,459,3.419,460,3.77,461,4.357,462,1.539,463,3.945,464,3.945,465,3.945]],["title/controllers/InscriptionController.html",[0,1.286,466,2.778]],["body/controllers/InscriptionController.html",[0,0.798,2,0.798,3,0.094,4,0.083,5,0.083,7,0.336,8,1.016,10,2.228,11,0.015,12,1.034,14,1.681,15,2.013,16,0.459,17,0.42,20,0.094,21,0.078,22,1.252,23,0.831,24,1.681,26,0.007,27,0.007,58,1.016,60,2.156,62,3.158,86,1.193,113,1.322,122,1.942,135,1.597,137,1.743,138,1.677,139,1.549,140,2.055,160,1.883,163,0.943,164,1.989,169,1.879,170,2.055,171,1.322,172,1.252,173,2.52,175,1.401,187,2.842,188,3.515,189,1.322,190,1.252,197,3.4,198,1.724,241,1.322,309,0.943,312,0.943,329,1.057,335,2.767,369,3.966,373,4.24,466,2.679,467,2.095,468,3.256,469,2.117,470,1.531,471,3.757,472,1.531,473,2.095,474,1.401,475,3.206,476,4.046,477,4.046,478,2.418,479,2.418,480,2.418,481,2.418,482,3.256,483,4.503,484,2.418,485,2.095,486,2.095,487,2.418,488,1.401,489,2.925,490,2.178,491,2.418,492,0.985,493,1.401,494,2.671,495,2.418,496,2.418,497,2.418,498,3.757,499,3.757,500,3.757,501,3.256,502,2.418,503,2.418,504,0.985,505,1.401,506,2.418,507,4.457,508,1.401,509,1.883,510,2.418,511,2.843,512,2.095,513,2.925,514,3.604,515,2.418,516,2.418,517,1.401,518,2.418,519,2.418,520,2.418,521,2.925,522,2.418,523,2.418,524,2.418,525,2.418,526,1.401,527,1.401,528,2.418,529,1.401,530,2.418,531,1.401,532,1.401,533,2.418,534,2.418,535,2.418,536,2.418]],["title/modules/InscriptionModule.html",[28,1.187,42,2.574]],["body/modules/InscriptionModule.html",[2,1.976,3,0.18,4,0.159,5,0.159,11,0.015,16,0.615,17,0.806,20,0.18,21,0.15,26,0.011,27,0.011,28,2.018,30,1.979,31,1.979,32,2.173,33,2.173,34,1.979,35,3.101,36,3.101,42,4.985,49,2.802,50,2.173,51,2.072,53,2.405,55,2.54,56,1.735,58,1.256,60,2.173,62,2.173,466,4.724,511,4.867,512,4.024,537,4.024,538,4.024,539,4.024,540,4.644,541,4.644,542,4.024,543,4.644,544,2.692,545,4.644]],["title/injectables/InscriptionService.html",[102,0.831,511,2.404]],["body/injectables/InscriptionService.html",[3,0.109,4,0.097,5,0.097,7,0.393,8,1.144,11,0.016,12,1.123,14,1.776,16,0.535,17,0.49,20,0.109,21,0.092,23,0.972,24,1.713,26,0.008,27,0.008,56,1.056,58,1.144,62,2.964,86,1.046,102,0.902,103,1.102,116,3.002,122,1.581,137,1.922,138,1.577,139,1.707,163,1.651,164,2.122,169,1.646,194,1.803,195,1.39,223,2.4,225,3.228,228,1.102,229,1.516,303,4.036,309,1.102,312,1.102,329,1.191,369,3.722,373,2.611,443,2.449,444,1.638,462,1.102,468,3.667,469,2.295,470,1.724,472,1.724,473,3.667,490,1.638,492,1.724,504,1.724,507,4.46,511,2.611,513,3.295,542,2.449,544,1.638,546,2.449,547,4.232,548,2.826,549,3.081,550,2.826,551,3.667,552,2.826,553,2.826,554,5.073,555,2.826,556,2.826,557,2.826,558,2.826,559,4.232,560,2.826,561,2.826,562,2.826,563,1.638,564,2.449,565,2.826,566,4.232,567,3.667,568,2.826,569,2.826,570,1.546,571,2.826,572,1.867,573,2.826,574,2.015,575,2.826,576,2.2,577,2.826,578,2.826,579,2.826,580,2.826]],["title/injectables/JwtAuthGuard.html",[102,0.831,178,2.574]],["body/injectables/JwtAuthGuard.html",[3,0.272,4,0.162,5,0.162,7,0.656,8,1.635,11,0.015,12,1.005,14,1.635,16,0.493,17,0.818,20,0.182,21,0.153,24,1.635,26,0.011,27,0.011,58,1.968,86,0.751,102,1.289,103,1.838,137,1.769,138,1.452,139,1.571,174,3.993,178,3.993,228,1.838,229,1.689,269,2.908,581,4.084,582,2.697,583,5.238,584,4.707,585,5.238,586,4.707,587,5.481,588,4.713,589,3.67,590,5.238,591,4.713,592,5.782,593,4.084,594,4.084]],["title/injectables/JwtStrategy.html",[102,0.831,262,2.574]],["body/injectables/JwtStrategy.html",[3,0.185,4,0.164,5,0.164,7,0.666,8,1.65,11,0.015,12,1.015,14,1.294,16,0.548,17,0.831,20,0.185,21,0.155,24,1.294,26,0.012,27,0.012,86,0.762,102,1.301,103,1.866,116,2.621,137,1.4,138,1.15,139,1.244,141,2.353,151,4.752,169,1.244,194,2.863,203,2.239,262,4.032,269,2.952,278,3.726,343,3.726,582,2.723,595,4.146,596,5.289,597,5.233,598,4.785,599,6.103,600,4.785,601,4.146,602,4.146,603,4.146,604,3.726,605,4.146,606,4.146,607,4.146,608,4.146,609,4.785,610,4.146,611,4.146]],["title/entities/Marque.html",[64,1.587,440,1.456]],["body/entities/Marque.html",[3,0.184,4,0.163,5,0.163,7,0.662,10,2.401,11,0.015,12,1.114,15,1.71,16,0.496,20,0.184,21,0.154,26,0.012,27,0.012,64,2.477,68,2.464,86,1.067,138,1.143,164,1.71,169,1.742,199,2.855,316,3.703,372,2.371,440,1.777,441,2.601,449,3.884,454,3.884,460,3.751,462,1.855,612,4.121,613,5.218,614,4.756,615,4.756,616,3.391,617,6.079,618,4.756,619,3.391,620,4.335,621,4.756,622,4.121]],["title/controllers/MarqueController.html",[0,1.286,623,2.778]],["body/controllers/MarqueController.html",[0,0.929,2,0.929,3,0.109,4,0.097,5,0.097,7,0.392,8,1.141,10,2.266,11,0.015,12,1.052,14,1.71,15,1.695,16,0.491,17,0.489,20,0.109,21,0.091,22,1.458,23,0.968,24,1.71,26,0.008,27,0.008,64,2.862,86,1.184,113,1.54,116,1.974,122,2.101,137,1.763,138,1.688,139,1.566,140,2.308,141,1.385,163,1.098,164,2.075,169,1.933,170,2.308,171,1.54,172,1.458,173,2.769,175,1.632,187,2.769,188,3.587,189,1.54,190,1.458,197,3.459,199,2.396,229,1.512,241,1.54,309,1.098,312,1.098,329,1.582,376,4.161,469,2.291,470,1.72,472,1.72,474,1.632,488,1.632,492,1.147,493,1.632,494,2.934,504,1.147,505,1.632,508,1.632,514,3.492,517,1.632,526,1.632,527,1.632,529,1.632,531,1.632,532,1.632,623,3.009,624,2.44,625,4.22,626,2.44,627,2.816,628,2.816,629,2.816,630,2.816,631,4.22,632,2.816,633,2.816,634,4.22,635,2.816,636,2.816,637,2.816,638,4.64,639,2.193,640,2.816,641,3.124,642,2.44,643,3.286,644,2.816,645,2.816,646,2.816,647,2.816,648,2.816,649,2.816,650,2.816,651,2.816,652,2.816,653,2.816]],["title/modules/MarqueModule.html",[28,1.187,43,2.574]],["body/modules/MarqueModule.html",[2,1.991,3,0.182,4,0.161,5,0.161,11,0.015,16,0.607,17,0.816,20,0.182,21,0.152,26,0.011,27,0.011,28,2.029,30,2.002,31,2.002,32,2.199,33,2.199,34,2.002,35,3.118,36,3.118,43,4.999,49,2.823,50,2.199,51,2.097,53,2.434,55,2.57,56,1.756,64,1.915,68,1.551,623,4.751,641,4.875,642,4.072,654,4.072,655,4.072,656,4.072,657,4.699,658,4.699,659,4.072,660,2.899,661,4.699]],["title/injectables/MarqueService.html",[102,0.831,641,2.404]],["body/injectables/MarqueService.html",[3,0.122,4,0.108,5,0.108,7,0.437,8,1.238,11,0.015,12,1.13,14,1.779,15,1.519,16,0.536,17,0.545,20,0.122,21,0.102,23,1.08,24,1.705,26,0.009,27,0.009,56,1.174,64,2.681,86,1.048,102,0.976,103,1.225,116,3.005,122,1.71,137,1.926,138,1.581,139,1.711,163,1.785,164,1.997,169,1.711,194,1.95,195,1.545,199,1.339,223,2.3,225,3.1,228,1.225,229,1.126,303,4.041,309,1.225,312,1.225,329,1.287,376,3.889,462,1.225,469,2.416,470,1.865,472,1.865,492,1.865,504,1.865,549,3.244,563,1.821,570,1.718,572,2.076,626,3.966,638,4.598,641,2.824,643,3.564,659,2.723,662,2.723,663,4.576,664,3.142,665,3.142,666,3.564,667,3.142,668,4.576,669,3.142,670,3.142,671,3.142,672,3.142,673,3.142,674,2.446,675,3.142,676,3.966,677,3.142,678,3.142,679,2.723,680,3.142,681,3.142,682,3.142]],["title/entities/Profil.html",[130,1.916,440,1.456]],["body/entities/Profil.html",[3,0.164,4,0.145,5,0.145,7,0.589,10,2.519,11,0.015,12,1.169,15,1.899,16,0.459,20,0.164,21,0.137,26,0.011,27,0.011,58,2.052,86,1.194,130,2.77,164,1.585,169,1.646,372,2.197,440,1.581,441,2.314,444,3.913,445,4.515,449,3.67,454,3.913,460,3.476,462,1.65,544,2.453,619,4.017,683,3.667,684,6.332,685,6.332,686,6.332,687,6.751,688,6.751,689,6.751,690,4.232,691,4.232,692,4.232,693,4.232,694,3.295,695,4.232,696,4.232,697,4.232,698,3.667]],["title/controllers/ProfilController.html",[0,1.286,699,2.778]],["body/controllers/ProfilController.html",[0,0.966,2,0.966,3,0.113,4,0.1,5,0.1,7,0.407,8,1.174,10,2.194,11,0.015,12,1.018,14,1.656,15,2.089,16,0.499,17,0.508,20,0.113,21,0.095,22,1.515,23,1.006,24,1.656,26,0.008,27,0.008,86,1.16,113,1.6,122,1.623,130,3.354,137,1.677,138,1.596,139,1.49,140,2.375,157,4.506,163,1.141,169,1.946,170,2.375,171,1.6,172,1.515,173,1.6,175,1.696,187,2.833,188,3.508,189,1.6,190,1.515,197,3.348,241,1.6,309,1.141,312,1.141,329,1.222,379,4.209,469,2.335,470,1.769,472,1.769,474,1.696,475,2.68,488,1.696,492,1.192,493,1.696,494,3.002,504,1.192,505,1.696,508,1.696,509,2.278,514,3.322,517,1.696,526,1.696,527,1.696,529,1.696,531,1.696,532,1.696,699,3.097,700,2.535,701,2.535,702,3.763,703,2.926,704,2.926,705,3.786,706,3.382,707,2.869,708,4.343,709,2.926,710,4.237,711,2.926,712,2.869,713,2.926,714,4.684,715,2.869,716,2.869,717,2.926,718,3.196,719,2.535,720,3.382,721,2.926,722,2.926,723,2.926,724,2.926,725,2.926,726,2.926,727,2.926]],["title/modules/ProfilModule.html",[28,1.187,44,2.574]],["body/modules/ProfilModule.html",[2,1.976,3,0.18,4,0.159,5,0.159,11,0.015,16,0.615,17,0.806,20,0.18,21,0.15,26,0.011,27,0.011,28,2.018,30,1.979,31,1.979,32,2.173,33,2.173,34,1.979,35,3.101,36,3.101,44,4.985,49,2.802,50,2.173,51,2.072,53,2.405,55,2.54,56,1.735,58,1.256,68,1.533,130,2.284,544,2.692,660,2.865,699,4.724,718,4.867,719,4.024,728,4.024,729,4.024,730,4.024,731,4.644,732,4.644,733,4.024,734,4.644]],["title/injectables/ProfilService.html",[102,0.831,718,2.404]],["body/injectables/ProfilService.html",[3,0.126,4,0.111,5,0.111,7,0.452,8,1.267,11,0.015,12,1.107,14,1.727,16,0.559,17,0.563,20,0.126,21,0.105,23,1.611,24,1.628,26,0.009,27,0.009,56,1.213,58,0.878,86,1.017,102,0.999,103,1.266,116,2.969,122,1.751,130,3.14,137,1.869,138,1.534,139,1.66,163,1.827,164,2.013,169,1.73,194,1.997,195,2.304,223,1.997,225,3.14,228,1.266,229,1.163,303,3.973,309,1.266,312,1.266,329,1.318,379,3.94,462,1.266,469,2.453,470,1.909,472,1.909,492,1.909,504,1.909,544,1.881,549,3.752,563,1.881,570,1.775,572,2.144,701,4.06,714,4.639,718,2.891,720,3.649,733,2.812,735,2.812,736,3.245,737,4.282,738,3.245,739,4.06,740,3.245,741,3.245,742,3.245,743,3.245,744,3.245,745,2.812,746,2.527,747,3.245,748,3.245,749,3.245,750,3.245,751,3.245,752,3.245,753,3.245]],["title/injectables/RefreshAuthGuard.html",[102,0.831,176,2.778]],["body/injectables/RefreshAuthGuard.html",[3,0.272,4,0.161,5,0.161,7,0.652,8,1.628,11,0.015,12,1.001,14,1.628,16,0.491,17,0.813,20,0.181,21,0.152,24,1.628,26,0.011,27,0.011,58,1.964,86,0.746,102,1.284,103,1.827,119,4.744,137,1.762,138,1.447,139,1.565,148,3.341,174,3.095,176,4.293,228,1.827,229,1.679,269,2.891,582,2.687,583,5.218,584,4.689,585,5.218,586,4.689,587,5.468,589,3.648,590,5.218,592,5.218,593,4.06,594,4.06,754,4.06,755,4.685,756,4.685,757,4.685]],["title/injectables/RefreshTokenStrategy.html",[102,0.831,263,2.574]],["body/injectables/RefreshTokenStrategy.html",[3,0.174,4,0.154,5,0.154,7,0.626,8,1.586,11,0.015,12,0.975,14,1.216,16,0.532,17,0.781,20,0.174,21,0.146,24,1.216,26,0.011,27,0.011,84,3.207,86,0.716,102,1.25,103,1.754,116,2.545,119,4.653,120,4.653,137,1.316,138,1.081,139,1.169,141,2.212,145,3.898,148,3.207,151,4.566,169,1.169,174,2.971,194,2.78,203,2.105,223,1.916,228,1.754,229,1.612,263,3.874,269,2.775,343,5.081,350,3.898,521,3.502,570,2.46,582,2.617,596,5.082,597,5.081,601,3.898,602,3.898,603,3.898,604,3.502,605,3.898,606,3.898,607,3.898,608,3.898,610,3.898,611,3.898,758,3.898,759,4.498,760,5.864,761,4.498,762,5.864,763,4.498,764,4.498,765,4.498]],["title/classes/RegisterUtilisateurDto.html",[21,0.126,154,2.574]],["body/classes/RegisterUtilisateurDto.html",[3,0.171,4,0.151,5,0.151,7,0.614,11,0.015,12,1.258,15,2.203,16,0.472,20,0.171,21,0.143,26,0.011,27,0.011,66,2.52,68,2.133,86,1.204,95,3.746,109,1.455,139,1.505,154,3.824,191,5.454,199,2.754,201,3.987,203,3.024,205,3.596,207,3.987,372,2.258,387,3.144,391,3.746,392,3.434,766,4.409,767,4.409,768,3.821,769,4.409,770,3.821,771,3.821,772,3.821,773,3.821,774,3.144,775,2.913]],["title/guards/RolesGuard.html",[776,3.034,777,2.778]],["body/guards/RolesGuard.html",[3,0.175,4,0.155,5,0.155,7,0.63,8,1.592,11,0.016,12,0.979,14,1.223,16,0.565,17,0.785,20,0.175,21,0.147,22,2.343,24,1.592,26,0.011,27,0.011,58,1.223,84,3.225,86,0.937,102,1.255,137,1.723,138,1.414,139,1.53,194,1.928,205,2.224,223,2.508,584,5.396,586,4.583,587,5.396,589,3.522,777,4.197,778,4.523,779,3.92,780,4.523,781,7.365,782,4.523,783,4.523,784,5.886,785,3.92,786,3.522,787,4.523,788,4.523,789,4.523,790,5.886,791,4.523,792,4.523,793,4.523,794,4.523,795,4.523,796,4.523]],["title/entities/Trajet.html",[60,1.823,440,1.456]],["body/entities/Trajet.html",[3,0.128,4,0.113,5,0.113,7,0.459,10,2.672,11,0.015,12,1.24,15,1.707,16,0.453,20,0.128,21,0.107,26,0.009,27,0.009,60,2.219,62,3.132,66,2.689,86,1.198,138,1.139,164,2.098,169,1.443,335,2.729,372,1.849,414,3.133,440,1.233,441,1.805,444,2.749,445,2.353,446,4.81,447,4.109,449,3.217,454,4.45,460,3.425,461,3.958,462,1.287,490,3.217,616,2.353,620,3.381,797,2.86,798,3.958,799,5.55,800,4.81,801,4.81,802,5.55,803,4.322,804,5.57,805,4.322,806,5.57,807,3.3,808,3.3,809,3.3,810,4.742,811,3.3,812,3.3,813,3.3,814,3.3,815,3.3,816,4.742,817,3.3,818,3.3,819,3.3,820,3.3,821,2.86,822,3.3,823,2.86,824,3.3,825,3.3]],["title/controllers/TrajetController.html",[0,1.286,826,2.778]],["body/controllers/TrajetController.html",[0,0.652,2,0.652,3,0.076,4,0.068,5,0.068,7,0.275,8,0.865,10,2.143,11,0.015,12,0.995,14,1.618,15,1.683,16,0.415,17,0.343,20,0.076,21,0.064,22,1.023,23,0.679,24,1.618,26,0.006,27,0.006,60,3.099,66,2.333,86,1.153,113,1.08,116,2.892,122,1.196,137,1.596,138,1.591,139,1.418,140,1.75,141,2.941,157,4.374,163,0.77,164,2.122,169,1.798,170,1.75,171,1.08,172,1.023,173,1.08,187,2.206,188,3.38,189,1.08,190,1.023,197,3.271,223,1.363,228,1.248,229,1.662,241,1.08,309,0.77,312,0.77,329,0.9,382,3.691,435,4.019,444,2.953,469,1.889,470,1.304,472,1.304,474,1.145,475,1.974,482,4.019,483,4.019,485,2.772,488,1.145,492,0.805,493,1.145,494,2.338,504,0.805,505,1.145,508,1.145,514,3.329,517,1.145,526,1.145,527,1.145,529,1.145,531,1.145,532,1.145,639,1.538,702,2.772,705,3.603,706,3.611,707,3.064,710,4.195,712,2.114,715,2.114,716,2.114,798,4.265,803,4.944,805,4.247,826,2.281,827,1.711,828,4.019,829,3.495,830,3.495,831,1.711,832,1.975,833,1.975,834,4.019,835,1.975,836,3.199,837,1.975,838,4.637,839,1.975,840,1.975,841,1.711,842,1.975,843,4.019,844,4.637,845,3.199,846,1.975,847,1.975,848,1.711,849,1.975,850,1.975,851,1.975,852,4.195,853,1.975,854,1.975,855,2.488,856,1.711,857,2.491,858,1.975,859,1.975,860,1.975,861,1.975,862,3.199,863,1.975,864,1.975,865,1.975,866,4.637,867,3.199,868,3.199,869,3.199,870,3.199,871,1.975,872,1.975,873,1.975,874,1.975,875,1.975,876,1.975,877,1.975,878,1.975,879,1.975,880,1.975,881,1.975,882,1.975]],["title/modules/TrajetModule.html",[28,1.187,45,2.574]],["body/modules/TrajetModule.html",[2,1.893,3,0.168,4,0.149,5,0.149,11,0.015,16,0.622,17,0.755,20,0.168,21,0.141,26,0.011,27,0.011,28,1.955,30,1.853,31,1.853,32,2.035,33,2.035,34,1.853,35,3.004,36,3.004,41,4.495,45,5.04,49,2.684,50,2.035,51,1.94,53,2.971,55,2.378,56,1.625,58,1.551,60,2.035,62,2.684,68,1.893,80,3.768,544,2.521,660,2.683,826,4.577,855,4.821,856,3.768,883,3.768,884,3.768,885,4.348,886,3.768,887,4.348,888,4.348,889,3.768,890,3.768,891,4.348]],["title/injectables/TrajetService.html",[102,0.831,855,2.404]],["body/injectables/TrajetService.html",[3,0.065,4,0.057,5,0.057,7,0.232,8,0.754,11,0.016,12,1.069,14,1.704,16,0.502,17,0.29,20,0.065,21,0.054,23,1.601,24,1.572,26,0.005,27,0.005,56,0.624,58,1.361,60,2.949,62,2.355,64,1.707,68,1.762,86,0.981,102,0.595,103,0.652,116,2.954,122,1.566,137,1.803,138,1.48,139,1.602,141,0.822,163,1.088,164,2.111,169,1.671,194,1.188,195,2.752,203,0.782,206,2.987,223,2.384,225,2.95,228,1.4,229,1.286,303,3.762,309,0.652,312,0.652,324,2.171,329,0.784,373,2.585,382,2.874,397,3.295,427,1.448,432,1.448,433,2.416,437,2.416,440,0.624,444,3.095,462,0.652,469,1.707,470,1.136,472,1.136,490,2.917,492,1.136,504,1.136,544,0.968,549,3.575,551,3.11,563,0.968,564,1.448,567,1.448,570,1.525,574,1.191,576,2.794,660,1.031,737,2.794,746,1.301,798,4.145,803,5.003,805,4.526,828,3.631,829,2.416,830,2.416,831,2.416,834,2.416,841,2.416,848,2.416,852,3.697,855,1.72,857,2.171,889,1.448,890,1.448,892,1.448,893,2.788,894,2.788,895,2.788,896,2.788,897,1.671,898,2.794,899,1.671,900,2.788,901,1.671,902,1.671,903,1.671,904,1.671,905,1.671,906,1.671,907,2.788,908,1.671,909,2.788,910,2.788,911,1.671,912,2.788,913,1.671,914,2.788,915,1.671,916,1.671,917,1.671,918,1.671,919,1.671,920,1.301,921,1.448,922,1.671,923,1.671,924,1.671,925,2.788,926,2.788,927,1.671,928,1.671,929,1.671,930,1.671,931,3.588,932,3.588,933,3.588,934,1.671,935,1.671,936,2.788,937,1.671,938,2.788,939,1.671,940,1.448,941,3.588,942,2.788,943,2.788,944,2.788,945,2.788,946,2.788,947,2.788,948,4.19,949,2.788,950,1.671,951,1.671,952,1.671,953,2.788,954,2.788,955,4.19,956,1.671,957,1.671,958,1.671,959,1.671,960,1.671,961,1.671,962,1.671]],["title/classes/UpdateAuthDto.html",[21,0.126,311,2.778]],["body/classes/UpdateAuthDto.html",[3,0.221,4,0.196,5,0.196,11,0.015,16,0.555,20,0.221,21,0.185,26,0.013,27,0.013,109,1.883,308,3.768,310,4.943,311,4.85,329,1.605,368,4.442,582,3.035,963,4.943,964,6.802,965,3.12,966,2.954,967,2.954]],["title/classes/UpdateInscriptionDto.html",[21,0.126,507,2.574]],["body/classes/UpdateInscriptionDto.html",[3,0.203,4,0.18,5,0.18,7,0.73,11,0.015,12,1.076,16,0.527,20,0.203,21,0.17,26,0.012,27,0.012,86,1.03,109,1.732,164,2.058,329,1.476,335,3.447,369,3.238,371,4.086,372,2.522,373,4.325,507,4.272,513,4.086,582,2.885,965,2.87,966,2.718,967,2.718,968,6.074,969,6.467,970,5.248,971,5.248]],["title/classes/UpdateMarqueDto.html",[21,0.126,638,2.574]],["body/classes/UpdateMarqueDto.html",[3,0.221,4,0.196,5,0.196,11,0.015,16,0.555,20,0.221,21,0.185,26,0.013,27,0.013,109,1.883,329,1.605,376,3.52,378,4.442,582,3.035,638,4.494,643,4.442,965,3.12,966,2.954,967,2.954,972,4.943,973,6.802]],["title/classes/UpdateProfilDto.html",[21,0.126,714,2.574]],["body/classes/UpdateProfilDto.html",[3,0.221,4,0.196,5,0.196,11,0.015,16,0.555,20,0.221,21,0.185,26,0.013,27,0.013,109,1.883,329,1.605,379,3.52,381,4.442,582,3.035,714,4.494,720,4.442,965,3.12,966,2.954,967,2.954,974,4.943,975,6.802]],["title/classes/UpdateTrajetDto.html",[21,0.126,852,2.574]],["body/classes/UpdateTrajetDto.html",[3,0.164,4,0.146,5,0.146,7,0.59,10,2.593,11,0.015,12,1.203,16,0.517,20,0.164,21,0.183,26,0.011,27,0.011,86,1.152,109,1.4,164,2.157,329,1.194,335,3.118,372,2.201,382,2.618,384,3.304,444,3.271,582,2.518,798,4.521,800,5.495,801,5.495,804,5.495,806,5.495,852,3.728,857,3.304,965,2.321,966,2.197,967,2.197,976,6.399,977,5.643,978,6.341,979,4.243,980,7.731,981,4.243,982,4.243,983,4.243,984,4.243,985,4.243,986,3.677]],["title/classes/UpdateUtilisateurDto.html",[21,0.126,166,2.258]],["body/classes/UpdateUtilisateurDto.html",[3,0.16,4,0.142,5,0.142,7,0.575,11,0.015,12,1.24,15,2.181,16,0.545,20,0.16,21,0.134,26,0.011,27,0.011,66,2.44,68,2.065,86,1.187,95,3.627,109,1.364,139,1.441,166,3.213,185,5.385,186,2.729,199,2.666,201,3.86,203,2.928,205,3.531,207,3.86,329,1.162,372,2.162,385,2.549,387,2.946,582,2.474,768,3.58,770,3.58,771,3.58,772,3.58,773,3.58,774,2.946,775,2.729,965,2.26,966,2.14,967,2.14,987,5.544,988,4.132,989,4.132,990,3.86,991,4.132,992,3.217]],["title/classes/UpdateVilleDto.html",[21,0.126,993,2.574]],["body/classes/UpdateVilleDto.html",[3,0.221,4,0.196,5,0.196,11,0.015,16,0.555,20,0.221,21,0.185,26,0.013,27,0.013,109,1.883,329,1.605,388,3.52,390,4.442,582,3.035,965,3.12,966,2.954,967,2.954,993,4.494,994,4.943,995,6.802,996,4.442]],["title/classes/UpdateVoitureDto.html",[21,0.126,990,2.404]],["body/classes/UpdateVoitureDto.html",[3,0.221,4,0.196,5,0.196,11,0.015,16,0.555,20,0.221,21,0.185,26,0.013,27,0.013,109,1.883,329,1.605,391,3.306,393,4.442,582,3.035,775,3.768,965,3.12,966,2.954,967,2.954,990,4.197,992,4.442,997,6.802]],["title/entities/Utilisateur.html",[58,1.054,440,1.456]],["body/entities/Utilisateur.html",[3,0.118,4,0.105,5,0.105,7,0.426,10,2.634,11,0.016,12,1.223,15,2.106,16,0.509,20,0.118,21,0.099,26,0.009,27,0.009,58,1.215,62,3.052,66,2.075,68,2.327,84,4.178,86,1.182,95,3.083,130,3.468,135,2.023,138,1.079,139,1.168,164,1.264,169,1.383,199,2.267,201,3.282,203,2.489,205,3.398,207,3.282,316,2.385,372,1.752,414,2.967,440,1.144,441,1.675,445,2.184,449,3.083,454,4.372,460,3.282,462,1.194,490,3.083,576,3.498,616,2.184,619,3.793,620,3.203,622,3.892,694,3.498,774,2.184,821,2.654,998,2.654,999,4.609,1000,3.062,1001,3.062,1002,3.062,1003,3.062,1004,3.062,1005,3.062,1006,4.492,1007,6.239,1008,4.492,1009,4.492,1010,3.062,1011,3.062,1012,3.062,1013,5.859,1014,3.062,1015,3.062,1016,3.062,1017,4.492,1018,3.062,1019,3.062,1020,3.062,1021,3.062]],["title/controllers/UtilisateurController.html",[0,1.286,1022,2.778]],["body/controllers/UtilisateurController.html",[0,0.771,2,0.771,3,0.09,4,0.08,5,0.08,7,0.325,8,0.989,10,2.199,11,0.015,12,1.021,14,1.66,16,0.451,17,0.405,20,0.09,21,0.076,22,1.209,23,0.803,24,1.66,26,0.007,27,0.007,58,1.807,66,1.426,86,1.131,95,2.119,113,1.277,116,1.758,122,1.684,134,2.024,135,2.416,137,1.719,138,1.605,139,1.527,140,2.465,141,1.148,157,4.197,158,3.169,160,2.847,163,0.911,164,2.119,166,3.682,169,1.975,170,2,171,1.277,172,1.209,173,1.277,175,1.354,186,2.416,187,2.465,188,3.357,189,1.277,190,1.209,197,3.211,198,2.607,199,1.558,200,3.169,201,2.256,202,3.169,203,1.711,204,3.169,205,1.798,206,1.665,207,2.256,208,2.024,209,2.024,224,1.543,233,1.818,234,2.024,235,2.024,241,1.277,289,2.612,309,0.911,312,0.911,329,1.029,385,3.623,469,2.078,470,1.49,472,1.49,474,1.354,475,2.256,486,2.024,488,1.354,490,2.119,492,0.951,493,1.354,494,2.956,501,3.169,504,0.951,505,1.354,508,1.354,514,3.209,517,1.354,526,1.354,527,1.354,529,2.612,531,1.354,532,1.354,705,3.879,706,2.847,707,2.416,710,4.197,712,2.416,715,2.416,716,2.416,1022,2.607,1023,2.024,1024,3.657,1025,4.507,1026,2.024,1027,2.335,1028,3.657,1029,2.335,1030,2.335,1031,2.335,1032,3.657,1033,3.657,1034,2.335,1035,2.335,1036,2.335,1037,2.335,1038,2.335,1039,2.335,1040,4.419,1041,2.335,1042,2.024,1043,2.335,1044,2.335,1045,2.335,1046,2.335,1047,2.335,1048,2.335,1049,2.335,1050,2.335,1051,2.335,1052,2.335,1053,2.335,1054,2.335,1055,2.335,1056,2.335,1057,2.335,1058,2.335]],["title/modules/UtilisateurModule.html",[28,1.187,46,2.404]],["body/modules/UtilisateurModule.html",[2,1.957,3,0.177,4,0.157,5,0.157,11,0.015,16,0.621,17,0.794,20,0.177,21,0.148,26,0.011,27,0.011,28,2.004,30,1.95,31,1.95,32,2.142,33,2.142,34,1.95,35,3.079,36,3.079,46,4.64,49,2.775,50,2.142,51,2.042,53,2.37,55,2.503,56,1.71,58,1.238,64,2.416,68,1.51,130,2.25,289,4.563,660,2.824,1022,4.691,1042,3.966,1059,3.966,1060,3.966,1061,3.966,1062,4.576,1063,4.576,1064,3.966,1065,3.966,1066,3.263,1067,4.576]],["title/injectables/UtilisateurService.html",[102,0.831,289,2.258]],["body/injectables/UtilisateurService.html",[3,0.065,4,0.058,5,0.058,7,0.235,8,0.762,11,0.016,12,1.052,14,1.673,15,1.643,16,0.491,17,0.294,20,0.065,21,0.055,23,1.452,24,1.521,26,0.005,27,0.005,56,0.632,58,1.453,64,2.38,68,1.548,86,0.985,102,0.601,103,0.66,116,2.932,120,3.012,122,1.753,124,1.318,130,2.077,135,1.118,137,1.811,138,1.486,139,1.608,141,0.832,148,3.012,163,1.099,164,2.033,166,3.261,169,1.794,186,1.862,194,1.201,195,2.077,199,1.201,203,1.319,223,2.397,224,4.333,225,3.274,228,1.976,229,1.925,289,1.634,303,3.773,309,0.66,312,0.66,314,1.466,315,1.318,324,3.289,328,1.318,329,1.019,335,0.832,344,1.466,353,1.466,354,1.466,385,2.895,462,0.66,469,1.721,470,1.148,472,1.148,490,0.981,492,1.148,504,1.148,549,3.588,563,0.981,570,2.31,574,3.012,660,1.044,666,2.82,674,1.318,676,1.466,679,1.466,698,1.466,737,2.195,739,3.138,745,1.466,746,1.318,898,2.82,920,1.318,921,1.466,999,2.442,1026,2.442,1040,3.138,1064,1.466,1065,1.466,1066,1.207,1068,1.466,1069,2.818,1070,2.818,1071,2.818,1072,2.818,1073,2.818,1074,2.818,1075,1.692,1076,1.692,1077,1.692,1078,1.692,1079,2.818,1080,1.692,1081,2.818,1082,1.692,1083,2.818,1084,1.692,1085,1.692,1086,1.692,1087,1.692,1088,2.818,1089,1.692,1090,2.818,1091,1.692,1092,2.818,1093,1.692,1094,1.692,1095,1.692,1096,1.692,1097,1.692,1098,5.065,1099,3.622,1100,3.622,1101,3.622,1102,2.818,1103,1.692,1104,1.692,1105,2.818,1106,1.692,1107,1.692,1108,1.692,1109,1.692,1110,2.818,1111,1.466,1112,1.692,1113,1.692,1114,1.692,1115,1.692,1116,1.692,1117,1.692,1118,1.692,1119,1.692,1120,1.692,1121,1.692,1122,3.622,1123,1.692,1124,1.692,1125,1.692,1126,1.692,1127,1.692,1128,1.692,1129,1.692,1130,3.138,1131,2.818,1132,1.466,1133,1.692,1134,1.692,1135,1.692,1136,1.692,1137,1.692,1138,1.692,1139,3.622,1140,1.692,1141,1.692,1142,1.692,1143,1.692,1144,2.818,1145,1.692,1146,1.692,1147,1.466,1148,1.692,1149,1.692,1150,1.692]],["title/entities/Ville.html",[66,1.52,440,1.456]],["body/entities/Ville.html",[3,0.169,4,0.15,5,0.15,7,0.609,10,2.546,11,0.015,12,1.182,15,1.62,16,0.469,20,0.169,21,0.142,26,0.011,27,0.011,60,3.636,66,2.245,86,1.132,164,1.924,169,1.673,199,2.742,372,2.245,440,1.634,441,2.392,449,3.73,454,4.119,459,3.789,461,3.118,462,1.705,616,4.105,620,4.589,823,3.789,1151,3.789,1152,6.436,1153,6.436,1154,6.436,1155,4.373,1156,4.373,1157,4.373,1158,5.757,1159,4.373,1160,5.757,1161,4.373,1162,4.373]],["title/controllers/VilleController.html",[0,1.286,1163,2.778]],["body/controllers/VilleController.html",[0,0.853,2,0.853,3,0.1,4,0.089,5,0.089,7,0.36,8,1.07,10,2.193,11,0.015,12,1.018,14,1.655,15,2.118,16,0.549,17,0.449,20,0.1,21,0.084,22,1.338,23,0.889,24,1.655,26,0.008,27,0.008,66,2.68,86,1.166,113,1.414,122,1.478,137,1.698,138,1.618,139,1.508,140,2.163,163,1.008,169,1.903,170,2.163,171,1.414,172,1.338,173,1.414,175,1.498,178,1.707,187,2.628,188,3.483,189,1.414,190,1.338,197,3.347,199,2.472,205,1.271,241,1.414,309,1.008,312,1.008,329,1.113,388,4.053,469,2.193,470,1.612,472,1.612,474,1.498,475,2.44,476,5.35,477,3.08,488,1.498,489,3.08,492,1.053,493,1.498,494,2.785,504,1.053,505,1.498,508,1.498,509,2.012,514,3.363,517,1.498,526,1.498,527,1.498,529,1.498,531,1.498,532,1.498,705,3.556,707,2.613,710,4.339,712,2.613,715,2.613,716,2.613,774,1.843,777,1.843,843,3.428,993,4.539,996,3.08,1163,2.82,1164,2.24,1165,3.428,1166,2.24,1167,2.584,1168,2.584,1169,3.955,1170,2.584,1171,2.24,1172,2.584,1173,2.584,1174,2.584,1175,2.584,1176,2.584,1177,2.584,1178,2.965,1179,2.24,1180,2.584,1181,2.012,1182,2.584,1183,2.584,1184,2.584,1185,2.584,1186,2.584,1187,2.584,1188,2.584,1189,2.584,1190,2.584,1191,2.584,1192,2.584,1193,2.584,1194,2.584,1195,2.584]],["title/modules/VilleModule.html",[28,1.187,47,2.574]],["body/modules/VilleModule.html",[2,2.014,3,0.185,4,0.164,5,0.164,11,0.015,16,0.596,17,0.831,20,0.185,21,0.155,26,0.012,27,0.012,28,2.047,30,2.039,31,2.039,32,2.239,33,2.239,34,2.039,35,3.145,36,3.145,47,5.019,49,2.856,50,2.239,51,2.135,53,2.478,55,2.617,56,1.788,66,1.866,1163,4.792,1178,4.887,1179,4.146,1196,4.146,1197,4.146,1198,4.146,1199,4.785,1200,4.785,1201,4.146,1202,4.785]],["title/injectables/VilleService.html",[102,0.831,1178,2.404]],["body/injectables/VilleService.html",[3,0.118,4,0.105,5,0.105,7,0.426,8,1.215,11,0.016,12,1.121,14,1.763,15,1.496,16,0.532,17,0.532,20,0.118,21,0.099,23,1.053,24,1.687,26,0.009,27,0.009,56,1.144,66,2.695,86,1.038,102,0.958,103,1.194,116,2.994,122,1.678,137,1.908,138,1.619,139,1.695,163,1.752,164,1.984,169,1.695,194,1.914,195,1.506,199,2.267,223,2.267,225,3.206,228,1.752,229,1.609,303,4.02,309,1.194,312,1.194,329,1.264,388,3.849,462,1.194,469,2.387,470,1.83,472,1.83,492,1.83,504,1.83,549,3.204,563,1.775,570,2.457,572,2.023,993,4.566,996,3.498,1165,3.892,1166,3.892,1171,3.892,1178,2.771,1201,2.654,1203,2.654,1204,3.062,1205,3.062,1206,4.492,1207,3.062,1208,3.062,1209,3.062,1210,3.062,1211,3.062,1212,3.062,1213,3.062,1214,3.062,1215,3.062,1216,3.062,1217,4.492,1218,4.492,1219,3.062,1220,3.062]],["title/entities/Voiture.html",[68,1.286,440,1.456]],["body/entities/Voiture.html",[3,0.138,4,0.122,5,0.122,7,0.496,10,2.578,11,0.015,12,1.197,15,1.767,16,0.472,20,0.138,21,0.115,26,0.01,27,0.01,58,2.004,64,2.98,68,2.184,86,1.146,138,1.203,164,2.024,169,1.505,182,2.539,210,5.016,213,5.016,215,5.016,228,1.952,229,1.794,301,3.086,317,4.338,318,4.338,335,3.374,372,1.952,440,1.331,441,1.948,449,3.355,454,4.343,460,3.572,461,2.539,462,1.389,619,4.128,694,3.898,1132,3.086,1147,5.734,1221,3.086,1222,3.561,1223,3.561,1224,3.561,1225,3.561,1226,3.561,1227,3.561,1228,3.561,1229,3.561,1230,3.561,1231,3.561,1232,3.561,1233,3.561,1234,3.561,1235,3.086,1236,3.561,1237,3.561,1238,3.561,1239,3.561,1240,3.561]],["title/controllers/VoitureController.html",[0,1.286,1241,2.778]],["body/controllers/VoitureController.html",[0,0.967,2,0.967,3,0.113,4,0.101,5,0.101,7,0.408,8,1.176,10,2.195,11,0.015,12,1.019,14,1.657,15,2.025,16,0.5,17,0.509,20,0.113,21,0.095,22,1.518,23,1.008,24,1.657,26,0.008,27,0.008,68,2.253,86,1.16,113,1.603,122,1.625,137,1.679,138,1.596,139,1.491,140,2.379,163,1.143,164,1.459,169,1.947,170,2.379,171,1.603,172,1.518,173,1.603,175,1.699,183,2.836,187,2.836,188,3.511,189,1.603,190,1.518,197,3.351,241,1.603,309,1.143,312,1.143,329,1.223,391,3.956,469,2.337,470,1.772,472,1.772,474,1.699,475,2.683,476,5.314,477,3.386,488,1.699,489,3.386,492,1.194,493,1.699,494,3.005,504,1.194,505,1.699,508,1.699,514,3.325,517,1.699,526,1.699,527,1.699,529,1.699,531,1.699,532,1.699,613,3.386,639,2.282,705,3.789,707,2.873,710,4.24,712,2.873,715,2.873,716,2.873,775,2.873,990,4.377,1241,3.101,1242,2.54,1243,2.54,1244,2.931,1245,2.931,1246,2.931,1247,2.931,1248,2.931,1249,2.931,1250,2.54,1251,2.931,1252,2.931,1253,2.931,1254,2.931,1255,2.931,1256,2.931,1257,2.931]],["title/modules/VoitureModule.html",[28,1.187,48,2.404]],["body/modules/VoitureModule.html",[2,1.995,3,0.182,4,0.162,5,0.162,11,0.015,16,0.607,17,0.818,20,0.182,21,0.153,26,0.011,27,0.011,28,2.032,30,2.008,31,2.008,32,2.206,33,2.206,34,2.008,35,3.123,36,3.123,48,4.672,49,2.829,50,2.206,51,2.103,53,2.441,55,2.578,56,1.761,64,1.92,68,1.556,183,4.323,1066,3.361,1241,4.758,1250,4.084,1258,4.084,1259,4.084,1260,4.084,1261,4.713,1262,4.713,1263,4.084,1264,4.713]],["title/injectables/VoitureService.html",[102,0.831,183,2.131]],["body/injectables/VoitureService.html",[3,0.109,4,0.097,5,0.097,7,0.393,8,1.144,11,0.015,12,1.123,14,1.776,16,0.535,17,0.49,20,0.109,21,0.092,23,1.455,24,1.713,26,0.008,27,0.008,56,1.056,64,1.724,68,2.279,86,1.046,102,0.902,103,1.102,116,3.002,122,1.581,137,1.922,138,1.577,139,1.707,163,1.651,164,2.034,169,1.646,183,2.315,194,1.803,195,2.081,223,2.162,225,3.114,228,1.651,229,1.516,303,4.036,309,1.102,312,1.102,329,1.191,335,2.77,391,3.497,462,1.102,469,2.295,470,1.724,472,1.724,492,1.724,504,1.724,549,3.591,563,1.638,570,2.315,572,1.867,574,2.015,613,3.951,666,3.951,674,2.2,775,2.796,898,3.295,920,2.2,990,4.166,1066,2.015,1130,3.667,1243,3.667,1263,2.449,1265,2.449,1266,4.232,1267,2.826,1268,2.826,1269,2.826,1270,2.826,1271,4.232,1272,2.826,1273,2.826,1274,2.826,1275,4.232,1276,2.826,1277,2.826,1278,2.826,1279,4.232,1280,4.232,1281,2.826,1282,2.826,1283,2.826,1284,2.826,1285,2.826,1286,2.826]],["title/coverage.html",[1287,4.149]],["body/coverage.html",[0,2.246,1,1.912,5,0.092,6,2.324,11,0.015,18,1.654,21,0.244,26,0.008,27,0.008,34,1.143,58,0.725,60,1.255,62,1.255,64,1.092,66,1.046,68,0.885,86,0.427,102,1.558,104,2.324,108,1.771,110,2.324,111,1.912,112,2.324,130,1.319,154,1.771,166,1.554,176,1.912,178,1.771,180,1.654,183,1.467,185,1.912,191,1.912,229,0.961,262,1.771,263,1.771,285,2.324,289,1.554,308,1.771,311,1.912,367,2.324,368,3.168,369,1.654,370,2.324,371,3.168,376,1.654,377,2.324,378,3.168,379,1.654,380,2.324,381,3.168,382,1.654,383,2.324,384,3.168,385,1.654,386,2.324,387,3.505,388,1.654,389,2.324,390,3.168,391,1.554,392,2.088,393,3.168,397,1.654,400,2.324,440,2.41,442,2.324,466,1.912,467,2.324,507,1.771,511,1.654,546,2.324,581,2.324,595,2.324,612,2.324,623,1.912,624,2.324,638,1.771,641,1.654,662,2.324,683,2.324,699,1.912,700,2.324,714,1.771,718,1.654,735,2.324,754,2.324,758,2.324,776,2.088,777,1.912,779,2.324,786,2.088,797,2.324,826,1.912,827,2.324,852,1.771,855,1.654,892,2.324,963,2.324,968,2.324,972,2.324,974,2.324,976,2.324,990,1.654,992,2.088,993,1.771,994,2.324,998,2.324,1022,1.912,1023,2.324,1068,2.324,1151,2.324,1163,1.912,1164,2.324,1178,1.654,1181,2.088,1203,2.324,1221,2.324,1241,1.912,1242,2.324,1265,2.324,1287,2.088,1288,2.324,1289,2.681,1290,2.681,1291,8.084,1292,4.068,1293,6.45,1294,7.706,1295,6.45,1296,3.525,1297,4.068,1298,2.681,1299,2.681,1300,2.324,1301,2.681,1302,5.486,1303,5.486,1304,4.068,1305,2.681,1306,2.681,1307,2.681,1308,2.681]],["title/dependencies.html",[31,1.998,1309,2.815]],["body/dependencies.html",[11,0.016,17,0.859,21,0.16,26,0.012,27,0.012,31,2.109,56,1.85,77,4.29,79,3.855,190,2.564,267,3.855,269,3.054,315,3.855,418,4.29,462,1.931,597,3.855,604,3.855,785,4.29,966,2.564,967,2.564,986,4.29,1235,4.29,1310,6.827,1311,4.95,1312,6.236,1313,4.95,1314,4.95,1315,4.95,1316,6.236,1317,4.95,1318,4.95,1319,4.95,1320,4.95,1321,4.95,1322,4.95,1323,4.95,1324,4.95,1325,4.95,1326,4.95,1327,4.95,1328,4.95,1329,4.95,1330,4.95,1331,4.95,1332,4.95,1333,4.95,1334,4.95,1335,4.95]],["title/miscellaneous/enumerations.html",[1336,2.004,1337,4.063]],["body/miscellaneous/enumerations.html",[7,0.818,11,0.015,26,0.013,27,0.013,205,3.404,206,4.935,233,5.39,415,5.73,1336,3.625,1337,5.091,1338,5.875,1339,5.875,1340,6.922]],["title/miscellaneous/functions.html",[1336,2.004,1341,4.063]],["body/miscellaneous/functions.html",[7,0.853,11,0.013,26,0.013,27,0.013,34,3.19,1300,5.309,1336,3.78,1341,5.309,1342,6.126]],["title/index.html",[7,0.452,1343,3.248,1344,3.248]],["body/index.html",[4,0.111,11,0.015,26,0.009,27,0.009,51,2.961,124,5.167,198,4.277,549,1.76,940,2.789,1111,2.789,1287,2.506,1288,4.036,1345,3.219,1346,3.219,1347,5.473,1348,4.658,1349,3.219,1350,3.219,1351,3.219,1352,3.219,1353,4.658,1354,2.789,1355,5.473,1356,3.219,1357,3.219,1358,5.998,1359,3.219,1360,7.007,1361,3.219,1362,6.843,1363,3.219,1364,3.219,1365,3.219,1366,4.658,1367,3.219,1368,4.658,1369,3.219,1370,5.473,1371,3.219,1372,4.658,1373,3.219,1374,3.219,1375,3.219,1376,3.219,1377,3.219,1378,5.998,1379,7.007,1380,6.635,1381,3.219,1382,4.658,1383,3.219,1384,3.219,1385,3.219,1386,3.219,1387,4.658,1388,5.998,1389,3.219,1390,4.658,1391,3.219,1392,3.219,1393,4.658,1394,6.635,1395,5.998,1396,3.219,1397,4.658,1398,3.219,1399,3.219,1400,3.219,1401,3.219,1402,5.998,1403,3.219,1404,3.219,1405,3.219,1406,3.219,1407,4.658,1408,3.219,1409,3.219,1410,3.219,1411,3.219,1412,3.219,1413,4.658,1414,3.219,1415,3.219,1416,3.219,1417,4.658,1418,3.219,1419,3.219,1420,5.198,1421,4.658,1422,3.219,1423,3.219,1424,3.219,1425,3.219,1426,3.219,1427,3.219,1428,3.219,1429,3.219,1430,4.658,1431,3.219,1432,3.219,1433,3.219,1434,3.219,1435,5.473,1436,3.219,1437,3.219,1438,3.219,1439,3.219,1440,3.219,1441,4.658,1442,3.219,1443,3.219,1444,3.219,1445,3.219,1446,3.219,1447,4.658,1448,3.219,1449,3.219,1450,3.219,1451,4.658,1452,4.658,1453,3.219,1454,3.219,1455,3.219,1456,3.219,1457,3.219,1458,3.219,1459,3.219,1460,3.219,1461,3.219,1462,3.219,1463,3.219,1464,2.789,1465,3.219,1466,3.219,1467,3.219,1468,3.219,1469,3.219,1470,3.219,1471,2.789]],["title/modules.html",[30,2.27]],["body/modules.html",[11,0.012,26,0.012,27,0.012,29,3.742,30,2.236,40,3.467,41,3.238,42,3.467,43,3.467,44,3.467,45,3.467,46,3.238,47,3.467,48,3.238,1420,6.883,1472,7.942,1473,7.942,1474,7.942]],["title/overview.html",[1475,4.617]],["body/overview.html",[2,1.045,11,0.015,18,3.346,26,0.009,27,0.009,28,0.965,29,5.585,30,1.349,31,1.349,32,1.482,33,1.482,34,1.349,35,1.482,36,1.482,37,2.744,38,2.744,39,2.744,40,4.975,41,4.201,42,4.359,43,4.359,44,4.359,45,4.609,46,4.201,47,4.359,48,4.201,49,2.154,50,1.482,51,1.413,103,1.235,109,1.045,180,4.201,183,3.724,258,2.744,259,2.744,260,2.744,262,3.583,263,3.583,289,3.947,328,2.466,394,2.744,395,2.744,396,2.744,397,4.201,441,1.732,511,4.201,521,2.466,537,2.744,538,2.744,539,2.744,641,4.201,654,2.744,655,2.744,656,2.744,718,4.201,728,2.744,729,2.744,730,2.744,776,2.466,855,4.201,883,2.744,884,2.744,886,2.744,1059,2.744,1060,2.744,1061,2.744,1178,4.201,1196,2.744,1197,2.744,1198,2.744,1258,2.744,1259,2.744,1260,2.744,1475,2.744,1476,3.167,1477,3.167,1478,3.167,1479,3.167]],["title/properties.html",[372,1.829,1309,2.815]],["body/properties.html",[11,0.015,26,0.013,27,0.013,372,2.362,1354,5.247,1464,5.247,1471,5.247,1480,6.055,1481,6.055,1482,6.055]],["title/miscellaneous/variables.html",[275,3.651,1336,2.004]],["body/miscellaneous/variables.html",[7,0.8,11,0.015,15,1.616,26,0.013,27,0.013,86,0.915,205,2.825,275,4.474,414,4.513,415,5.32,786,5.32,1181,6,1296,4.979,1336,3.545,1483,6.831,1484,5.746]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1481,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1302,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["0987654321",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["1",{"_index":521,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/RefreshTokenStrategy.html":{},"overview.html":{}}}],["1/5",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{},"overview.html":{}}}],["11.0.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["11.0.10",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["1234567890",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["14",{"_index":1478,"title":{},"body":{"overview.html":{}}}],["15m",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["16.4.7",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1479,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":689,"title":{},"body":{"entities/Profil.html":{}}}],["3.12.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["4.0.0",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["5.0.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1477,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["789",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["7d",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["9",{"_index":1476,"title":{},"body":{"overview.html":{}}}],["abc",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["accesstoken",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["actual",{"_index":959,"title":{},"body":{"injectables/TrajetService.html":{}}}],["adjust",{"_index":1095,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["admin",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{},"miscellaneous/enumerations.html":{}}}],["adresse",{"_index":684,"title":{},"body":{"entities/Profil.html":{}}}],["allowing",{"_index":1408,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1457,"title":{},"body":{"index.html":{}}}],["andwhere('date(trajet.datet",{"_index":936,"title":{},"body":{"injectables/TrajetService.html":{}}}],["andwhere('trajet.villea.id",{"_index":951,"title":{},"body":{"injectables/TrajetService.html":{}}}],["andwhere('villea.id",{"_index":935,"title":{},"body":{"injectables/TrajetService.html":{}}}],["apibody",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["apioperation",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["apiparam",{"_index":514,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["apitags",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["apitags('auth",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('inscription",{"_index":515,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["apitags('marque",{"_index":644,"title":{},"body":{"controllers/MarqueController.html":{}}}],["apitags('profil",{"_index":721,"title":{},"body":{"controllers/ProfilController.html":{}}}],["apitags('trajet",{"_index":858,"title":{},"body":{"controllers/TrajetController.html":{}}}],["apitags('utilisateur",{"_index":1043,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["apitags('ville",{"_index":1184,"title":{},"body":{"controllers/VilleController.html":{}}}],["apitags('voiture",{"_index":1251,"title":{},"body":{"controllers/VoitureController.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1380,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1353,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1144,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["async",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["auth",{"_index":108,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"controllers/AuthController.html":{},"injectables/EmailService.html":{},"coverage.html":{}}}],["auth.controller",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{}}}],["auth.dto.ts",{"_index":368,"title":{},"body":{"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["auth.service",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":111,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentifi",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":593,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["authguard('jwt",{"_index":583,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1464,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":180,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["avec",{"_index":482,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/TrajetController.html":{}}}],["await",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["aws",{"_index":1397,"title":{},"body":{"index.html":{}}}],["backers",{"_index":1458,"title":{},"body":{"index.html":{}}}],["based",{"_index":1392,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{}}}],["bcrypt.compare(password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(refreshtoken",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(token",{"_index":1103,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["bcryptjs",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["board",{"_index":1450,"title":{},"body":{"index.html":{}}}],["body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["body.password",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":784,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1474,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1472,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1348,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":584,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":586,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":432,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TrajetService.html":{}}}],["cette",{"_index":409,"title":{},"body":{"injectables/EmailService.html":{}}}],["changes",{"_index":1131,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["channel",{"_index":1423,"title":{},"body":{"index.html":{}}}],["check",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UtilisateurService.html":{},"index.html":{}}}],["civic",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["class",{"_index":21,"title":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":109,"title":{},"body":{"classes/Auth.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"overview.html":{}}}],["clicks",{"_index":1407,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1391,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_emailmodule",{"_index":394,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_exports",{"_index":395,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_emailmodule_providers",{"_index":396,"title":{},"body":{"modules/EmailModule.html":{},"overview.html":{}}}],["cluster_inscriptionmodule",{"_index":537,"title":{},"body":{"modules/InscriptionModule.html":{},"overview.html":{}}}],["cluster_inscriptionmodule_exports",{"_index":538,"title":{},"body":{"modules/InscriptionModule.html":{},"overview.html":{}}}],["cluster_inscriptionmodule_providers",{"_index":539,"title":{},"body":{"modules/InscriptionModule.html":{},"overview.html":{}}}],["cluster_marquemodule",{"_index":654,"title":{},"body":{"modules/MarqueModule.html":{},"overview.html":{}}}],["cluster_marquemodule_exports",{"_index":656,"title":{},"body":{"modules/MarqueModule.html":{},"overview.html":{}}}],["cluster_marquemodule_providers",{"_index":655,"title":{},"body":{"modules/MarqueModule.html":{},"overview.html":{}}}],["cluster_profilmodule",{"_index":728,"title":{},"body":{"modules/ProfilModule.html":{},"overview.html":{}}}],["cluster_profilmodule_exports",{"_index":729,"title":{},"body":{"modules/ProfilModule.html":{},"overview.html":{}}}],["cluster_profilmodule_providers",{"_index":730,"title":{},"body":{"modules/ProfilModule.html":{},"overview.html":{}}}],["cluster_trajetmodule",{"_index":883,"title":{},"body":{"modules/TrajetModule.html":{},"overview.html":{}}}],["cluster_trajetmodule_exports",{"_index":886,"title":{},"body":{"modules/TrajetModule.html":{},"overview.html":{}}}],["cluster_trajetmodule_imports",{"_index":885,"title":{},"body":{"modules/TrajetModule.html":{}}}],["cluster_trajetmodule_providers",{"_index":884,"title":{},"body":{"modules/TrajetModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule",{"_index":1059,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_exports",{"_index":1061,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_providers",{"_index":1060,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_villemodule",{"_index":1196,"title":{},"body":{"modules/VilleModule.html":{},"overview.html":{}}}],["cluster_villemodule_exports",{"_index":1198,"title":{},"body":{"modules/VilleModule.html":{},"overview.html":{}}}],["cluster_villemodule_providers",{"_index":1197,"title":{},"body":{"modules/VilleModule.html":{},"overview.html":{}}}],["cluster_voituremodule",{"_index":1258,"title":{},"body":{"modules/VoitureModule.html":{},"overview.html":{}}}],["cluster_voituremodule_exports",{"_index":1260,"title":{},"body":{"modules/VoitureModule.html":{},"overview.html":{}}}],["cluster_voituremodule_providers",{"_index":1259,"title":{},"body":{"modules/VoitureModule.html":{},"overview.html":{}}}],["column",{"_index":454,"title":{},"body":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{}}}],["column({nullable",{"_index":1011,"title":{},"body":{"entities/Utilisateur.html":{}}}],["column({type",{"_index":445,"title":{},"body":{"entities/Inscription.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{}}}],["come",{"_index":1414,"title":{},"body":{"index.html":{}}}],["common/enum/role.enum",{"_index":788,"title":{},"body":{"guards/RolesGuard.html":{}}}],["common/gaurds/jwtauthguard",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["common/gaurds/refreshauthguard",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["conducteur",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"miscellaneous/enumerations.html":{}}}],["conducteur.email",{"_index":957,"title":{},"body":{"injectables/TrajetService.html":{}}}],["conducteur@example.com",{"_index":962,"title":{},"body":{"injectables/TrajetService.html":{}}}],["conductor",{"_index":499,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["configmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["console.error(`failed",{"_index":928,"title":{},"body":{"injectables/TrajetService.html":{}}}],["console.log('received",{"_index":1053,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["console.log(updatedata",{"_index":1055,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["console.warn(`marque",{"_index":1140,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["const",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["constructor",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtStrategy.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["constructor(inscriptionrepository",{"_index":548,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["constructor(marquerepository",{"_index":664,"title":{},"body":{"injectables/MarqueService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["constructor(profilrepository",{"_index":736,"title":{},"body":{"injectables/ProfilService.html":{}}}],["constructor(reflector",{"_index":780,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(trajetrepository",{"_index":897,"title":{},"body":{"injectables/TrajetService.html":{}}}],["constructor(utilisateurrepository",{"_index":1075,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["constructor(utilisateurservice",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(villerepository",{"_index":1204,"title":{},"body":{"injectables/VilleService.html":{}}}],["constructor(voiturerepository",{"_index":1267,"title":{},"body":{"injectables/VoitureService.html":{}}}],["context",{"_index":589,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":793,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":792,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":794,"title":{},"body":{"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('inscription",{"_index":516,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["controller('marque",{"_index":645,"title":{},"body":{"controllers/MarqueController.html":{}}}],["controller('profil",{"_index":722,"title":{},"body":{"controllers/ProfilController.html":{}}}],["controller('trajet",{"_index":859,"title":{},"body":{"controllers/TrajetController.html":{}}}],["controller('utilisateur",{"_index":1044,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["controller('ville",{"_index":1185,"title":{},"body":{"controllers/VilleController.html":{}}}],["controller('voiture",{"_index":1252,"title":{},"body":{"controllers/VoitureController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["corolla",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["courriel",{"_index":438,"title":{},"body":{"injectables/EmailService.html":{}}}],["courses",{"_index":1429,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1287,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":1152,"title":{},"body":{"entities/Ville.html":{}}}],["create",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["create(@body",{"_index":517,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["create(createinscriptiondto",{"_index":473,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{}}}],["create(createmarquedto",{"_index":626,"title":{},"body":{"controllers/MarqueController.html":{},"injectables/MarqueService.html":{}}}],["create(createprofildto",{"_index":701,"title":{},"body":{"controllers/ProfilController.html":{},"injectables/ProfilService.html":{}}}],["create(createtrajetdto",{"_index":831,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["create(createutilisateurdto",{"_index":1026,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["create(createvilledto",{"_index":1166,"title":{},"body":{"controllers/VilleController.html":{},"injectables/VilleService.html":{}}}],["create(createvoituredto",{"_index":1243,"title":{},"body":{"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["createauthdto",{"_index":308,"title":{"classes/CreateAuthDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["createbyname",{"_index":625,"title":{},"body":{"controllers/MarqueController.html":{}}}],["createbyname(@body('nom",{"_index":648,"title":{},"body":{"controllers/MarqueController.html":{}}}],["createbyname(nom",{"_index":629,"title":{},"body":{"controllers/MarqueController.html":{}}}],["createdvoiture",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["createinscriptiondto",{"_index":369,"title":{"classes/CreateInscriptionDto.html":{}},"body":{"classes/CreateInscriptionDto.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"classes/UpdateInscriptionDto.html":{},"coverage.html":{}}}],["createmarquebyname",{"_index":663,"title":{},"body":{"injectables/MarqueService.html":{}}}],["createmarquebyname(nom",{"_index":668,"title":{},"body":{"injectables/MarqueService.html":{}}}],["createmarquedto",{"_index":376,"title":{"classes/CreateMarqueDto.html":{}},"body":{"classes/CreateMarqueDto.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"classes/UpdateMarqueDto.html":{},"coverage.html":{}}}],["createprofildto",{"_index":379,"title":{"classes/CreateProfilDto.html":{}},"body":{"classes/CreateProfilDto.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"classes/UpdateProfilDto.html":{},"coverage.html":{}}}],["createtrajetdto",{"_index":382,"title":{"classes/CreateTrajetDto.html":{}},"body":{"classes/CreateTrajetDto.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateTrajetDto.html":{},"coverage.html":{}}}],["createutilisateurdto",{"_index":385,"title":{"classes/CreateUtilisateurDto.html":{}},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["createvilledto",{"_index":388,"title":{"classes/CreateVilleDto.html":{}},"body":{"classes/CreateVilleDto.html":{},"classes/UpdateVilleDto.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"coverage.html":{}}}],["createvoituredto",{"_index":391,"title":{"classes/CreateVoitureDto.html":{}},"body":{"classes/CreateVoitureDto.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateVoitureDto.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["createwithids",{"_index":468,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{}}}],["createwithids(@param('utilisateurid",{"_index":522,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["createwithids(idutilisateur",{"_index":553,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["createwithids(idutilisateur:number",{"_index":577,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["createwithids(utilisateurid",{"_index":480,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["creating",{"_index":1141,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["crée",{"_index":631,"title":{},"body":{"controllers/MarqueController.html":{}}}],["créer",{"_index":475,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["current_timestamp",{"_index":447,"title":{},"body":{"entities/Inscription.html":{},"entities/Trajet.html":{}}}],["d'arrivée",{"_index":845,"title":{},"body":{"controllers/TrajetController.html":{}}}],["d'envoyer",{"_index":412,"title":{},"body":{"injectables/EmailService.html":{}}}],["d'un",{"_index":1034,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["d\\'arrivée",{"_index":862,"title":{},"body":{"controllers/TrajetController.html":{}}}],["d\\'un",{"_index":1049,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["database",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":444,"title":{},"body":{"entities/Inscription.html":{},"injectables/InscriptionService.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateTrajetDto.html":{}}}],["date'})@apiparam({name",{"_index":846,"title":{},"body":{"controllers/TrajetController.html":{}}}],["date(:datet",{"_index":937,"title":{},"body":{"injectables/TrajetService.html":{}}}],["date(datet",{"_index":867,"title":{},"body":{"controllers/TrajetController.html":{}}}],["dateinscription",{"_index":443,"title":{},"body":{"entities/Inscription.html":{},"injectables/InscriptionService.html":{}}}],["datenaissance",{"_index":685,"title":{},"body":{"entities/Profil.html":{}}}],["datet",{"_index":798,"title":{},"body":{"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateTrajetDto.html":{}}}],["datet.toisostring().split('t')[0",{"_index":938,"title":{},"body":{"injectables/TrajetService.html":{}}}],["de",{"_index":435,"title":{},"body":{"injectables/EmailService.html":{},"controllers/TrajetController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["decorator/roles.decorator",{"_index":787,"title":{},"body":{"guards/RolesGuard.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"classes/UpdateTrajetDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{}}}],["deeper",{"_index":1425,"title":{},"body":{"index.html":{}}}],["default",{"_index":414,"title":{},"body":{"injectables/EmailService.html":{},"entities/Inscription.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"miscellaneous/variables.html":{}}}],["default_secret",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateInscriptionDto.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["delete",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["delete(':id",{"_index":531,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":505,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1378,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1396,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1387,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1406,"title":{},"body":{"index.html":{}}}],["des",{"_index":1033,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["description",{"_index":1354,"title":{},"body":{"index.html":{},"properties.html":{}}}],["details",{"_index":878,"title":{},"body":{"controllers/TrajetController.html":{}}}],["details')@apioperation({summary",{"_index":837,"title":{},"body":{"controllers/TrajetController.html":{}}}],["development",{"_index":1363,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1437,"title":{},"body":{"index.html":{}}}],["discord",{"_index":1422,"title":{},"body":{"index.html":{}}}],["dive",{"_index":1424,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1288,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["donn",{"_index":413,"title":{},"body":{"injectables/EmailService.html":{}}}],["dotenv",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["dto/create",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["dto/update",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["du",{"_index":437,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TrajetService.html":{}}}],["dureedetrajet",{"_index":799,"title":{},"body":{"entities/Trajet.html":{}}}],["départ",{"_index":844,"title":{},"body":{"controllers/TrajetController.html":{}}}],["détails",{"_index":838,"title":{},"body":{"controllers/TrajetController.html":{}}}],["e2e",{"_index":1373,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1349,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1385,"title":{},"body":{"index.html":{}}}],["email",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"injectables/TrajetService.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["email/email.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/TrajetModule.html":{}}}],["email/email.service",{"_index":399,"title":{},"body":{"modules/EmailModule.html":{}}}],["email/email/email.service",{"_index":918,"title":{},"body":{"injectables/TrajetService.html":{}}}],["emailmodule",{"_index":41,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailModule.html":{},"modules/TrajetModule.html":{},"modules.html":{},"overview.html":{}}}],["emailservice",{"_index":397,"title":{"injectables/EmailService.html":{}},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/TrajetService.html":{},"coverage.html":{},"overview.html":{}}}],["enregistrer",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["ensure",{"_index":1111,"title":{},"body":{"injectables/UtilisateurService.html":{},"index.html":{}}}],["enterprise",{"_index":1440,"title":{},"body":{"index.html":{}}}],["entities",{"_index":441,"title":{},"body":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{},"overview.html":{}}}],["entities/inscription.entity",{"_index":542,"title":{},"body":{"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{}}}],["entities/marque.entity",{"_index":659,"title":{},"body":{"modules/MarqueModule.html":{},"injectables/MarqueService.html":{}}}],["entities/profil.entity",{"_index":733,"title":{},"body":{"modules/ProfilModule.html":{},"injectables/ProfilService.html":{}}}],["entities/trajet.entity",{"_index":889,"title":{},"body":{"modules/TrajetModule.html":{},"injectables/TrajetService.html":{}}}],["entities/utilisateur.entity",{"_index":1064,"title":{},"body":{"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["entities/ville.entity",{"_index":1201,"title":{},"body":{"modules/VilleModule.html":{},"injectables/VilleService.html":{}}}],["entities/voiture.entity",{"_index":1263,"title":{},"body":{"modules/VoitureModule.html":{},"injectables/VoitureService.html":{}}}],["entity",{"_index":440,"title":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{}},"body":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{},"coverage.html":{}}}],["entity(\"inscription",{"_index":463,"title":{},"body":{"entities/Inscription.html":{}}}],["entity(\"profil",{"_index":697,"title":{},"body":{"entities/Profil.html":{}}}],["entity('marque",{"_index":621,"title":{},"body":{"entities/Marque.html":{}}}],["entity('trajet",{"_index":825,"title":{},"body":{"entities/Trajet.html":{}}}],["entity('utilisateur",{"_index":1020,"title":{},"body":{"entities/Utilisateur.html":{}}}],["entity('ville",{"_index":1162,"title":{},"body":{"entities/Ville.html":{}}}],["entity('voiture",{"_index":1233,"title":{},"body":{"entities/Voiture.html":{}}}],["enum",{"_index":1013,"title":{},"body":{"entities/Utilisateur.html":{}}}],["enumerations",{"_index":1337,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["envoy",{"_index":431,"title":{},"body":{"injectables/EmailService.html":{}}}],["err",{"_index":592,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["error",{"_index":433,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TrajetService.html":{}}}],["error('invalid",{"_index":869,"title":{},"body":{"controllers/TrajetController.html":{}}}],["error('method",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"entities/Voiture.html":{}}}],["error('utilisteur",{"_index":1099,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["error(`failed",{"_index":929,"title":{},"body":{"injectables/TrajetService.html":{}}}],["error(`inscription",{"_index":569,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["error(`marque",{"_index":680,"title":{},"body":{"injectables/MarqueService.html":{}}}],["error(`no",{"_index":1284,"title":{},"body":{"injectables/VoitureService.html":{}}}],["error(`profil",{"_index":751,"title":{},"body":{"injectables/ProfilService.html":{}}}],["error(`trajet",{"_index":926,"title":{},"body":{"injectables/TrajetService.html":{}}}],["error(`utilisateur",{"_index":1110,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["error(`ville",{"_index":1218,"title":{},"body":{"injectables/VilleService.html":{}}}],["error(`voiture",{"_index":1282,"title":{},"body":{"injectables/VoitureService.html":{}}}],["error.stack",{"_index":439,"title":{},"body":{"injectables/EmailService.html":{}}}],["et",{"_index":483,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/TrajetController.html":{}}}],["example",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/UtilisateurController.html":{},"index.html":{}}}],["executioncontext",{"_index":587,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exists",{"_index":1122,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["experience",{"_index":1427,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["express",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":582,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{}}}],["extractjwt",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extracts",{"_index":939,"title":{},"body":{"injectables/TrajetService.html":{}}}],["fast",{"_index":1400,"title":{},"body":{"index.html":{}}}],["features",{"_index":1410,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":961,"title":{},"body":{"injectables/TrajetService.html":{}}}],["few",{"_index":1402,"title":{},"body":{"index.html":{}}}],["fields",{"_index":1114,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["findall",{"_index":469,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["findalltrajetswithdetails",{"_index":828,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["findbyemail",{"_index":1069,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyemail(email",{"_index":1079,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyid",{"_index":1070,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyid(id",{"_index":1081,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyname",{"_index":1165,"title":{},"body":{"controllers/VilleController.html":{},"injectables/VilleService.html":{}}}],["findbyname(@param('nom",{"_index":1192,"title":{},"body":{"controllers/VilleController.html":{}}}],["findbyname(nom",{"_index":1171,"title":{},"body":{"controllers/VilleController.html":{},"injectables/VilleService.html":{}}}],["findbyutilisateurid",{"_index":1266,"title":{},"body":{"injectables/VoitureService.html":{}}}],["findbyutilisateurid(utilisateurid",{"_index":1271,"title":{},"body":{"injectables/VoitureService.html":{}}}],["findlisteinscriptionsutilisateur",{"_index":1024,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findlisteinscriptionsutilisateur(@param('id",{"_index":1050,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findlisteinscriptionsutilisateur(id",{"_index":1030,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findlistinscriptionsforuser",{"_index":1071,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findlistinscriptionsforuser(id",{"_index":1083,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findone",{"_index":470,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["findone(@param('id",{"_index":527,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["findone(id",{"_index":492,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["findpassagersconducteur",{"_index":547,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["findpassagersconducteur(trajetid",{"_index":559,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["findpassengersandconductor",{"_index":471,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["findpassengersandconductor(@param('trajetid",{"_index":535,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["findpassengersandconductor(trajetid",{"_index":496,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["findtrajet",{"_index":829,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["findtrajet(villed",{"_index":841,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["findtrajetwithdetails",{"_index":830,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["findtrajetwithdetails(villed",{"_index":848,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["focus",{"_index":1409,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1444,"title":{},"body":{"index.html":{}}}],["fonction",{"_index":410,"title":{},"body":{"injectables/EmailService.html":{}}}],["format",{"_index":870,"title":{},"body":{"controllers/TrajetController.html":{}}}],["found",{"_index":570,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["framework",{"_index":1347,"title":{},"body":{"index.html":{}}}],["full",{"_index":1439,"title":{},"body":{"index.html":{}}}],["function",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1341,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1405,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":526,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["get(':id')@apioperation({summary",{"_index":493,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["get('all",{"_index":836,"title":{},"body":{"controllers/TrajetController.html":{}}}],["get('authenticated",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('details",{"_index":873,"title":{},"body":{"controllers/TrajetController.html":{}}}],["get('details')@apioperation({summary",{"_index":849,"title":{},"body":{"controllers/TrajetController.html":{}}}],["get('findbyname/:nom",{"_index":1191,"title":{},"body":{"controllers/VilleController.html":{}}}],["get('findbyname/:nom')@apioperation({summary",{"_index":1172,"title":{},"body":{"controllers/VilleController.html":{}}}],["get('findtrajet/:villed/:villea/:datet",{"_index":861,"title":{},"body":{"controllers/TrajetController.html":{}}}],["get('findtrajet/:villed/:villea/:datet')@apioperation({summary",{"_index":842,"title":{},"body":{"controllers/TrajetController.html":{}}}],["get('listeinscriptionsutilisateur/:id",{"_index":1048,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('listeinscriptionsutilisateur/:id')@apioperation({summary",{"_index":1031,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('listepassagersconducteur/:trajetid",{"_index":534,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["get('listepassagersconducteur/:trajetid')@apioperation({summary",{"_index":497,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["get('profil",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apioperation({summary",{"_index":488,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["getauthenticatedmessage",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["getconducteurforinscription",{"_index":893,"title":{},"body":{"injectables/TrajetService.html":{}}}],["getconducteurforinscription(inscriptionid",{"_index":907,"title":{},"body":{"injectables/TrajetService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinscriptionsfortrajet",{"_index":894,"title":{},"body":{"injectables/TrajetService.html":{}}}],["getinscriptionsfortrajet(trajetid",{"_index":910,"title":{},"body":{"injectables/TrajetService.html":{}}}],["getmany",{"_index":941,"title":{},"body":{"injectables/TrajetService.html":{}}}],["getprofile",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["getting",{"_index":1343,"title":{"index.html":{}},"body":{}}],["gmail",{"_index":422,"title":{},"body":{"injectables/EmailService.html":{}}}],["graph",{"_index":1432,"title":{},"body":{"index.html":{}}}],["grow",{"_index":1454,"title":{},"body":{"index.html":{}}}],["guard",{"_index":776,"title":{"guards/RolesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":778,"title":{},"body":{"guards/RolesGuard.html":{}}}],["hajjo.dev@gmail.com",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":585,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["handlerequest(err",{"_index":590,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["hands",{"_index":1426,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1415,"title":{},"body":{"index.html":{}}}],["hash",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedpassword",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashedtoken",{"_index":1102,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["hello",{"_index":106,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":1430,"title":{},"body":{"index.html":{}}}],["here",{"_index":1462,"title":{},"body":{"index.html":{}}}],["honda",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["host",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["https://nestjs.com",{"_index":1468,"title":{},"body":{"index.html":{}}}],["id",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshTokenStrategy.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["id'})@apiparam({name",{"_index":494,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["identifier",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":520,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["ids'})@apiparam({name",{"_index":484,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["idtrajet",{"_index":554,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["idutilisateur",{"_index":556,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["if(!isvalid",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!utilisateur",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(utilisateur",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["immatriculation",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"entities/Voiture.html":{}}}],["implemented",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"entities/Voiture.html":{}}}],["implements",{"_index":789,"title":{},"body":{"guards/RolesGuard.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateInscriptionDto.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{}}}],["information",{"_index":1389,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1412,"title":{},"body":{"index.html":{}}}],["inject",{"_index":921,"title":{},"body":{"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}}}],["injectable",{"_index":102,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{},"overview.html":{}}}],["injectrepository",{"_index":563,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["injectrepository(inscription",{"_index":564,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{}}}],["injectrepository(marque",{"_index":674,"title":{},"body":{"injectables/MarqueService.html":{},"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["injectrepository(profil",{"_index":745,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/UtilisateurService.html":{}}}],["injectrepository(trajet",{"_index":919,"title":{},"body":{"injectables/TrajetService.html":{}}}],["injectrepository(utilisateur",{"_index":746,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}}}],["injectrepository(ville",{"_index":1213,"title":{},"body":{"injectables/VilleService.html":{}}}],["injectrepository(voiture",{"_index":920,"title":{},"body":{"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["inscription",{"_index":62,"title":{"entities/Inscription.html":{}},"body":{"modules/AppModule.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"entities/Trajet.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"coverage.html":{}}}],["inscription'})@apibody({type",{"_index":478,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["inscription.controller",{"_index":541,"title":{},"body":{"modules/InscriptionModule.html":{}}}],["inscription.dto",{"_index":513,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"classes/UpdateInscriptionDto.html":{}}}],["inscription.dto.ts",{"_index":371,"title":{},"body":{"classes/CreateInscriptionDto.html":{},"classes/UpdateInscriptionDto.html":{},"coverage.html":{}}}],["inscription.dto.ts:2",{"_index":375,"title":{},"body":{"classes/CreateInscriptionDto.html":{}}}],["inscription.dto.ts:3",{"_index":374,"title":{},"body":{"classes/CreateInscriptionDto.html":{}}}],["inscription.dto.ts:7",{"_index":971,"title":{},"body":{"classes/UpdateInscriptionDto.html":{}}}],["inscription.dto.ts:8",{"_index":970,"title":{},"body":{"classes/UpdateInscriptionDto.html":{}}}],["inscription.service",{"_index":512,"title":{},"body":{"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{}}}],["inscription.trajet",{"_index":810,"title":{},"body":{"entities/Trajet.html":{}}}],["inscription.utilisateur",{"_index":576,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{}}}],["inscription.utilisateur.email",{"_index":953,"title":{},"body":{"injectables/TrajetService.html":{}}}],["inscription.utilisateur.voiture",{"_index":948,"title":{},"body":{"injectables/TrajetService.html":{}}}],["inscription.utilisateur.voiture.marque",{"_index":949,"title":{},"body":{"injectables/TrajetService.html":{}}}],["inscription/entities/inscription.entity",{"_index":890,"title":{},"body":{"modules/TrajetModule.html":{},"injectables/TrajetService.html":{}}}],["inscriptioncontroller",{"_index":466,"title":{"controllers/InscriptionController.html":{}},"body":{"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"coverage.html":{}}}],["inscriptionid",{"_index":909,"title":{},"body":{"injectables/TrajetService.html":{}}}],["inscriptionmodule",{"_index":42,"title":{"modules/InscriptionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InscriptionModule.html":{},"modules.html":{},"overview.html":{}}}],["inscriptionrepository",{"_index":551,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{}}}],["inscriptions",{"_index":490,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"entities/Trajet.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["inscriptions.map(inscription",{"_index":575,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["inscriptionservice",{"_index":511,"title":{"injectables/InscriptionService.html":{}},"body":{"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"coverage.html":{},"overview.html":{}}}],["install",{"_index":1404,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1361,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1433,"title":{},"body":{"index.html":{}}}],["isdate",{"_index":978,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["isglobal",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":980,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["isnan(parseddate.gettime",{"_index":868,"title":{},"body":{"controllers/TrajetController.html":{}}}],["isvalid",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["job",{"_index":1447,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":1449,"title":{},"body":{"index.html":{}}}],["john",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["john.doe@example.com",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["join",{"_index":1460,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":460,"title":{},"body":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Voiture.html":{}}}],["jointable",{"_index":824,"title":{},"body":{"entities/Trajet.html":{}}}],["jour",{"_index":716,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["jwt",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwt_access_expiration",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_access_secret",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":178,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/VilleController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":262,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1465,"title":{},"body":{"index.html":{}}}],["key",{"_index":1381,"title":{},"body":{"index.html":{}}}],["kms",{"_index":800,"title":{},"body":{"entities/Trajet.html":{},"classes/UpdateTrajetDto.html":{}}}],["l'envoi",{"_index":436,"title":{},"body":{"injectables/EmailService.html":{}}}],["la",{"_index":501,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/UtilisateurController.html":{}}}],["learn",{"_index":1418,"title":{},"body":{"index.html":{}}}],["leftjoinandselect('inscriptions.utilisateur",{"_index":943,"title":{},"body":{"injectables/TrajetService.html":{}}}],["leftjoinandselect('trajet.inscriptions",{"_index":942,"title":{},"body":{"injectables/TrajetService.html":{}}}],["leftjoinandselect('trajet.villea",{"_index":933,"title":{},"body":{"injectables/TrajetService.html":{}}}],["leftjoinandselect('trajet.villed",{"_index":932,"title":{},"body":{"injectables/TrajetService.html":{}}}],["leftjoinandselect('utilisateur.voiture",{"_index":944,"title":{},"body":{"injectables/TrajetService.html":{}}}],["leftjoinandselect('voiture.marque",{"_index":945,"title":{},"body":{"injectables/TrajetService.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["length",{"_index":688,"title":{},"body":{"entities/Profil.html":{}}}],["les",{"_index":707,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["license",{"_index":1471,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1452,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1446,"title":{},"body":{"index.html":{}}}],["liste",{"_index":1032,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["load",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{}}}],["loaded",{"_index":1112,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["logger",{"_index":401,"title":{},"body":{"injectables/EmailService.html":{}}}],["logger(emailservice.name",{"_index":416,"title":{},"body":{"injectables/EmailService.html":{}}}],["logging",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":960,"title":{},"body":{"injectables/TrajetService.html":{}}}],["login",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(utilisateur",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(userid",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":1390,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1442,"title":{},"body":{"index.html":{}}}],["lyon",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["mailoptions",{"_index":426,"title":{},"body":{"injectables/EmailService.html":{}}}],["makes",{"_index":1398,"title":{},"body":{"index.html":{}}}],["managing",{"_index":1411,"title":{},"body":{"index.html":{}}}],["manytomany",{"_index":823,"title":{},"body":{"entities/Trajet.html":{},"entities/Ville.html":{}}}],["manytoone",{"_index":461,"title":{},"body":{"entities/Inscription.html":{},"entities/Trajet.html":{},"entities/Ville.html":{},"entities/Voiture.html":{}}}],["manytoone(undefined",{"_index":451,"title":{},"body":{"entities/Inscription.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":816,"title":{},"body":{"entities/Trajet.html":{}}}],["map(arg0",{"_index":1234,"title":{},"body":{"entities/Voiture.html":{}}}],["marque",{"_index":64,"title":{"entities/Marque.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"injectables/TrajetService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Voiture.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["marque'})@apibody({type",{"_index":627,"title":{},"body":{"controllers/MarqueController.html":{}}}],["marque.controller",{"_index":658,"title":{},"body":{"modules/MarqueModule.html":{}}}],["marque.dto",{"_index":643,"title":{},"body":{"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"classes/UpdateMarqueDto.html":{}}}],["marque.dto.ts",{"_index":378,"title":{},"body":{"classes/CreateMarqueDto.html":{},"classes/UpdateMarqueDto.html":{},"coverage.html":{}}}],["marque.id",{"_index":1146,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["marque.service",{"_index":642,"title":{},"body":{"controllers/MarqueController.html":{},"modules/MarqueModule.html":{}}}],["marque.voitures",{"_index":1240,"title":{},"body":{"entities/Voiture.html":{}}}],["marque.voitures)@joincolumn({name",{"_index":1224,"title":{},"body":{"entities/Voiture.html":{}}}],["marque/entities/marque.entity",{"_index":1066,"title":{},"body":{"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{}}}],["marquecontroller",{"_index":623,"title":{"controllers/MarqueController.html":{}},"body":{"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"coverage.html":{}}}],["marqueid",{"_index":1147,"title":{},"body":{"injectables/UtilisateurService.html":{},"entities/Voiture.html":{}}}],["marquemodule",{"_index":43,"title":{"modules/MarqueModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MarqueModule.html":{},"modules.html":{},"overview.html":{}}}],["marquerepository",{"_index":666,"title":{},"body":{"injectables/MarqueService.html":{},"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["marques",{"_index":634,"title":{},"body":{"controllers/MarqueController.html":{}}}],["marqueservice",{"_index":641,"title":{"injectables/MarqueService.html":{}},"body":{"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"coverage.html":{},"overview.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":1394,"title":{},"body":{"index.html":{}}}],["message",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["metadata",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["mettre",{"_index":715,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["miscellaneous",{"_index":1336,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1451,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1366,"title":{},"body":{"index.html":{}}}],["modele",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"entities/Voiture.html":{}}}],["models/inscription/entities/inscription.entity",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["models/inscription/inscription.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["models/marque/entities/marque.entity",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["models/marque/marque.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["models/profil/profil.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["models/trajet/entities/trajet.entity",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["models/trajet/trajet.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["models/utilisateur/entities/utilisateur.entity",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["models/utilisateur/utilisateur.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["models/utilisateur/utilisateur.service",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/ville/entities/ville.entity",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["models/ville/ville.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["models/voiture/entities/voiture.entity",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["models/voiture/voiture.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1388,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":1466,"title":{},"body":{"index.html":{}}}],["name",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["name'})@apiparam({name",{"_index":632,"title":{},"body":{"controllers/MarqueController.html":{}}}],["need",{"_index":1438,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1097,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["nest",{"_index":1355,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1470,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1379,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":785,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":966,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"dependencies.html":{}}}],["new",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["newuser",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.id",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["node.js",{"_index":1346,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":418,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":420,"title":{},"body":{"injectables/EmailService.html":{}}}],["nom",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{}}}],["nom'})@apiparam({name",{"_index":1173,"title":{},"body":{"controllers/VilleController.html":{}}}],["non",{"_index":1100,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["notfoundexception",{"_index":1094,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["notfoundexception(`utilisateur",{"_index":1113,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["notification",{"_index":955,"title":{},"body":{"injectables/TrajetService.html":{}}}],["notifyconducteur",{"_index":895,"title":{},"body":{"injectables/TrajetService.html":{}}}],["notifyconducteur(inscriptionid",{"_index":912,"title":{},"body":{"injectables/TrajetService.html":{}}}],["notifyinscriptions",{"_index":896,"title":{},"body":{"injectables/TrajetService.html":{}}}],["notifyinscriptions(trajetid",{"_index":914,"title":{},"body":{"injectables/TrajetService.html":{}}}],["nouveau",{"_index":702,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{}}}],["nouvel",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["nouvelle",{"_index":477,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["nplace",{"_index":801,"title":{},"body":{"entities/Trajet.html":{},"classes/UpdateTrajetDto.html":{}}}],["npm",{"_index":1360,"title":{},"body":{"index.html":{}}}],["null",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}}}],["nullable",{"_index":1007,"title":{},"body":{"entities/Utilisateur.html":{}}}],["number",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"injectables/ProfilService.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["number'})@apibody({schema",{"_index":486,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/UtilisateurController.html":{}}}],["number'})@apibody({type",{"_index":639,"title":{},"body":{"controllers/MarqueController.html":{},"controllers/TrajetController.html":{},"controllers/VoitureController.html":{}}}],["number'})@apiparam({name",{"_index":485,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/TrajetController.html":{}}}],["number(process.env.db_port",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["obtenir",{"_index":705,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["offer",{"_index":1448,"title":{},"body":{"index.html":{}}}],["official",{"_index":1395,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":620,"title":{},"body":{"entities/Marque.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{}}}],["onetomany(undefined",{"_index":616,"title":{},"body":{"entities/Marque.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{}}}],["onetoone",{"_index":619,"title":{},"body":{"entities/Marque.html":{},"entities/Profil.html":{},"entities/Utilisateur.html":{},"entities/Voiture.html":{}}}],["onetoone(undefined",{"_index":694,"title":{},"body":{"entities/Profil.html":{},"entities/Utilisateur.html":{},"entities/Voiture.html":{}}}],["open",{"_index":1453,"title":{},"body":{"index.html":{}}}],["optional",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1475,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1309,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["par",{"_index":710,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["param",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["param('datet",{"_index":865,"title":{},"body":{"controllers/TrajetController.html":{}}}],["param('id",{"_index":1052,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["param('trajetid",{"_index":523,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["param('villea",{"_index":864,"title":{},"body":{"controllers/TrajetController.html":{}}}],["param('villed",{"_index":863,"title":{},"body":{"controllers/TrajetController.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["paris",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["parseddate",{"_index":866,"title":{},"body":{"controllers/TrajetController.html":{}}}],["part",{"_index":940,"title":{},"body":{"injectables/TrajetService.html":{},"index.html":{}}}],["partialtype",{"_index":965,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{}}}],["partialtype(createauthdto",{"_index":964,"title":{},"body":{"classes/UpdateAuthDto.html":{}}}],["partialtype(createinscriptiondto",{"_index":969,"title":{},"body":{"classes/UpdateInscriptionDto.html":{}}}],["partialtype(createmarquedto",{"_index":973,"title":{},"body":{"classes/UpdateMarqueDto.html":{}}}],["partialtype(createprofildto",{"_index":975,"title":{},"body":{"classes/UpdateProfilDto.html":{}}}],["partialtype(createtrajetdto",{"_index":977,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["partialtype(createutilisateurdto",{"_index":987,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["partialtype(createvilledto",{"_index":995,"title":{},"body":{"classes/UpdateVilleDto.html":{}}}],["partialtype(createvoituredto",{"_index":997,"title":{},"body":{"classes/UpdateVoitureDto.html":{}}}],["pass",{"_index":424,"title":{},"body":{"injectables/EmailService.html":{}}}],["passager",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["passengers",{"_index":498,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["passport",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passreqtocallback",{"_index":763,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["password",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{}}}],["patch",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["patch(':id",{"_index":529,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":508,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["patch('update/:id",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["patch('update/:id')@useguards(jwtauthguard)@apioperation({summary",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":1096,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["payload",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["payload.email",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["payload.sub",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["permet",{"_index":411,"title":{},"body":{"injectables/EmailService.html":{}}}],["place",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"entities/Voiture.html":{}}}],["platform",{"_index":1393,"title":{},"body":{"index.html":{}}}],["please",{"_index":1421,"title":{},"body":{"index.html":{}}}],["port",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":1386,"title":{},"body":{"index.html":{}}}],["post",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["post(':nom",{"_index":647,"title":{},"body":{"controllers/MarqueController.html":{}}}],["post(':nom')@apioperation({summary",{"_index":630,"title":{},"body":{"controllers/MarqueController.html":{}}}],["post('login",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(jwtauthguard)@apioperation({summary",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('nouvelleinscription/:utilisateurid/:trajetid",{"_index":519,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["post('nouvelleinscription/:utilisateurid/:trajetid')@apioperation({summary",{"_index":481,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["post('refresh",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@useguards(refreshauthguard)@apioperation({summary",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apioperation({summary",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apioperation({summary",{"_index":474,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["pour",{"_index":500,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["prefix",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["prenom",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{}}}],["primarygeneratedcolumn",{"_index":449,"title":{},"body":{"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"entities/Trajet.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{}}}],["private",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["prix",{"_index":802,"title":{},"body":{"entities/Trajet.html":{}}}],["process.env.db_database",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.email_pass",{"_index":425,"title":{},"body":{"injectables/EmailService.html":{}}}],["process.env.email_user",{"_index":423,"title":{},"body":{"injectables/EmailService.html":{}}}],["process.env.jwt_access_expiration",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_access_secret",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.jwt_refresh_secret",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["production",{"_index":1368,"title":{},"body":{"index.html":{}}}],["profil",{"_index":130,"title":{"entities/Profil.html":{}},"body":{"controllers/AuthController.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"entities/Utilisateur.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["profil'})@apibody({type",{"_index":703,"title":{},"body":{"controllers/ProfilController.html":{}}}],["profil.controller",{"_index":732,"title":{},"body":{"modules/ProfilModule.html":{}}}],["profil.dto",{"_index":720,"title":{},"body":{"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"classes/UpdateProfilDto.html":{}}}],["profil.dto.ts",{"_index":381,"title":{},"body":{"classes/CreateProfilDto.html":{},"classes/UpdateProfilDto.html":{},"coverage.html":{}}}],["profil.service",{"_index":719,"title":{},"body":{"controllers/ProfilController.html":{},"modules/ProfilModule.html":{}}}],["profil.utilisateur",{"_index":1006,"title":{},"body":{"entities/Utilisateur.html":{}}}],["profil/entities/profil.entity",{"_index":1065,"title":{},"body":{"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["profilcontroller",{"_index":699,"title":{"controllers/ProfilController.html":{}},"body":{"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"coverage.html":{}}}],["profilid",{"_index":1009,"title":{},"body":{"entities/Utilisateur.html":{}}}],["profilimage",{"_index":686,"title":{},"body":{"entities/Profil.html":{}}}],["profilmodule",{"_index":44,"title":{"modules/ProfilModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfilModule.html":{},"modules.html":{},"overview.html":{}}}],["profilrepository",{"_index":739,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/UtilisateurService.html":{}}}],["profils",{"_index":708,"title":{},"body":{"controllers/ProfilController.html":{}}}],["profilservice",{"_index":718,"title":{"injectables/ProfilService.html":{}},"body":{"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1345,"title":{},"body":{"index.html":{}}}],["project",{"_index":1358,"title":{},"body":{"index.html":{}}}],["promise",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["properties",{"_index":372,"title":{"properties.html":{}},"body":{"classes/CreateInscriptionDto.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"entities/Marque.html":{},"entities/Profil.html":{},"classes/RegisterUtilisateurDto.html":{},"entities/Trajet.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"entities/Ville.html":{},"entities/Voiture.html":{},"properties.html":{}}}],["propertykey",{"_index":1239,"title":{},"body":{"entities/Voiture.html":{}}}],["provided",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["query",{"_index":854,"title":{},"body":{"controllers/TrajetController.html":{}}}],["query('datet",{"_index":876,"title":{},"body":{"controllers/TrajetController.html":{}}}],["query('villea",{"_index":875,"title":{},"body":{"controllers/TrajetController.html":{}}}],["query('villed",{"_index":874,"title":{},"body":{"controllers/TrajetController.html":{}}}],["questions",{"_index":1419,"title":{},"body":{"index.html":{}}}],["read",{"_index":1461,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["ready",{"_index":1377,"title":{},"body":{"index.html":{}}}],["real",{"_index":1434,"title":{},"body":{"index.html":{}}}],["refeshtoken",{"_index":999,"title":{},"body":{"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["reflect",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":781,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh(@req",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(id",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh(id:number",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh(req",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshauthguard",{"_index":176,"title":{"injectables/RefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RefreshAuthGuard.html":{},"coverage.html":{}}}],["refreshtoken",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UtilisateurService.html":{}}}],["refreshtoken(id",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokenstrategy",{"_index":263,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["refus",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["register",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(registeruserdto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerutilisateurdto",{"_index":154,"title":{"classes/RegisterUtilisateurDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"coverage.html":{}}}],["relations",{"_index":574,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["remove",{"_index":472,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["remove(@param('id",{"_index":532,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["remove(id",{"_index":504,"title":{},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["replace",{"_index":958,"title":{},"body":{"injectables/TrajetService.html":{}}}],["repository",{"_index":549,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{},"index.html":{}}}],["req",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["req.headers.authorization?.split",{"_index":764,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["req.user.refreshtoken",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":1054,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["requiredroles",{"_index":790,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":795,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiring",{"_index":1401,"title":{},"body":{"index.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}],["resources",{"_index":1413,"title":{},"body":{"index.html":{}}}],["result",{"_index":428,"title":{},"body":{"injectables/EmailService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["role",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["role.conducteur",{"_index":1021,"title":{},"body":{"entities/Utilisateur.html":{}}}],["roles",{"_index":1181,"title":{},"body":{"controllers/VilleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.conducteur",{"_index":1188,"title":{},"body":{"controllers/VilleController.html":{}}}],["roles_key",{"_index":786,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":777,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"controllers/VilleController.html":{},"coverage.html":{}}}],["run",{"_index":1362,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1384,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1130,"title":{},"body":{"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["save(voiture",{"_index":1275,"title":{},"body":{"injectables/VoitureService.html":{}}}],["scalable",{"_index":1350,"title":{},"body":{"index.html":{}}}],["schema",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/UtilisateurController.html":{}}}],["secret",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["sendemail",{"_index":403,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemail(to",{"_index":405,"title":{},"body":{"injectables/EmailService.html":{}}}],["server",{"_index":1351,"title":{},"body":{"index.html":{}}}],["service",{"_index":421,"title":{},"body":{"injectables/EmailService.html":{}}}],["setmetadata('roles_key",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1359,"title":{},"body":{"index.html":{}}}],["si",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["side",{"_index":1352,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1403,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Auth.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAuthDto.html":{},"classes/CreateInscriptionDto.html":{},"classes/CreateMarqueDto.html":{},"classes/CreateProfilDto.html":{},"classes/CreateTrajetDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVilleDto.html":{},"classes/CreateVoitureDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"modules/MarqueModule.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"index.html":{}}}],["sponsors",{"_index":1456,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":1342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../role.enum.ts",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":104,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:105",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:112",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:119",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:84",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:91",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:98",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:101",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:118",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:131",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:67",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/create",{"_index":367,"title":{},"body":{"classes/CreateAuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/update",{"_index":963,"title":{},"body":{"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":110,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:14",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:6",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/refresh.strategy.ts",{"_index":758,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/refresh.strategy.ts:15",{"_index":761,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/auth/strategies/refresh.strategy.ts:6",{"_index":759,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/common/enum/role.enum",{"_index":774,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/VilleController.html":{}}}],["src/common/enum/role.enum.ts",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/gaurds/jwtauthguard",{"_index":1183,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/common/gaurds/jwtauthguard.ts",{"_index":581,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/common/gaurds/jwtauthguard.ts:11",{"_index":591,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/common/gaurds/jwtauthguard.ts:6",{"_index":588,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["src/common/gaurds/refreshauthguard.ts",{"_index":754,"title":{},"body":{"injectables/RefreshAuthGuard.html":{},"coverage.html":{}}}],["src/common/gaurds/refreshauthguard.ts:10",{"_index":756,"title":{},"body":{"injectables/RefreshAuthGuard.html":{}}}],["src/common/gaurds/refreshauthguard.ts:6",{"_index":755,"title":{},"body":{"injectables/RefreshAuthGuard.html":{}}}],["src/common/gaurds/role/rolesgaurd",{"_index":1180,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/common/gaurds/role/rolesgaurd.ts",{"_index":779,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/common/gaurds/role/rolesgaurd.ts:12",{"_index":783,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/gaurds/role/rolesgaurd.ts:9",{"_index":782,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/decorator/roles.decorator",{"_index":1182,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/decorator/roles.decorator.ts",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/email/email.module.ts",{"_index":398,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/email/email/email.service.ts",{"_index":400,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/email/email/email.service.ts:25",{"_index":408,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email/email.service.ts:6",{"_index":417,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/email/email/email.service.ts:7",{"_index":404,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/main.ts",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/inscription/dto/create",{"_index":370,"title":{},"body":{"classes/CreateInscriptionDto.html":{},"coverage.html":{}}}],["src/models/inscription/dto/update",{"_index":968,"title":{},"body":{"classes/UpdateInscriptionDto.html":{},"coverage.html":{}}}],["src/models/inscription/entities/inscription.entity",{"_index":821,"title":{},"body":{"entities/Trajet.html":{},"entities/Utilisateur.html":{}}}],["src/models/inscription/entities/inscription.entity.ts",{"_index":442,"title":{},"body":{"entities/Inscription.html":{},"coverage.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:11",{"_index":458,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:14",{"_index":455,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:17",{"_index":448,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:23",{"_index":457,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:27",{"_index":453,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/entities/inscription.entity.ts:8",{"_index":450,"title":{},"body":{"entities/Inscription.html":{}}}],["src/models/inscription/inscription.controller.ts",{"_index":467,"title":{},"body":{"controllers/InscriptionController.html":{},"coverage.html":{}}}],["src/models/inscription/inscription.controller.ts:15",{"_index":479,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:31",{"_index":487,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:37",{"_index":491,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:44",{"_index":495,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:52",{"_index":510,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:59",{"_index":506,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.controller.ts:66",{"_index":503,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["src/models/inscription/inscription.module.ts",{"_index":540,"title":{},"body":{"modules/InscriptionModule.html":{}}}],["src/models/inscription/inscription.service.ts",{"_index":546,"title":{},"body":{"injectables/InscriptionService.html":{},"coverage.html":{}}}],["src/models/inscription/inscription.service.ts:10",{"_index":550,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:16",{"_index":552,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:21",{"_index":557,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:25",{"_index":558,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:33",{"_index":562,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:38",{"_index":561,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:44",{"_index":560,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/inscription/inscription.service.ts:52",{"_index":555,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["src/models/marque/dto/create",{"_index":377,"title":{},"body":{"classes/CreateMarqueDto.html":{},"coverage.html":{}}}],["src/models/marque/dto/update",{"_index":972,"title":{},"body":{"classes/UpdateMarqueDto.html":{},"coverage.html":{}}}],["src/models/marque/entities/marque.entity",{"_index":1232,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/marque/entities/marque.entity.ts",{"_index":612,"title":{},"body":{"entities/Marque.html":{},"coverage.html":{}}}],["src/models/marque/entities/marque.entity.ts:10",{"_index":615,"title":{},"body":{"entities/Marque.html":{}}}],["src/models/marque/entities/marque.entity.ts:14",{"_index":618,"title":{},"body":{"entities/Marque.html":{}}}],["src/models/marque/entities/marque.entity.ts:7",{"_index":614,"title":{},"body":{"entities/Marque.html":{}}}],["src/models/marque/marque.controller.ts",{"_index":624,"title":{},"body":{"controllers/MarqueController.html":{},"coverage.html":{}}}],["src/models/marque/marque.controller.ts:15",{"_index":628,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.controller.ts:22",{"_index":633,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.controller.ts:28",{"_index":635,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.controller.ts:35",{"_index":636,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.controller.ts:43",{"_index":640,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.controller.ts:50",{"_index":637,"title":{},"body":{"controllers/MarqueController.html":{}}}],["src/models/marque/marque.module.ts",{"_index":657,"title":{},"body":{"modules/MarqueModule.html":{}}}],["src/models/marque/marque.service.ts",{"_index":662,"title":{},"body":{"injectables/MarqueService.html":{},"coverage.html":{}}}],["src/models/marque/marque.service.ts:15",{"_index":667,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:20",{"_index":669,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:25",{"_index":670,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:29",{"_index":671,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:37",{"_index":673,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:42",{"_index":672,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/marque/marque.service.ts:9",{"_index":665,"title":{},"body":{"injectables/MarqueService.html":{}}}],["src/models/profil/dto/create",{"_index":380,"title":{},"body":{"classes/CreateProfilDto.html":{},"coverage.html":{}}}],["src/models/profil/dto/update",{"_index":974,"title":{},"body":{"classes/UpdateProfilDto.html":{},"coverage.html":{}}}],["src/models/profil/entities/profil.entity",{"_index":1019,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/profil/entities/profil.entity.ts",{"_index":683,"title":{},"body":{"entities/Profil.html":{},"coverage.html":{}}}],["src/models/profil/entities/profil.entity.ts:10",{"_index":693,"title":{},"body":{"entities/Profil.html":{}}}],["src/models/profil/entities/profil.entity.ts:13",{"_index":691,"title":{},"body":{"entities/Profil.html":{}}}],["src/models/profil/entities/profil.entity.ts:16",{"_index":690,"title":{},"body":{"entities/Profil.html":{}}}],["src/models/profil/entities/profil.entity.ts:20",{"_index":696,"title":{},"body":{"entities/Profil.html":{}}}],["src/models/profil/entities/profil.entity.ts:7",{"_index":692,"title":{},"body":{"entities/Profil.html":{}}}],["src/models/profil/profil.controller.ts",{"_index":700,"title":{},"body":{"controllers/ProfilController.html":{},"coverage.html":{}}}],["src/models/profil/profil.controller.ts:15",{"_index":704,"title":{},"body":{"controllers/ProfilController.html":{}}}],["src/models/profil/profil.controller.ts:21",{"_index":709,"title":{},"body":{"controllers/ProfilController.html":{}}}],["src/models/profil/profil.controller.ts:28",{"_index":711,"title":{},"body":{"controllers/ProfilController.html":{}}}],["src/models/profil/profil.controller.ts:37",{"_index":717,"title":{},"body":{"controllers/ProfilController.html":{}}}],["src/models/profil/profil.controller.ts:47",{"_index":713,"title":{},"body":{"controllers/ProfilController.html":{}}}],["src/models/profil/profil.module.ts",{"_index":731,"title":{},"body":{"modules/ProfilModule.html":{}}}],["src/models/profil/profil.service.ts",{"_index":735,"title":{},"body":{"injectables/ProfilService.html":{},"coverage.html":{}}}],["src/models/profil/profil.service.ts:10",{"_index":738,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/profil/profil.service.ts:19",{"_index":740,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/profil/profil.service.ts:24",{"_index":741,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/profil/profil.service.ts:28",{"_index":742,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/profil/profil.service.ts:38",{"_index":744,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/profil/profil.service.ts:43",{"_index":743,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/models/trajet/dto/create",{"_index":383,"title":{},"body":{"classes/CreateTrajetDto.html":{},"coverage.html":{}}}],["src/models/trajet/dto/update",{"_index":976,"title":{},"body":{"classes/UpdateTrajetDto.html":{},"coverage.html":{}}}],["src/models/trajet/entities/trajet.entity",{"_index":459,"title":{},"body":{"entities/Inscription.html":{},"entities/Ville.html":{}}}],["src/models/trajet/entities/trajet.entity.ts",{"_index":797,"title":{},"body":{"entities/Trajet.html":{},"coverage.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:11",{"_index":813,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:14",{"_index":812,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:17",{"_index":807,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:20",{"_index":814,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:23",{"_index":808,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:26",{"_index":820,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:29",{"_index":818,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:33",{"_index":819,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:37",{"_index":817,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:40",{"_index":815,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:43",{"_index":811,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/entities/trajet.entity.ts:8",{"_index":809,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/trajet/trajet.controller.ts",{"_index":827,"title":{},"body":{"controllers/TrajetController.html":{},"coverage.html":{}}}],["src/models/trajet/trajet.controller.ts:15",{"_index":833,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:24",{"_index":847,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:38",{"_index":835,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:44",{"_index":850,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:58",{"_index":839,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:65",{"_index":840,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:73",{"_index":853,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.controller.ts:80",{"_index":851,"title":{},"body":{"controllers/TrajetController.html":{}}}],["src/models/trajet/trajet.module.ts",{"_index":887,"title":{},"body":{"modules/TrajetModule.html":{}}}],["src/models/trajet/trajet.service.ts",{"_index":892,"title":{},"body":{"injectables/TrajetService.html":{},"coverage.html":{}}}],["src/models/trajet/trajet.service.ts:123",{"_index":915,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:13",{"_index":899,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:137",{"_index":913,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:147",{"_index":911,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:154",{"_index":908,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:27",{"_index":901,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:32",{"_index":902,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:36",{"_index":904,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:44",{"_index":917,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:58",{"_index":916,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:62",{"_index":905,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:72",{"_index":903,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/trajet/trajet.service.ts:96",{"_index":906,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/models/utilisateur/dto/create",{"_index":386,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"coverage.html":{}}}],["src/models/utilisateur/dto/register",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"coverage.html":{}}}],["src/models/utilisateur/dto/update",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Inscription.html":{},"entities/Voiture.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts",{"_index":998,"title":{},"body":{"entities/Utilisateur.html":{},"coverage.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:10",{"_index":1001,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:13",{"_index":1003,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:16",{"_index":1005,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:19",{"_index":1000,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:22",{"_index":1004,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:29",{"_index":1014,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:32",{"_index":1015,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:35",{"_index":1016,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:38",{"_index":1012,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:42",{"_index":1010,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:45",{"_index":1002,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/entities/utilisateur.entity.ts:49",{"_index":1018,"title":{},"body":{"entities/Utilisateur.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts",{"_index":1023,"title":{},"body":{"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:27",{"_index":1027,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:33",{"_index":1029,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:40",{"_index":1036,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:47",{"_index":1035,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:52",{"_index":1041,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:78",{"_index":1038,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.controller.ts:87",{"_index":1037,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/models/utilisateur/utilisateur.module.ts",{"_index":1062,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["src/models/utilisateur/utilisateur.service.ts",{"_index":1068,"title":{},"body":{"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:13",{"_index":1076,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:141",{"_index":1084,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:25",{"_index":1080,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:33",{"_index":1082,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:41",{"_index":1089,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:48",{"_index":1091,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:54",{"_index":1077,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:60",{"_index":1087,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:69",{"_index":1086,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:73",{"_index":1078,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:77",{"_index":1085,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/utilisateur/utilisateur.service.ts:89",{"_index":1093,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/models/ville/dto/create",{"_index":389,"title":{},"body":{"classes/CreateVilleDto.html":{},"coverage.html":{}}}],["src/models/ville/dto/update",{"_index":994,"title":{},"body":{"classes/UpdateVilleDto.html":{},"coverage.html":{}}}],["src/models/ville/entities/ville.entity",{"_index":822,"title":{},"body":{"entities/Trajet.html":{}}}],["src/models/ville/entities/ville.entity.ts",{"_index":1151,"title":{},"body":{"entities/Ville.html":{},"coverage.html":{}}}],["src/models/ville/entities/ville.entity.ts:10",{"_index":1157,"title":{},"body":{"entities/Ville.html":{}}}],["src/models/ville/entities/ville.entity.ts:13",{"_index":1155,"title":{},"body":{"entities/Ville.html":{}}}],["src/models/ville/entities/ville.entity.ts:16",{"_index":1161,"title":{},"body":{"entities/Ville.html":{}}}],["src/models/ville/entities/ville.entity.ts:19",{"_index":1159,"title":{},"body":{"entities/Ville.html":{}}}],["src/models/ville/entities/ville.entity.ts:7",{"_index":1156,"title":{},"body":{"entities/Ville.html":{}}}],["src/models/ville/ville.controller.ts",{"_index":1164,"title":{},"body":{"controllers/VilleController.html":{},"coverage.html":{}}}],["src/models/ville/ville.controller.ts:20",{"_index":1168,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.controller.ts:28",{"_index":1170,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.controller.ts:35",{"_index":1175,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.controller.ts:42",{"_index":1174,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.controller.ts:50",{"_index":1177,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.controller.ts:57",{"_index":1176,"title":{},"body":{"controllers/VilleController.html":{}}}],["src/models/ville/ville.module.ts",{"_index":1199,"title":{},"body":{"modules/VilleModule.html":{}}}],["src/models/ville/ville.service.ts",{"_index":1203,"title":{},"body":{"injectables/VilleService.html":{},"coverage.html":{}}}],["src/models/ville/ville.service.ts:15",{"_index":1207,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:20",{"_index":1208,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:24",{"_index":1210,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:32",{"_index":1209,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:40",{"_index":1212,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:45",{"_index":1211,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/ville/ville.service.ts:9",{"_index":1205,"title":{},"body":{"injectables/VilleService.html":{}}}],["src/models/voiture/dto/create",{"_index":392,"title":{},"body":{"classes/CreateVoitureDto.html":{},"classes/RegisterUtilisateurDto.html":{},"coverage.html":{}}}],["src/models/voiture/dto/update",{"_index":992,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVoitureDto.html":{},"coverage.html":{}}}],["src/models/voiture/entities/voiture.entity",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"entities/Marque.html":{},"entities/Utilisateur.html":{}}}],["src/models/voiture/entities/voiture.entity.ts",{"_index":1221,"title":{},"body":{"entities/Voiture.html":{},"coverage.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:14",{"_index":1222,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:17",{"_index":1227,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:20",{"_index":1228,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:23",{"_index":1223,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:26",{"_index":1231,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:29",{"_index":1226,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:33",{"_index":1230,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/entities/voiture.entity.ts:37",{"_index":1225,"title":{},"body":{"entities/Voiture.html":{}}}],["src/models/voiture/voiture.controller.ts",{"_index":1242,"title":{},"body":{"controllers/VoitureController.html":{},"coverage.html":{}}}],["src/models/voiture/voiture.controller.ts:15",{"_index":1245,"title":{},"body":{"controllers/VoitureController.html":{}}}],["src/models/voiture/voiture.controller.ts:21",{"_index":1246,"title":{},"body":{"controllers/VoitureController.html":{}}}],["src/models/voiture/voiture.controller.ts:28",{"_index":1247,"title":{},"body":{"controllers/VoitureController.html":{}}}],["src/models/voiture/voiture.controller.ts:36",{"_index":1249,"title":{},"body":{"controllers/VoitureController.html":{}}}],["src/models/voiture/voiture.controller.ts:43",{"_index":1248,"title":{},"body":{"controllers/VoitureController.html":{}}}],["src/models/voiture/voiture.module",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/models/voiture/voiture.module.ts",{"_index":1261,"title":{},"body":{"modules/VoitureModule.html":{}}}],["src/models/voiture/voiture.service",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/models/voiture/voiture.service.ts",{"_index":1265,"title":{},"body":{"injectables/VoitureService.html":{},"coverage.html":{}}}],["src/models/voiture/voiture.service.ts:10",{"_index":1268,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:18",{"_index":1269,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:23",{"_index":1276,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:27",{"_index":1270,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:31",{"_index":1273,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:41",{"_index":1272,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:49",{"_index":1277,"title":{},"body":{"injectables/VoitureService.html":{}}}],["src/models/voiture/voiture.service.ts:54",{"_index":1274,"title":{},"body":{"injectables/VoitureService.html":{}}}],["start",{"_index":1364,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1367,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1369,"title":{},"body":{"index.html":{}}}],["started",{"_index":1344,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1357,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1235,"title":{},"body":{"entities/Voiture.html":{},"dependencies.html":{}}}],["stay",{"_index":1441,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1382,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":1399,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/refresh.strategy",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["strategyoptionswithrequest",{"_index":762,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/InscriptionController.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"classes/RegisterUtilisateurDto.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"miscellaneous/variables.html":{}}}],["string'})@apibody({type",{"_index":509,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/ProfilController.html":{},"controllers/VilleController.html":{}}}],["sub",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":406,"title":{},"body":{"injectables/EmailService.html":{}}}],["successful",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["summary",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["super",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["super.canactivate(context",{"_index":594,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{}}}],["support",{"_index":1420,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supprimer",{"_index":712,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["svg",{"_index":1473,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1383,"title":{},"body":{"index.html":{}}}],["target",{"_index":1238,"title":{},"body":{"entities/Voiture.html":{}}}],["tel",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{}}}],["tes",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["test",{"_index":1372,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1375,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1374,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1370,"title":{},"body":{"index.html":{}}}],["text",{"_index":407,"title":{},"body":{"injectables/EmailService.html":{}}}],["thanks",{"_index":1455,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(user",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req.user.id",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(req.user.id",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.updateuser(id",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(body.email",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.emailservice.sendemail",{"_index":954,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.findone(id",{"_index":572,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/VilleService.html":{},"injectables/VoitureService.html":{}}}],["this.getconducteurforinscription(inscriptionid",{"_index":956,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.getinscriptionsfortrajet(trajetid",{"_index":952,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.inscriptionrepository.create",{"_index":578,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionrepository.create(createinscriptiondto",{"_index":565,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionrepository.delete(id",{"_index":573,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionrepository.find",{"_index":567,"title":{},"body":{"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{}}}],["this.inscriptionrepository.findone",{"_index":568,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionrepository.save(inscription",{"_index":566,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionrepository.update(id",{"_index":571,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["this.inscriptionservice.create(createinscriptiondto",{"_index":518,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.createwithids(+utilisateurid",{"_index":524,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.findall",{"_index":525,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.findone(+id",{"_index":528,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.findpassagersconducteur(+trajetid",{"_index":536,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.remove(+id",{"_index":533,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.inscriptionservice.update(+id",{"_index":530,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["this.jwtservice.sign(payload",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(`échec",{"_index":434,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.logger.log(`email",{"_index":430,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.login(utilisateur",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.marquerepository.create",{"_index":1142,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.marquerepository.create(createmarquedto",{"_index":675,"title":{},"body":{"injectables/MarqueService.html":{}}}],["this.marquerepository.create({nom",{"_index":677,"title":{},"body":{"injectables/MarqueService.html":{}}}],["this.marquerepository.delete(id",{"_index":682,"title":{},"body":{"injectables/MarqueService.html":{}}}],["this.marquerepository.find",{"_index":678,"title":{},"body":{"injectables/MarqueService.html":{}}}],["this.marquerepository.findone",{"_index":679,"title":{},"body":{"injectables/MarqueService.html":{},"injectables/UtilisateurService.html":{}}}],["this.marquerepository.save(marque",{"_index":676,"title":{},"body":{"injectables/MarqueService.html":{},"injectables/UtilisateurService.html":{}}}],["this.marquerepository.update(id",{"_index":681,"title":{},"body":{"injectables/MarqueService.html":{}}}],["this.marqueservice.create(createmarquedto",{"_index":646,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.marqueservice.createmarquebyname(nom",{"_index":649,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.marqueservice.findall",{"_index":650,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.marqueservice.findone(+id",{"_index":651,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.marqueservice.remove(+id",{"_index":653,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.marqueservice.update(+id",{"_index":652,"title":{},"body":{"controllers/MarqueController.html":{}}}],["this.profilrepository.create(createprofildto",{"_index":747,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilrepository.delete(id",{"_index":753,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilrepository.find",{"_index":749,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilrepository.findone",{"_index":750,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilrepository.save(profil",{"_index":748,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilrepository.save(utilisateur.profil",{"_index":1129,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.profilrepository.update(id",{"_index":752,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.profilservice.create(createprofildto",{"_index":723,"title":{},"body":{"controllers/ProfilController.html":{}}}],["this.profilservice.findall",{"_index":724,"title":{},"body":{"controllers/ProfilController.html":{}}}],["this.profilservice.findone(+id",{"_index":725,"title":{},"body":{"controllers/ProfilController.html":{}}}],["this.profilservice.remove(+id",{"_index":727,"title":{},"body":{"controllers/ProfilController.html":{}}}],["this.profilservice.update(+id",{"_index":726,"title":{},"body":{"controllers/ProfilController.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":791,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.trajetrepository.create(createtrajetdto",{"_index":922,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.createquerybuilder('trajet",{"_index":931,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.delete(id",{"_index":930,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.find",{"_index":924,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.findoneby",{"_index":925,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.save(trajet",{"_index":923,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetrepository.update(id",{"_index":927,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.trajetservice.create(createtrajetdto",{"_index":860,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.findall",{"_index":872,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.findalltrajetswithdetails",{"_index":879,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.findone(+id",{"_index":880,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.findtrajet(+villed",{"_index":871,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.findtrajetwithdetails(+villed",{"_index":877,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.remove(+id",{"_index":882,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.trajetservice.update(+id",{"_index":881,"title":{},"body":{"controllers/TrajetController.html":{}}}],["this.transporter",{"_index":419,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":429,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.utilisateurrepository.create(createutilisateurdto",{"_index":1106,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.delete(id",{"_index":1108,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.find",{"_index":1109,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.findone",{"_index":1098,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.save(user",{"_index":1107,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.save(utilisateur",{"_index":1150,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.update(id",{"_index":1105,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurrepository.update(utilisateurid",{"_index":1104,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.utilisateurservice.create",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.create(createutilisateurdto",{"_index":1045,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findall",{"_index":1046,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findbyemail(email",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.findbyid(id",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.findlistinscriptionsforuser(+id",{"_index":1051,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findone(+id",{"_index":1047,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.remove(+id",{"_index":1058,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.update(+id",{"_index":1057,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.update(id",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.updaterefreshtoken(utilisateur.id",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.updaterefreshtokennull(userid",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.updateutilisateurwithprofiletvoiture(+id",{"_index":1056,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.villerepository.create(createvilledto",{"_index":1214,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villerepository.delete(id",{"_index":1220,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villerepository.find",{"_index":1216,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villerepository.findone",{"_index":1217,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villerepository.save(ville",{"_index":1215,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villerepository.update(id",{"_index":1219,"title":{},"body":{"injectables/VilleService.html":{}}}],["this.villeservice.create(createvilledto",{"_index":1187,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.villeservice.findall",{"_index":1189,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.villeservice.findbyname(nom",{"_index":1193,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.villeservice.findone(+id",{"_index":1190,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.villeservice.remove(+id",{"_index":1195,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.villeservice.update(+id",{"_index":1194,"title":{},"body":{"controllers/VilleController.html":{}}}],["this.voiturerepository.create(createvoituredto",{"_index":1278,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voiturerepository.delete(id",{"_index":1286,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voiturerepository.find",{"_index":1280,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voiturerepository.findone",{"_index":1281,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voiturerepository.save(utilisateur.voiture",{"_index":1148,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.voiturerepository.save(voiture",{"_index":1279,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voiturerepository.update(id",{"_index":1285,"title":{},"body":{"injectables/VoitureService.html":{}}}],["this.voitureservice.create",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.voitureservice.create(createvoituredto",{"_index":1253,"title":{},"body":{"controllers/VoitureController.html":{}}}],["this.voitureservice.findall",{"_index":1254,"title":{},"body":{"controllers/VoitureController.html":{}}}],["this.voitureservice.findone(+id",{"_index":1255,"title":{},"body":{"controllers/VoitureController.html":{}}}],["this.voitureservice.remove(+id",{"_index":1257,"title":{},"body":{"controllers/VoitureController.html":{}}}],["this.voitureservice.save(await",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.voitureservice.update(+id",{"_index":1256,"title":{},"body":{"controllers/VoitureController.html":{}}}],["throw",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MarqueService.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"injectables/VoitureService.html":{}}}],["time",{"_index":1435,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":446,"title":{},"body":{"entities/Inscription.html":{},"entities/Trajet.html":{}}}],["token",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/UtilisateurService.html":{}}}],["touch",{"_index":1463,"title":{},"body":{"index.html":{}}}],["tous",{"_index":706,"title":{},"body":{"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{}}}],["toutes",{"_index":489,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["toyota",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["trajet",{"_index":60,"title":{"entities/Trajet.html":{}},"body":{"modules/AppModule.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"entities/Ville.html":{},"coverage.html":{}}}],["trajet'})@apibody({type",{"_index":832,"title":{},"body":{"controllers/TrajetController.html":{}}}],["trajet'})@apiparam({name",{"_index":502,"title":{},"body":{"controllers/InscriptionController.html":{}}}],["trajet.controller",{"_index":888,"title":{},"body":{"modules/TrajetModule.html":{}}}],["trajet.dto",{"_index":857,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts",{"_index":384,"title":{},"body":{"classes/CreateTrajetDto.html":{},"classes/UpdateTrajetDto.html":{},"coverage.html":{}}}],["trajet.dto.ts:10",{"_index":981,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts:13",{"_index":979,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts:16",{"_index":983,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts:19",{"_index":985,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts:22",{"_index":984,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.dto.ts:7",{"_index":982,"title":{},"body":{"classes/UpdateTrajetDto.html":{}}}],["trajet.inscriptions",{"_index":465,"title":{},"body":{"entities/Inscription.html":{}}}],["trajet.inscriptions)@joincolumn({name",{"_index":452,"title":{},"body":{"entities/Inscription.html":{}}}],["trajet.inscriptions.map(inscription",{"_index":947,"title":{},"body":{"injectables/TrajetService.html":{}}}],["trajet.service",{"_index":856,"title":{},"body":{"controllers/TrajetController.html":{},"modules/TrajetModule.html":{}}}],["trajet.villea",{"_index":1158,"title":{},"body":{"entities/Ville.html":{}}}],["trajet.villed",{"_index":1160,"title":{},"body":{"entities/Ville.html":{}}}],["trajet/entities/trajet.entity",{"_index":543,"title":{},"body":{"modules/InscriptionModule.html":{}}}],["trajetcontroller",{"_index":826,"title":{"controllers/TrajetController.html":{}},"body":{"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"coverage.html":{}}}],["trajetid",{"_index":373,"title":{},"body":{"classes/CreateInscriptionDto.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/TrajetService.html":{},"classes/UpdateInscriptionDto.html":{}}}],["trajetid:idtrajet",{"_index":580,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["trajetmodule",{"_index":45,"title":{"modules/TrajetModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TrajetModule.html":{},"modules.html":{},"overview.html":{}}}],["trajetrepository",{"_index":900,"title":{},"body":{"injectables/TrajetService.html":{}}}],["trajets",{"_index":834,"title":{},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["trajets.map(trajet",{"_index":946,"title":{},"body":{"injectables/TrajetService.html":{}}}],["trajetsarrivee",{"_index":1153,"title":{},"body":{"entities/Ville.html":{}}}],["trajetsdepart",{"_index":1154,"title":{},"body":{"entities/Ville.html":{}}}],["trajetservice",{"_index":855,"title":{"injectables/TrajetService.html":{}},"body":{"controllers/TrajetController.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"coverage.html":{},"overview.html":{}}}],["transporter",{"_index":402,"title":{},"body":{"injectables/EmailService.html":{}}}],["trouv",{"_index":1101,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["trouver",{"_index":843,"title":{},"body":{"controllers/TrajetController.html":{},"controllers/VilleController.html":{}}}],["true",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/RefreshTokenStrategy.html":{},"guards/RolesGuard.html":{},"entities/Utilisateur.html":{}}}],["true})@joincolumn({name",{"_index":1008,"title":{},"body":{"entities/Utilisateur.html":{}}}],["try",{"_index":427,"title":{},"body":{"injectables/EmailService.html":{},"injectables/TrajetService.html":{}}}],["twitter",{"_index":1469,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateInscriptionDto.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/Marque.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/RegisterUtilisateurDto.html":{},"guards/RolesGuard.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1237,"title":{},"body":{"entities/Voiture.html":{}}}],["typeorm",{"_index":462,"title":{},"body":{"entities/Inscription.html":{},"injectables/InscriptionService.html":{},"entities/Marque.html":{},"injectables/MarqueService.html":{},"entities/Profil.html":{},"injectables/ProfilService.html":{},"entities/Trajet.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"entities/Ville.html":{},"injectables/VilleService.html":{},"entities/Voiture.html":{},"injectables/VoitureService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{}}}],["typeormmodule.forfeature([inscription,trajet,utilisateur",{"_index":545,"title":{},"body":{"modules/InscriptionModule.html":{}}}],["typeormmodule.forfeature([marque,voiture",{"_index":661,"title":{},"body":{"modules/MarqueModule.html":{}}}],["typeormmodule.forfeature([profil,utilisateur,voiture",{"_index":734,"title":{},"body":{"modules/ProfilModule.html":{}}}],["typeormmodule.forfeature([trajet",{"_index":891,"title":{},"body":{"modules/TrajetModule.html":{}}}],["typeormmodule.forfeature([utilisateur,voiture,profil",{"_index":1067,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["typeormmodule.forfeature([ville",{"_index":1202,"title":{},"body":{"modules/VilleModule.html":{}}}],["typeormmodule.forfeature([voiture,marque",{"_index":1264,"title":{},"body":{"modules/VoitureModule.html":{}}}],["typeormmodule.forroot",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":967,"title":{},"body":{"classes/UpdateAuthDto.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateMarqueDto.html":{},"classes/UpdateProfilDto.html":{},"classes/UpdateTrajetDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVilleDto.html":{},"classes/UpdateVoitureDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":1356,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{}}}],["unauthorizedexception",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/RefreshAuthGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["unauthorizedexception('accès",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":757,"title":{},"body":{"injectables/RefreshAuthGuard.html":{}}}],["unauthorizedexception('no",{"_index":765,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["une",{"_index":476,"title":{},"body":{"controllers/InscriptionController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["unit",{"_index":1371,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtStrategy.html":{},"controllers/MarqueController.html":{},"injectables/RefreshTokenStrategy.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["unlicensed",{"_index":1482,"title":{},"body":{"properties.html":{}}}],["update",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["update(@param('id",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/TrajetController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["update(id",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["updateauthdto",{"_index":311,"title":{"classes/UpdateAuthDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/UpdateAuthDto.html":{},"coverage.html":{}}}],["updated",{"_index":1149,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata",{"_index":1040,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["updatedata.adresse",{"_index":1128,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.datenaissance",{"_index":1126,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.email",{"_index":1117,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.nom",{"_index":1115,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.prenom",{"_index":1116,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.profilimage",{"_index":1124,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.tel",{"_index":1119,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.ville",{"_index":1121,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.voiture.immatriculation",{"_index":1138,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.voiture.marque",{"_index":1139,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.voiture.modele",{"_index":1136,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatedata.voiture.place",{"_index":1134,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateduser",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateduser.id",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatedvoiture",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateinscriptiondto",{"_index":507,"title":{"classes/UpdateInscriptionDto.html":{}},"body":{"controllers/InscriptionController.html":{},"injectables/InscriptionService.html":{},"classes/UpdateInscriptionDto.html":{},"coverage.html":{}}}],["updatemarquedto",{"_index":638,"title":{"classes/UpdateMarqueDto.html":{}},"body":{"controllers/MarqueController.html":{},"injectables/MarqueService.html":{},"classes/UpdateMarqueDto.html":{},"coverage.html":{}}}],["updateprofildto",{"_index":714,"title":{"classes/UpdateProfilDto.html":{}},"body":{"controllers/ProfilController.html":{},"injectables/ProfilService.html":{},"classes/UpdateProfilDto.html":{},"coverage.html":{}}}],["updaterefreshtoken",{"_index":1072,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updaterefreshtoken(utilisateurid",{"_index":1088,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updaterefreshtokennull",{"_index":1073,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updaterefreshtokennull(id",{"_index":1090,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updates",{"_index":1443,"title":{},"body":{"index.html":{}}}],["updatetrajetdto",{"_index":852,"title":{"classes/UpdateTrajetDto.html":{}},"body":{"controllers/TrajetController.html":{},"injectables/TrajetService.html":{},"classes/UpdateTrajetDto.html":{},"coverage.html":{}}}],["updateuser",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser(id",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuserdto",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["updateuserprofile",{"_index":1025,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["updateuserprofile(id",{"_index":1039,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["updateutilisateurdto",{"_index":166,"title":{"classes/UpdateUtilisateurDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["updateutilisateurwithprofiletvoiture",{"_index":1074,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurwithprofiletvoiture(id",{"_index":1092,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatevilledto",{"_index":993,"title":{"classes/UpdateVilleDto.html":{}},"body":{"classes/UpdateVilleDto.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{},"coverage.html":{}}}],["updatevoituredto",{"_index":990,"title":{"classes/UpdateVoitureDto.html":{}},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVoitureDto.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["use",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InscriptionController.html":{},"controllers/MarqueController.html":{},"controllers/ProfilController.html":{},"controllers/UtilisateurController.html":{},"controllers/VilleController.html":{},"controllers/VoitureController.html":{}}}],["useguards(jwtauthguard",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('authenticated')@apioperation({summary",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@get('profil')@apioperation({summary",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard,rolesguard",{"_index":1186,"title":{},"body":{"controllers/VilleController.html":{}}}],["useguards(refreshauthguard",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(refreshauthguard)@get('refresh')@apioperation({summary",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["userid",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1436,"title":{},"body":{"index.html":{}}}],["utilisateur",{"_index":58,"title":{"entities/Utilisateur.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"injectables/JwtAuthGuard.html":{},"entities/Profil.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"injectables/RefreshAuthGuard.html":{},"guards/RolesGuard.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Voiture.html":{},"coverage.html":{}}}],["utilisateur'})@apibody({schema",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{}}}],["utilisateur'})@apibody({type",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["utilisateur.controller",{"_index":1063,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["utilisateur.dto",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.dto.ts",{"_index":387,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["utilisateur.dto.ts:10",{"_index":771,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:11",{"_index":772,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:12",{"_index":773,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:13",{"_index":988,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:14",{"_index":989,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:15",{"_index":991,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:5",{"_index":767,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{}}}],["utilisateur.dto.ts:6",{"_index":769,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{}}}],["utilisateur.dto.ts:7",{"_index":766,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{}}}],["utilisateur.dto.ts:8",{"_index":768,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:9",{"_index":770,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.email",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.id",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.inscriptions",{"_index":464,"title":{},"body":{"entities/Inscription.html":{}}}],["utilisateur.inscriptions)@joincolumn({name",{"_index":456,"title":{},"body":{"entities/Inscription.html":{}}}],["utilisateur.nom",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.password",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.prenom",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.profil",{"_index":698,"title":{},"body":{"entities/Profil.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.profil)@joincolumn",{"_index":695,"title":{},"body":{"entities/Profil.html":{}}}],["utilisateur.profil.adresse",{"_index":1127,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.profil.datenaissance",{"_index":1125,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.profil.profilimage",{"_index":1123,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.refeshtoken",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.roles?.includes(role",{"_index":796,"title":{},"body":{"guards/RolesGuard.html":{}}}],["utilisateur.service",{"_index":1042,"title":{},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{}}}],["utilisateur.tel",{"_index":1118,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.ville",{"_index":1120,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.voiture",{"_index":1132,"title":{},"body":{"injectables/UtilisateurService.html":{},"entities/Voiture.html":{}}}],["utilisateur.voiture)@joincolumn({name",{"_index":1229,"title":{},"body":{"entities/Voiture.html":{}}}],["utilisateur.voiture.immatriculation",{"_index":1137,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.voiture.marque",{"_index":1143,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.voiture.marqueid",{"_index":1145,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.voiture.modele",{"_index":1135,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur.voiture.place",{"_index":1133,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur/entities/utilisateur.entity",{"_index":544,"title":{},"body":{"modules/InscriptionModule.html":{},"injectables/InscriptionService.html":{},"entities/Profil.html":{},"modules/ProfilModule.html":{},"injectables/ProfilService.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{}}}],["utilisateurcontroller",{"_index":1022,"title":{"controllers/UtilisateurController.html":{}},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"coverage.html":{}}}],["utilisateurid",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateInscriptionDto.html":{},"entities/Inscription.html":{},"controllers/InscriptionController.html":{},"entities/Trajet.html":{},"classes/UpdateInscriptionDto.html":{},"classes/UpdateTrajetDto.html":{},"injectables/UtilisateurService.html":{},"entities/Voiture.html":{},"injectables/VoitureService.html":{}}}],["utilisateurid(arg0",{"_index":1236,"title":{},"body":{"entities/Voiture.html":{}}}],["utilisateurid:idutilisateur",{"_index":579,"title":{},"body":{"injectables/InscriptionService.html":{}}}],["utilisateurmodule",{"_index":46,"title":{"modules/UtilisateurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["utilisateurrepository",{"_index":737,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateurs",{"_index":1028,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["utilisateurservice",{"_index":289,"title":{"injectables/UtilisateurService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["validate",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(payload",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":760,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validateuser",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email:string",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":986,"title":{},"body":{"classes/UpdateTrajetDto.html":{},"dependencies.html":{}}}],["value",{"_index":415,"title":{},"body":{"injectables/EmailService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":687,"title":{},"body":{"entities/Profil.html":{}}}],["variable",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":275,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1480,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1428,"title":{},"body":{"index.html":{}}}],["ville",{"_index":66,"title":{"entities/Ville.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterUtilisateurDto.html":{},"entities/Trajet.html":{},"controllers/TrajetController.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"entities/Ville.html":{},"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"coverage.html":{}}}],["ville'})@apibody({type",{"_index":1167,"title":{},"body":{"controllers/VilleController.html":{}}}],["ville.controller",{"_index":1200,"title":{},"body":{"modules/VilleModule.html":{}}}],["ville.dto",{"_index":996,"title":{},"body":{"classes/UpdateVilleDto.html":{},"controllers/VilleController.html":{},"injectables/VilleService.html":{}}}],["ville.dto.ts",{"_index":390,"title":{},"body":{"classes/CreateVilleDto.html":{},"classes/UpdateVilleDto.html":{},"coverage.html":{}}}],["ville.service",{"_index":1179,"title":{},"body":{"controllers/VilleController.html":{},"modules/VilleModule.html":{}}}],["villea",{"_index":803,"title":{},"body":{"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["villeaid",{"_index":804,"title":{},"body":{"entities/Trajet.html":{},"classes/UpdateTrajetDto.html":{}}}],["villecontroller",{"_index":1163,"title":{"controllers/VilleController.html":{}},"body":{"controllers/VilleController.html":{},"modules/VilleModule.html":{},"coverage.html":{}}}],["villed",{"_index":805,"title":{},"body":{"entities/Trajet.html":{},"controllers/TrajetController.html":{},"injectables/TrajetService.html":{}}}],["villedid",{"_index":806,"title":{},"body":{"entities/Trajet.html":{},"classes/UpdateTrajetDto.html":{}}}],["villemodule",{"_index":47,"title":{"modules/VilleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/VilleModule.html":{},"modules.html":{},"overview.html":{}}}],["villerepository",{"_index":1206,"title":{},"body":{"injectables/VilleService.html":{}}}],["villes",{"_index":1169,"title":{},"body":{"controllers/VilleController.html":{}}}],["villeservice",{"_index":1178,"title":{"injectables/VilleService.html":{}},"body":{"controllers/VilleController.html":{},"modules/VilleModule.html":{},"injectables/VilleService.html":{},"coverage.html":{},"overview.html":{}}}],["visit",{"_index":1417,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1431,"title":{},"body":{"index.html":{}}}],["void",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"entities/Voiture.html":{}}}],["voiture",{"_index":68,"title":{"entities/Voiture.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/Marque.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"classes/RegisterUtilisateurDto.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"classes/UpdateUtilisateurDto.html":{},"entities/Utilisateur.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"entities/Voiture.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{}}}],["voiture'})@apibody({type",{"_index":1244,"title":{},"body":{"controllers/VoitureController.html":{}}}],["voiture.controller",{"_index":1262,"title":{},"body":{"modules/VoitureModule.html":{}}}],["voiture.dto",{"_index":775,"title":{},"body":{"classes/RegisterUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVoitureDto.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["voiture.dto.ts",{"_index":393,"title":{},"body":{"classes/CreateVoitureDto.html":{},"classes/UpdateVoitureDto.html":{},"coverage.html":{}}}],["voiture.marque",{"_index":617,"title":{},"body":{"entities/Marque.html":{}}}],["voiture.service",{"_index":1250,"title":{},"body":{"controllers/VoitureController.html":{},"modules/VoitureModule.html":{}}}],["voiture.utilisateur",{"_index":1017,"title":{},"body":{"entities/Utilisateur.html":{}}}],["voiture/entities/voiture.entity",{"_index":660,"title":{},"body":{"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"injectables/TrajetService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["voiturecontroller",{"_index":1241,"title":{"controllers/VoitureController.html":{}},"body":{"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"coverage.html":{}}}],["voitureentity",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["voitureid",{"_index":622,"title":{},"body":{"entities/Marque.html":{},"entities/Utilisateur.html":{}}}],["voituremodule",{"_index":48,"title":{"modules/VoitureModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/VoitureModule.html":{},"modules.html":{},"overview.html":{}}}],["voiturerepository",{"_index":898,"title":{},"body":{"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"injectables/VoitureService.html":{}}}],["voitures",{"_index":613,"title":{},"body":{"entities/Marque.html":{},"controllers/VoitureController.html":{},"injectables/VoitureService.html":{}}}],["voitures.length",{"_index":1283,"title":{},"body":{"injectables/VoitureService.html":{}}}],["voitureservice",{"_index":183,"title":{"injectables/VoitureService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/VoitureController.html":{},"modules/VoitureModule.html":{},"injectables/VoitureService.html":{},"coverage.html":{},"overview.html":{}}}],["vous",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["watch",{"_index":1365,"title":{},"body":{"index.html":{}}}],["website",{"_index":1467,"title":{},"body":{"index.html":{}}}],["where('trajet.villed.id",{"_index":950,"title":{},"body":{"injectables/TrajetService.html":{}}}],["where('villed.id",{"_index":934,"title":{},"body":{"injectables/TrajetService.html":{}}}],["working",{"_index":1416,"title":{},"body":{"index.html":{}}}],["world",{"_index":107,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":1445,"title":{},"body":{"index.html":{}}}],["xyz",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["you'd",{"_index":1459,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1376,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/InscriptionModule.html":{},"modules/MarqueModule.html":{},"modules/ProfilModule.html":{},"modules/TrajetModule.html":{},"modules/UtilisateurModule.html":{},"modules/VilleModule.html":{},"modules/VoitureModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nInscriptionModule\n\nInscriptionModule\n\nAppModule -->\n\nInscriptionModule->AppModule\n\n\n\n\n\nMarqueModule\n\nMarqueModule\n\nAppModule -->\n\nMarqueModule->AppModule\n\n\n\n\n\nProfilModule\n\nProfilModule\n\nAppModule -->\n\nProfilModule->AppModule\n\n\n\n\n\nTrajetModule\n\nTrajetModule\n\nAppModule -->\n\nTrajetModule->AppModule\n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nVilleModule\n\nVilleModule\n\nAppModule -->\n\nVilleModule->AppModule\n\n\n\n\n\nVoitureModule\n\nVoitureModule\n\nAppModule -->\n\nVoitureModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            InscriptionModule\n                        \n                        \n                            MarqueModule\n                        \n                        \n                            ProfilModule\n                        \n                        \n                            TrajetModule\n                        \n                        \n                            UtilisateurModule\n                        \n                        \n                            VilleModule\n                        \n                        \n                            VoitureModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './auth/auth.module';\nimport { Utilisateur } from './models/utilisateur/entities/utilisateur.entity';\nimport { Trajet } from './models/trajet/entities/trajet.entity';\nimport { Inscription } from './models/inscription/entities/inscription.entity';\nimport { Marque } from './models/marque/entities/marque.entity';\nimport { Ville } from './models/ville/entities/ville.entity';\nimport { Voiture } from './models/voiture/entities/voiture.entity';\nimport { UtilisateurModule } from './models/utilisateur/utilisateur.module';\nimport { TrajetModule } from './models/trajet/trajet.module';\nimport { MarqueModule } from './models/marque/marque.module';\nimport { VilleModule } from './models/ville/ville.module';\nimport { InscriptionModule } from './models/inscription/inscription.module';\nimport { VoitureModule } from './models/voiture/voiture.module';\nimport { ProfilModule } from './models/profil/profil.module';\nimport * as dotenv from 'dotenv';\nimport { ConfigModule } from '@nestjs/config';\nimport { EmailModule } from './email/email.module';\n\n\ndotenv.config();\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST,\n      port: Number(process.env.DB_PORT) || 3306,\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      autoLoadEntities: true,\n      synchronize: true,\n      // logging: true,\n    }),\n\n\n    AuthModule,\n    UtilisateurModule,\n    ProfilModule,\n    TrajetModule,\n    InscriptionModule,\n    MarqueModule,\n    VilleModule,\n    VoitureModule,\n    EmailModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getAuthenticatedMessage\n                            \n                            \n                                    \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getAuthenticatedMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthenticatedMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('authenticated')@ApiOperation({summary: 'Check si authenticated'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profil')@ApiOperation({summary: 'Get utilisateur profil'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(body)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'Login utilisateur'})@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Logout utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@UseGuards(RefreshAuthGuard)@ApiOperation({summary: 'Refresh token'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RefreshAuthGuard)@Get('refresh')@ApiOperation({summary: 'Validate refresh token'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: 'Enregistrer un nouvel utilisateur'})@ApiBody({type: RegisterUtilisateurDto, schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUserDto: UpdateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update/:id')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Update utilisateur'})@ApiBody({type: UpdateUtilisateurDto, schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UnauthorizedException, UseGuards, Req } from '@nestjs/common';\nimport { RefreshAuthGuard } from '../common/gaurds/RefreshAuthGuard';\nimport { JwtAuthGuard } from '../common/gaurds/JwtAuthGuard';\nimport { AuthService } from './auth.service';\nimport { Utilisateur } from 'src/models/utilisateur/entities/utilisateur.entity';\nimport { VoitureService } from 'src/models/voiture/voiture.service';\nimport { UpdateUtilisateurDto } from 'src/models/utilisateur/dto/update-utilisateur.dto';\nimport { ApiBody, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { RegisterUtilisateurDto } from 'src/models/utilisateur/dto/register-utilisateur.dto';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly voitureService: VoitureService\n  ) {}\n\n  @Post('register')\n  @ApiOperation({ summary: 'Enregistrer un nouvel utilisateur' })\n  @ApiBody({\n    type: RegisterUtilisateurDto,\n    schema: {\n      example: {\n        nom: 'John',\n        prenom: 'Doe',\n        email: 'john.doe@example.com',\n        password: '',\n        role: 'conducteur',\n        tel: '1234567890',\n        ville: 'Paris',\n        voiture: {\n          place: 5,\n          marque: 'Toyota',\n          modele: 'Corolla',\n          immatriculation: 'ABC-123',\n        },\n      },\n    },\n  })\n  async register(@Body() registerUserDto: RegisterUtilisateurDto) {\n    return this.authService.register(registerUserDto);\n  }\n\n  @Post('login')\n  @ApiOperation({ summary: 'Login utilisateur' })\n  @ApiBody({\n    schema: {\n      example: {\n        email: 'hajjo.dev@gmail.com',\n        password: '',\n      },\n    },\n  })\n  async login(@Body() body) {\n    const user = await this.authService.validateUser(body.email, body.password);\n    if (!user) throw new UnauthorizedException();\n    return this.authService.login(user);\n  }\n\n  @Patch('update/:id')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Update utilisateur' })\n  @ApiBody({\n    type: UpdateUtilisateurDto,\n    schema: {\n      example: {\n        nom: 'John',\n        prenom: 'Doe',\n        email: 'john.doe@example.com',\n        password: '',\n        role: 'admin',\n        tel: '0987654321',\n        ville: 'Lyon',\n        voiture: {\n          place: 4,\n          marque: 'Honda',\n          modele: 'Civic',\n          immatriculation: 'XYZ-789',\n        },\n      },\n    },\n  })\n  async update(@Param('id') id: number, @Body() updateUserDto: UpdateUtilisateurDto) {\n    return this.authService.updateUser(id, updateUserDto);\n  }\n\n  @Post('refresh')\n  @UseGuards(RefreshAuthGuard)\n  @ApiOperation({ summary: 'Refresh token' })\n  async refresh(@Req() req) {\n    return this.authService.refreshToken(req.user.id, req.user.refreshToken);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profil')\n  @ApiOperation({ summary: 'Get utilisateur profil' })\n  getProfile() {\n    return { message: 'Vous êtes authentifié !' };\n  }\n\n  @UseGuards(RefreshAuthGuard)\n  @Get('refresh')\n  @ApiOperation({ summary: 'Validate refresh token' })\n  refreshToken() {\n    return { message: 'Refresh token valid!' };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('authenticated')\n  @ApiOperation({ summary: 'Check si authenticated' })\n  getAuthenticatedMessage() {\n    return { message: 'vous êtes authentifié!' };\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Logout utilisateur' })\n  async logout(@Req() req) {\n    return this.authService.logout(req.user.id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUtilisateurModule->AuthModule\n\n\n\n\n\nVoitureModule\n\nVoitureModule\n\nAuthModule -->\n\nVoitureModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilisateurModule\n                        \n                        \n                            VoitureModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { RefreshTokenStrategy } from './strategies/refresh.strategy';\nimport { UtilisateurModule } from '../models/utilisateur/utilisateur.module'; // Import the Utilisateur module\nimport { ConfigModule } from '@nestjs/config';\nimport { VoitureModule } from 'src/models/voiture/voiture.module';\n\n\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(), // Load environment variables\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_ACCESS_SECRET, // Use JWT_ACCESS_SECRET\n      signOptions: { expiresIn: process.env.JWT_ACCESS_EXPIRATION }, // Use JWT_ACCESS_EXPIRATION\n    }),\n    UtilisateurModule,\n    VoitureModule,\n\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, RefreshTokenStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                refreshToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurService: UtilisateurService, jwtService: JwtService, voitureService: VoitureService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voitureService\n                                                  \n                                                        \n                                                                        VoitureService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(utilisateur: Utilisateur)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateur\n                                            \n                                                            Utilisateur\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(id: number, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(id: any, refreshToken: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUtilisateurDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: number, updateUserDto: UpdateUtilisateurDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { CreateAuthDto } from './dto/create-auth.dto';\nimport { UpdateAuthDto } from './dto/update-auth.dto';\nimport {UtilisateurService} from '../models/utilisateur/utilisateur.service';\nimport {JwtService} from '@nestjs/jwt';\nimport * as bcrypt from 'bcryptjs';\nimport { Utilisateur } from 'src/models/utilisateur/entities/utilisateur.entity';\nimport { VoitureService } from 'src/models/voiture/voiture.service';\nimport { UpdateUtilisateurDto } from 'src/models/utilisateur/dto/update-utilisateur.dto';\nimport { Voiture } from 'src/models/voiture/entities/voiture.entity';\nimport { RegisterUtilisateurDto } from 'src/models/utilisateur/dto/register-utilisateur.dto';\n\n@Injectable()\nexport class AuthService {\n  refreshToken(id: any, refreshToken: any) {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor(\n    private readonly utilisateurService: UtilisateurService,\n    private readonly jwtService: JwtService ,\n    private readonly voitureService: VoitureService,\n  ) {}\n\n  async validateUser(email:string , password : string){\n    const utilisateur = await this.utilisateurService.findByEmail(email);\n    if(utilisateur && (await bcrypt.compare(password, utilisateur.password))){\n      return utilisateur;\n    }\n\n    return null;\n  }\n\n\n   // Register a new user\n   async register(registerUserDto: RegisterUtilisateurDto): Promise {\n    \n    const { nom, prenom, email, password, role, tel, ville, voiture } = registerUserDto;\n    // Hash the password\n    const hashedPassword = await bcrypt.hash(password, 10);\n\n    // Create the user\n    const newUser = await this.utilisateurService.create({\n      nom,\n      prenom,\n      email,\n      password: hashedPassword,\n      role,\n      tel,\n      ville,\n\n    });\n    \n    let createdVoiture: Voiture | null = null;\n    if (voiture) {\n      const voitureEntity = this.voitureService.create({\n        ...voiture,\n        utilisateurId: newUser.id,\n      });\n      createdVoiture =  await this.voitureService.save(await voitureEntity);\n    }\n\n    return { newUser, createdVoiture};\n  }\n\n  \n  async updateUser(id: number, updateUserDto: UpdateUtilisateurDto): Promise {\n    const { nom, prenom, email, password, role, tel, ville, voiture } = updateUserDto;\n\n    // Hash the password if it is provided\n    let hashedPassword = password;\n    if (password) {\n      hashedPassword = await bcrypt.hash(password, 10);\n    }\n\n    // Update the user\n    const updatedUser = await this.utilisateurService.update(id, {\n      nom,\n      prenom,\n      email,\n      password: hashedPassword,\n      role,\n      tel,\n      ville,\n    });\n\n    let updatedVoiture: Voiture | null = null;\n    if (voiture) {\n      const voitureEntity = this.voitureService.create({\n        ...voiture,\n        utilisateurId: updatedUser.id,\n      });\n      updatedVoiture = await this.voitureService.save(await voitureEntity);\n    }\n\n    return { updatedUser, updatedVoiture };\n  }\n\n  \n\n  async login (utilisateur : Utilisateur){\n    const payload = {email : utilisateur.email, sub : utilisateur.id};\n    const accessToken = this.jwtService.sign(payload, { secret: process.env.JWT_ACCESS_SECRET, expiresIn: '15m' });\n    const refreshToken = this.jwtService.sign(payload, { secret: process.env.JWT_REFRESH_SECRET, expiresIn: '7d' });\n\n    await this.utilisateurService.updateRefreshToken(utilisateur.id, refreshToken);\n    return {\n      accessToken,\n      refreshToken,\n      userId : utilisateur.id,\n      nom : utilisateur.nom,\n      prenom : utilisateur.prenom,\n      email : utilisateur.email,\n    }\n \n  }\n\n  async refresh(id:number , refreshToken : string){\n    const utilisateur = await this.utilisateurService.findById(id);\n    if(!utilisateur || utilisateur.refeshToken !== refreshToken){\n      throw new UnauthorizedException('Accès refusé');\n    }\n\n    const isValid = await bcrypt.compare(refreshToken, utilisateur.refeshToken);\n    if(!isValid){\n      throw new UnauthorizedException('Accès refusé');\n    }\n    return this.login(utilisateur);\n  }\n  \n  async logout(userId: number) {\n    await this.utilisateurService.updateRefreshTokenNull(userId, null);\n    return { message: 'Logout successful' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuthDto.html":{"url":"classes/CreateAuthDto.html","title":"class - CreateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateAuthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInscriptionDto.html":{"url":"classes/CreateInscriptionDto.html","title":"class - CreateInscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/inscription/dto/create-inscription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trajetId\n                            \n                            \n                                utilisateurId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        trajetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/dto/create-inscription.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/dto/create-inscription.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateInscriptionDto {\n  utilisateurId: any;\n  trajetId: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMarqueDto.html":{"url":"classes/CreateMarqueDto.html","title":"class - CreateMarqueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMarqueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/marque/dto/create-marque.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMarqueDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfilDto.html":{"url":"classes/CreateProfilDto.html","title":"class - CreateProfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/profil/dto/create-profil.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProfilDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrajetDto.html":{"url":"classes/CreateTrajetDto.html","title":"class - CreateTrajetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrajetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/trajet/dto/create-trajet.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTrajetDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto.html":{"url":"classes/CreateUtilisateurDto.html","title":"class - CreateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUtilisateurDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVilleDto.html":{"url":"classes/CreateVilleDto.html","title":"class - CreateVilleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVilleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ville/dto/create-ville.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateVilleDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVoitureDto.html":{"url":"classes/CreateVoitureDto.html","title":"class - CreateVoitureDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVoitureDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/voiture/dto/create-voiture.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateVoitureDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailModule\n\nEmailModule\n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmailService } from './email/email.service';\n\n@Module({\n  providers: [EmailService],\n  exports: [EmailService],\n})\nexport class EmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/email/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/email/email/email.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(to: string, subject: string, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/email/email/email.service.ts:25\n                        \n                    \n\n\n            \n                \n                        cette fonction permet d'envoyer un email à un utilisateur donné\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/email/email/email.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transporter\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/email/email/email.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\n\n@Injectable()\nexport class EmailService {\n  private readonly logger = new Logger(EmailService.name);\n  private transporter;\n\n  constructor() {\n    this.transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: process.env.EMAIL_USER,\n        pass: process.env.EMAIL_PASS,\n      },\n    });\n  }\n/**\n * cette fonction permet d'envoyer un email à un utilisateur donné \n * @param to \n * @param subject \n * @param text \n * @returns \n */\n  async sendEmail(to: string, subject: string, text: string) {\n    const mailOptions = {\n      from: process.env.EMAIL_USER,\n      to,\n      subject,\n      text,\n    };\n\n    try {\n        const result = await this.transporter.sendMail(mailOptions);\n        this.logger.log(`Email envoyé à ${to}`);\n        return result;\n      } catch (error) {\n        this.logger.error(`Échec de l'envoi du courriel à ${to}`, error.stack);\n        throw error;\n      }\n}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Inscription.html":{"url":"entities/Inscription.html","title":"entity - Inscription","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Inscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/inscription/entities/inscription.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateInscription\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                trajet\n                            \n                            \n                                    \n                                trajetId\n                            \n                            \n                                    \n                                    \n                                utilisateur\n                            \n                            \n                                    \n                                utilisateurId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateInscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        trajet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trajet\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, trajet => trajet.inscriptions)@JoinColumn({name: 'trajetId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trajetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, utilisateur => utilisateur.inscriptions)@JoinColumn({name: 'utilisateurId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/entities/inscription.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Trajet } from 'src/models/trajet/entities/trajet.entity';\nimport { Utilisateur } from 'src/models/utilisateur/entities/utilisateur.entity';\nimport { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity(\"inscription\")\nexport class Inscription {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  utilisateurId: number;\n\n  @Column()\n  trajetId: number;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  dateInscription: Date;\n\n\n\n  @ManyToOne(() => Utilisateur, utilisateur => utilisateur.inscriptions)\n  @JoinColumn({ name: 'utilisateurId' })\n  utilisateur: Utilisateur;\n\n  @ManyToOne(() => Trajet, trajet => trajet.inscriptions)\n  @JoinColumn({ name: 'trajetId' })\n  trajet: Trajet;\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InscriptionController.html":{"url":"controllers/InscriptionController.html","title":"controller - InscriptionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InscriptionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/inscription/inscription.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                inscription\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                createWithIds\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                findPassengersAndConductor\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createInscriptionDto: CreateInscriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'créer une nouvelle inscription'})@ApiBody({type: CreateInscriptionDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInscriptionDto\n                                            \n                                                            CreateInscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        createWithIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWithIds(utilisateurId: number, trajetId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('nouvelleInscription/:utilisateurId/:trajetId')@ApiOperation({summary: 'Créer une nouvelle inscription avec utilisateur et trajet IDs'})@ApiParam({name: 'utilisateurId', type: 'number'})@ApiParam({name: 'trajetId', type: 'number'})@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get toutes inscriptions'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get inscription  ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findPassengersAndConductor\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPassengersAndConductor(trajetId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('listePassagersConducteur/:trajetId')@ApiOperation({summary: 'Get passengers et conductor pour la trajet'})@ApiParam({name: 'trajetId', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete inscription  ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateInscriptionDto: UpdateInscriptionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update inscription  ID'})@ApiParam({name: 'id', type: 'string'})@ApiBody({type: UpdateInscriptionDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/inscription/inscription.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateInscriptionDto\n                                            \n                                                            UpdateInscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { InscriptionService } from './inscription.service';\nimport { CreateInscriptionDto } from './dto/create-inscription.dto';\nimport { UpdateInscriptionDto } from './dto/update-inscription.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('inscription')\n@Controller('inscription')\nexport class InscriptionController {\n  constructor(private readonly inscriptionService: InscriptionService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'créer une nouvelle inscription' })\n  @ApiBody({ type: CreateInscriptionDto })\n  create(@Body() createInscriptionDto: CreateInscriptionDto) {\n    return this.inscriptionService.create(createInscriptionDto);\n  }\n\n  @Post('nouvelleInscription/:utilisateurId/:trajetId')\n  @ApiOperation({ summary: 'Créer une nouvelle inscription avec utilisateur et trajet IDs' })\n  @ApiParam({ name: 'utilisateurId', type: 'number' })\n  @ApiParam({ name: 'trajetId', type: 'number' })\n  @ApiBody({\n    schema: {\n      example: {\n        utilisateurId: 1,\n        trajetId: 1,\n      },\n    },\n  })\n  createWithIds(@Param('utilisateurId') utilisateurId: number, @Param('trajetId') trajetId: number) {\n    return this.inscriptionService.createWithIds(+utilisateurId, +trajetId);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get toutes inscriptions' })\n  findAll() {\n    return this.inscriptionService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get inscription  ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  findOne(@Param('id') id: string) {\n    return this.inscriptionService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update inscription  ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  @ApiBody({ type: UpdateInscriptionDto })\n  update(@Param('id') id: string, @Body() updateInscriptionDto: UpdateInscriptionDto) {\n    return this.inscriptionService.update(+id, updateInscriptionDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete inscription  ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  remove(@Param('id') id: string) {\n    return this.inscriptionService.remove(+id);\n  }\n\n  @Get('listePassagersConducteur/:trajetId')\n  @ApiOperation({ summary: 'Get passengers et conductor pour la trajet' })\n  @ApiParam({ name: 'trajetId', type: 'number' })\n  findPassengersAndConductor(@Param('trajetId') trajetId: number) {\n    return this.inscriptionService.findPassagersConducteur(+trajetId);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InscriptionModule.html":{"url":"modules/InscriptionModule.html","title":"module - InscriptionModule","body":"\n                   \n\n\n\n\n    Modules\n    InscriptionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InscriptionModule\n\n\n\ncluster_InscriptionModule_exports\n\n\n\ncluster_InscriptionModule_providers\n\n\n\n\nInscriptionService \n\nInscriptionService \n\n\n\nInscriptionModule\n\nInscriptionModule\n\nInscriptionService  -->\n\nInscriptionModule->InscriptionService \n\n\n\n\n\nInscriptionService\n\nInscriptionService\n\nInscriptionModule -->\n\nInscriptionService->InscriptionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/inscription/inscription.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InscriptionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InscriptionController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InscriptionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { InscriptionService } from './inscription.service';\nimport { InscriptionController } from './inscription.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Inscription } from './entities/inscription.entity';\nimport { Trajet } from '../trajet/entities/trajet.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Inscription,Trajet,Utilisateur])],\n  controllers: [InscriptionController],\n  providers: [InscriptionService],\n  exports : [InscriptionService]\n})\nexport class InscriptionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InscriptionService.html":{"url":"injectables/InscriptionService.html","title":"injectable - InscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/inscription/inscription.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createWithIds\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findPassagersConducteur\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(inscriptionRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/inscription/inscription.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createInscriptionDto: CreateInscriptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createInscriptionDto\n                                            \n                                                            CreateInscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWithIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWithIds(idutilisateur: number, idTrajet: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idutilisateur\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idTrajet\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPassagersConducteur\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPassagersConducteur(trajetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateInscriptionDto: UpdateInscriptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/inscription/inscription.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateInscriptionDto\n                                            \n                                                            UpdateInscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateInscriptionDto } from './dto/create-inscription.dto';\nimport { UpdateInscriptionDto } from './dto/update-inscription.dto';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Inscription } from './entities/inscription.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\n\n@Injectable()\nexport class InscriptionService {\n  constructor(\n    @InjectRepository(Inscription)\n    private readonly inscriptionRepository: Repository,\n  ) {}\n\n  async create(createInscriptionDto: CreateInscriptionDto): Promise {\n    const inscription = this.inscriptionRepository.create(createInscriptionDto);\n    return await this.inscriptionRepository.save(inscription);\n  }\n\n  async findAll(): Promise {\n    return await this.inscriptionRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const inscription = await this.inscriptionRepository.findOne({ where: { id } });\n    if (!inscription) {\n      throw new Error(`Inscription with id ${id} not found`);\n    }\n    return inscription;\n  }\n\n  async update(id: number, updateInscriptionDto: UpdateInscriptionDto): Promise {\n    await this.inscriptionRepository.update(id, updateInscriptionDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise {\n    await this.inscriptionRepository.delete(id);\n  }\n\n  \n\n  async findPassagersConducteur(trajetId: number): Promise {\n    const inscriptions = await this.inscriptionRepository.find({\n      where: { trajetId },\n      relations: ['utilisateur'],\n    });\n    return inscriptions.map(inscription => inscription.utilisateur);\n  }\n\n  async createWithIds(idutilisateur:number , idTrajet : number): Promise{\n    const inscription = this.inscriptionRepository.create({\n      utilisateurId:idutilisateur, \n      trajetId:idTrajet,\n      dateInscription: new Date(),\n  \n      });\n    return await this.inscriptionRepository.save(inscription);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/gaurds/JwtAuthGuard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/gaurds/JwtAuthGuard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, utilisateur, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/gaurds/JwtAuthGuard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                utilisateur\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n    \n  }\n\n  handleRequest(err, utilisateur, info) {\n    if (err || !utilisateur) {\n      throw err || new UnauthorizedException();\n    }\n    return utilisateur;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_ACCESS_SECRET ?? 'default_secret', \n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.sub, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Marque.html":{"url":"entities/Marque.html","title":"entity - Marque","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Marque\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/marque/entities/marque.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                voitures\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/marque/entities/marque.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/marque/entities/marque.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        voitures\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Voiture[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, voiture => voiture.marque)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/marque/entities/marque.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Voiture } from 'src/models/voiture/entities/voiture.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, OneToMany, JoinColumn } from 'typeorm';\n\n@Entity('marque')\nexport class Marque {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @OneToMany(() => Voiture, voiture => voiture.marque)\n  // @JoinColumn({ name: 'voitureId' }) \n  voitures: Voiture[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MarqueController.html":{"url":"controllers/MarqueController.html","title":"controller - MarqueController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MarqueController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/marque/marque.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                marque\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createByName\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMarqueDto: CreateMarqueDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Create a new marque'})@ApiBody({type: CreateMarqueDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarqueDto\n                                            \n                                                            CreateMarqueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        createByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    createByName(nom: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':nom')@ApiOperation({summary: 'Crée marque by name'})@ApiParam({name: 'nom', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nom\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get marques'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Get marque by ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Delete marque by ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateMarqueDto: UpdateMarqueDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Update marque by ID'})@ApiParam({name: 'id', type: 'number'})@ApiBody({type: UpdateMarqueDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/marque/marque.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMarqueDto\n                                            \n                                                            UpdateMarqueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { MarqueService } from './marque.service';\nimport { CreateMarqueDto } from './dto/create-marque.dto';\nimport { UpdateMarqueDto } from './dto/update-marque.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('marque')\n@Controller('marque')\nexport class MarqueController {\n  constructor(private readonly marqueService: MarqueService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Create a new marque' })\n  @ApiBody({ type: CreateMarqueDto })\n  create(@Body() createMarqueDto: CreateMarqueDto) {\n    return this.marqueService.create(createMarqueDto);\n  }\n\n  @Post(':nom')\n  @ApiOperation({ summary: 'Crée marque by name' })\n  @ApiParam({ name: 'nom', type: 'string' })\n  async createByName(@Body('nom') nom: string) {\n    return this.marqueService.createMarqueByName(nom);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get marques' })\n  findAll() {\n    return this.marqueService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Get marque by ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findOne(@Param('id') id: number) {\n    return this.marqueService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Update marque by ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiBody({ type: UpdateMarqueDto })\n  update(@Param('id') id: number, @Body() updateMarqueDto: UpdateMarqueDto) {\n    return this.marqueService.update(+id, updateMarqueDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Delete marque by ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  remove(@Param('id') id: number) {\n    return this.marqueService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MarqueModule.html":{"url":"modules/MarqueModule.html","title":"module - MarqueModule","body":"\n                   \n\n\n\n\n    Modules\n    MarqueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MarqueModule\n\n\n\ncluster_MarqueModule_providers\n\n\n\ncluster_MarqueModule_exports\n\n\n\n\nMarqueService \n\nMarqueService \n\n\n\nMarqueModule\n\nMarqueModule\n\nMarqueService  -->\n\nMarqueModule->MarqueService \n\n\n\n\n\nMarqueService\n\nMarqueService\n\nMarqueModule -->\n\nMarqueService->MarqueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/marque/marque.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MarqueService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MarqueController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MarqueService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MarqueService } from './marque.service';\nimport { MarqueController } from './marque.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Marque } from './entities/marque.entity';\nimport { Voiture } from '../voiture/entities/voiture.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Marque,Voiture] )],\n  controllers: [MarqueController],\n  providers: [MarqueService],\n  exports : [MarqueService]\n})\nexport class MarqueModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MarqueService.html":{"url":"injectables/MarqueService.html","title":"injectable - MarqueService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MarqueService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/marque/marque.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createMarqueByName\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(marqueRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/marque/marque.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        marqueRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMarqueDto: CreateMarqueDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMarqueDto\n                                            \n                                                            CreateMarqueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMarqueByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMarqueByName(nom: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nom\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateMarqueDto: UpdateMarqueDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/marque/marque.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMarqueDto\n                                            \n                                                            UpdateMarqueDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateMarqueDto } from './dto/create-marque.dto';\nimport { UpdateMarqueDto } from './dto/update-marque.dto';\nimport { Marque } from './entities/marque.entity';\n\n@Injectable()\nexport class MarqueService {\n  constructor(\n    @InjectRepository(Marque)\n    private readonly marqueRepository: Repository,\n  ) {}\n\n  async create(createMarqueDto: CreateMarqueDto): Promise {\n    const marque = this.marqueRepository.create(createMarqueDto);\n    return await this.marqueRepository.save(marque);\n  }\n\n  async createMarqueByName(nom : string): Promise {\n    const marque = this.marqueRepository.create({nom});\n    return this.marqueRepository.save(marque);\n  }\n\n  async findAll(): Promise {\n    return await this.marqueRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const marque = await this.marqueRepository.findOne({ where: { id } });\n    if (!marque) {\n      throw new Error(`Marque with id ${id} not found`);\n    }\n    return marque;\n  }\n\n  async update(id: number, updateMarqueDto: UpdateMarqueDto): Promise {\n    await this.marqueRepository.update(id, updateMarqueDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise {\n    await this.marqueRepository.delete(id);\n  }\n\n\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Profil.html":{"url":"entities/Profil.html","title":"entity - Profil","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Profil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/profil/entities/profil.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                adresse\n                            \n                            \n                                    \n                                dateNaissance\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                profilImage\n                            \n                            \n                                    \n                                    \n                                utilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        adresse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/profil/entities/profil.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateNaissance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/profil/entities/profil.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/profil/entities/profil.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profilImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/profil/entities/profil.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, utilisateur => utilisateur.profil)@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/profil/entities/profil.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Utilisateur } from '../../utilisateur/entities/utilisateur.entity';\n\n@Entity(\"profil\")\nexport class Profil {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 255 })\n  profilImage: string;\n\n  @Column({ type: 'date' })\n  dateNaissance: Date;\n\n  @Column({ type: 'varchar', length: 255 })\n  adresse: string;\n\n  @OneToOne(() => Utilisateur, utilisateur => utilisateur.profil)\n  @JoinColumn()\n  utilisateur: Utilisateur;\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfilController.html":{"url":"controllers/ProfilController.html","title":"controller - ProfilController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfilController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/profil/profil.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profil\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProfilDto: CreateProfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un nouveau profil'})@ApiBody({type: CreateProfilDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/profil/profil.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProfilDto\n                                            \n                                                            CreateProfilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtenir tous les profils'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/profil/profil.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtenir un profil par ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/profil/profil.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un profil par ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/profil/profil.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProfilDto: UpdateProfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un profil par ID'})@ApiParam({name: 'id', type: 'string'})@ApiBody({type: UpdateProfilDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/profil/profil.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfilDto\n                                            \n                                                            UpdateProfilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { ProfilService } from './profil.service';\nimport { CreateProfilDto } from './dto/create-profil.dto';\nimport { UpdateProfilDto } from './dto/update-profil.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('profil')\n@Controller('profil')\nexport class ProfilController {\n  constructor(private readonly profilService: ProfilService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un nouveau profil' })\n  @ApiBody({ type: CreateProfilDto })\n  create(@Body() createProfilDto: CreateProfilDto) {\n    return this.profilService.create(createProfilDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Obtenir tous les profils' })\n  findAll() {\n    return this.profilService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtenir un profil par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  findOne(@Param('id') id: string) {\n    return this.profilService.findOne(+id);\n  }\n\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un profil par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  @ApiBody({ type: UpdateProfilDto })\n  update(@Param('id') id: string, @Body() updateProfilDto: UpdateProfilDto) {\n    return this.profilService.update(+id, updateProfilDto);\n  }\n\n\n\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un profil par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  remove(@Param('id') id: string) {\n    return this.profilService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilModule.html":{"url":"modules/ProfilModule.html","title":"module - ProfilModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilModule\n\n\n\ncluster_ProfilModule_exports\n\n\n\ncluster_ProfilModule_providers\n\n\n\n\nProfilService \n\nProfilService \n\n\n\nProfilModule\n\nProfilModule\n\nProfilService  -->\n\nProfilModule->ProfilService \n\n\n\n\n\nProfilService\n\nProfilService\n\nProfilModule -->\n\nProfilService->ProfilModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/profil/profil.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfilService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfilController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfilService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfilService } from './profil.service';\nimport { ProfilController } from './profil.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Profil } from './entities/profil.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\nimport { Voiture } from '../voiture/entities/voiture.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Profil,Utilisateur,Voiture])],\n  controllers: [ProfilController],\n  providers: [ProfilService],\n  exports : [ProfilService]\n})\nexport class ProfilModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfilService.html":{"url":"injectables/ProfilService.html","title":"injectable - ProfilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/profil/profil.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profilRepository: Repository, utilisateurRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/profil/profil.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profilRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilisateurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProfilDto: CreateProfilDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/profil/profil.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProfilDto\n                                            \n                                                            CreateProfilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/profil/profil.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/profil/profil.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/profil/profil.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateProfilDto: UpdateProfilDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/profil/profil.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProfilDto\n                                            \n                                                            UpdateProfilDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateProfilDto } from './dto/create-profil.dto';\nimport { UpdateProfilDto } from './dto/update-profil.dto';\nimport { Profil } from './entities/profil.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\n\n@Injectable()\nexport class ProfilService {\n\n  constructor(\n    @InjectRepository(Profil)\n    private readonly profilRepository: Repository,\n    @InjectRepository(Utilisateur)\n    private readonly utilisateurRepository: Repository,\n  ) { }\n\n  async create(createProfilDto: CreateProfilDto): Promise {\n    const profil = this.profilRepository.create(createProfilDto);\n    return await this.profilRepository.save(profil);\n  }\n\n  async findAll(): Promise {\n    return await this.profilRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const profil = await this.profilRepository.findOne({ where: { id } });\n    if (!profil) {\n      throw new Error(`Profil with id ${id} not found`);\n    }\n    return profil;\n  }\n\n\n\n  async update(id: number, updateProfilDto: UpdateProfilDto): Promise {\n    await this.profilRepository.update(id, updateProfilDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise {\n    await this.profilRepository.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshAuthGuard.html":{"url":"injectables/RefreshAuthGuard.html","title":"injectable - RefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/gaurds/RefreshAuthGuard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard('jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/gaurds/RefreshAuthGuard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, utilisateur, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/gaurds/RefreshAuthGuard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                utilisateur\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshAuthGuard extends AuthGuard('jwt-refresh') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, utilisateur, info) {\n    if (err || !utilisateur) {\n      throw new UnauthorizedException('Invalid refresh token');\n    }\n    return utilisateur;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refresh.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refresh.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(req: any, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refresh.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, StrategyOptionsWithRequest } from 'passport-jwt';\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy, 'jwt-refresh') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_REFRESH_SECRET,\n      passReqToCallback: true,\n    } as StrategyOptionsWithRequest);\n  }\n\n  async validate(req: any, payload: any) {\n    const refreshToken = req.headers.authorization?.split(' ')[1];\n    if (!refreshToken) throw new UnauthorizedException('No refresh token found');\n    return { id: payload.sub, email: payload.email, refreshToken };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUtilisateurDto.html":{"url":"classes/RegisterUtilisateurDto.html","title":"class - RegisterUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/dto/register-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                nom\n                            \n                            \n                                password\n                            \n                            \n                                prenom\n                            \n                            \n                                role\n                            \n                            \n                                tel\n                            \n                            \n                                ville\n                            \n                            \n                                    Optional\n                                voiture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ville\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        voiture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateVoitureDto\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/register-utilisateur.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from 'src/common/enum/role.enum';\nimport { CreateVoitureDto } from 'src/models/voiture/dto/create-voiture.dto';\n\nexport class RegisterUtilisateurDto {\n  nom: string;\n  prenom: string;\n  email: string;\n  password: string;\n  role: Role;\n  tel: string;\n  ville: string;\n  voiture?: CreateVoitureDto;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/gaurds/role/RolesGaurd.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/gaurds/role/RolesGaurd.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/gaurds/role/RolesGaurd.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../../../decorator/roles.decorator';\nimport { Role } from '../../../common/enum/role.enum';\n\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n    const { utilisateur } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => utilisateur.roles?.includes(role));\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Trajet.html":{"url":"entities/Trajet.html","title":"entity - Trajet","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Trajet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/trajet/entities/trajet.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateT\n                            \n                            \n                                    \n                                dureeDeTrajet\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                inscriptions\n                            \n                            \n                                    \n                                kms\n                            \n                            \n                                    \n                                nplace\n                            \n                            \n                                    \n                                prix\n                            \n                            \n                                    \n                                utilisateurId\n                            \n                            \n                                    \n                                    \n                                villeA\n                            \n                            \n                                    \n                                villeAId\n                            \n                            \n                                    \n                                    \n                                villeD\n                            \n                            \n                                    \n                                villeDId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dureeDeTrajet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Inscription[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, inscription => inscription.trajet)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nplace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prix\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        villeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ville\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'villeAId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        villeAId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        villeD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ville\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'villeDId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        villeDId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/entities/trajet.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Inscription } from 'src/models/inscription/entities/inscription.entity';\nimport { Ville } from 'src/models/ville/entities/ville.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, Timestamp, OneToMany, ManyToMany, JoinTable, ManyToOne, JoinColumn } from 'typeorm';\n\n@Entity('trajet')\nexport class Trajet {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nplace: number;\n\n  @Column()\n  kms: number;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  dateT: Date;\n\n  @Column()\n  prix: string;\n\n  @Column()\n  dureeDeTrajet: string;\n\n  @Column()\n  villeDId: number;\n\n  @Column()\n  villeAId: number;\n\n  @ManyToOne(() => Ville)\n  @JoinColumn({ name: 'villeDId' }) \n  villeD: Ville;\n\n  @ManyToOne(() => Ville)\n  @JoinColumn({ name: 'villeAId' }) \n  villeA: Ville;\n\n  @Column()\n  utilisateurId: number;\n\n  @OneToMany(() => Inscription, (inscription) => inscription.trajet)\n  inscriptions: Inscription[];\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TrajetController.html":{"url":"controllers/TrajetController.html","title":"controller - TrajetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TrajetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/trajet/trajet.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                trajet\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAllTrajetsWithDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findTrajet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findTrajetWithDetails\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTrajetDto: CreateTrajetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un nouveau trajet'})@ApiBody({type: CreateTrajetDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTrajetDto\n                                            \n                                                            CreateTrajetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtenir tous les trajets'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllTrajetsWithDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTrajetsWithDetails()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all-details')@ApiOperation({summary: 'Obtenir tous les trajets avec détails'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtenir un trajet par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findTrajet\n                        \n                    \n                \n            \n            \n                \n                        \n                    findTrajet(villeD: number, villeA: number, dateT: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findTrajet/:villeD/:villeA/:dateT')@ApiOperation({summary: 'Trouver un trajet par ville de départ, ville d'arrivée et date'})@ApiParam({name: 'villeD', type: 'number'})@ApiParam({name: 'villeA', type: 'number'})@ApiParam({name: 'dateT', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                villeD\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                villeA\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dateT\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findTrajetWithDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    findTrajetWithDetails(villeD: number, villeA: number, dateT: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('details')@ApiOperation({summary: 'Trouver un trajet avec détails par ville de départ, ville d'arrivée et date'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                villeD\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                villeA\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dateT\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un trajet par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateTrajetDto: UpdateTrajetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un trajet par ID'})@ApiParam({name: 'id', type: 'number'})@ApiBody({type: UpdateTrajetDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/trajet/trajet.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTrajetDto\n                                            \n                                                            UpdateTrajetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { TrajetService } from './trajet.service';\nimport { CreateTrajetDto } from './dto/create-trajet.dto';\nimport { UpdateTrajetDto } from './dto/update-trajet.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('trajet')\n@Controller('trajet')\nexport class TrajetController {\n  constructor(private readonly trajetService: TrajetService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un nouveau trajet' })\n  @ApiBody({ type: CreateTrajetDto })\n  async create(@Body() createTrajetDto: CreateTrajetDto) {\n    return this.trajetService.create(createTrajetDto);\n  }\n\n  @Get('findTrajet/:villeD/:villeA/:dateT')\n  @ApiOperation({ summary: 'Trouver un trajet par ville de départ, ville d\\'arrivée et date' })\n  @ApiParam({ name: 'villeD', type: 'number' })\n  @ApiParam({ name: 'villeA', type: 'number' })\n  @ApiParam({ name: 'dateT', type: 'string' })\n  async findTrajet(\n    @Param('villeD') villeD: number,\n    @Param('villeA') villeA: number,\n    @Param('dateT') dateT: string,\n  ) {\n    const parsedDate = new Date(dateT);\n    if (isNaN(parsedDate.getTime())) {\n      throw new Error('Invalid date format');\n    }\n    return this.trajetService.findTrajet(+villeD, +villeA, parsedDate);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Obtenir tous les trajets' })\n  async findAll() {\n    return this.trajetService.findAll();\n  }\n\n  @Get('details')\n  @ApiOperation({ summary: 'Trouver un trajet avec détails par ville de départ, ville d\\'arrivée et date' })\n  async findTrajetWithDetails(\n    @Query('villeD') villeD: number,\n    @Query('villeA') villeA: number,\n    @Query('dateT') dateT: string,\n  ) {\n    const parsedDate = new Date(dateT);\n    if (isNaN(parsedDate.getTime())) {\n      throw new Error('Invalid date format');\n    }\n    return this.trajetService.findTrajetWithDetails(+villeD, +villeA, parsedDate);\n  }\n\n  @Get('all-details')\n  @ApiOperation({ summary: 'Obtenir tous les trajets avec détails' })\n  async findAllTrajetsWithDetails() {\n    return this.trajetService.findAllTrajetsWithDetails();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtenir un trajet par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  async findOne(@Param('id') id: number) {\n    return this.trajetService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un trajet par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiBody({ type: UpdateTrajetDto })\n  async update(@Param('id') id: number, @Body() updateTrajetDto: UpdateTrajetDto) {\n    return this.trajetService.update(+id, updateTrajetDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un trajet par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  async remove(@Param('id') id: number) {\n    return this.trajetService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrajetModule.html":{"url":"modules/TrajetModule.html","title":"module - TrajetModule","body":"\n                   \n\n\n\n\n    Modules\n    TrajetModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TrajetModule\n\n\n\ncluster_TrajetModule_providers\n\n\n\ncluster_TrajetModule_imports\n\n\n\ncluster_TrajetModule_exports\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nTrajetModule\n\nTrajetModule\n\nTrajetModule -->\n\nEmailModule->TrajetModule\n\n\n\n\n\nTrajetService \n\nTrajetService \n\nTrajetService  -->\n\nTrajetModule->TrajetService \n\n\n\n\n\nTrajetService\n\nTrajetService\n\nTrajetModule -->\n\nTrajetService->TrajetModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/trajet/trajet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TrajetService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TrajetController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmailModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrajetService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TrajetService } from './trajet.service';\nimport { TrajetController } from './trajet.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Trajet } from './entities/trajet.entity';\nimport { EmailModule } from '../../email/email.module';\nimport { Inscription } from '../inscription/entities/inscription.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\nimport { Voiture } from '../voiture/entities/voiture.entity';\n@Module({\n  imports: [TypeOrmModule.forFeature([Trajet, Inscription, Utilisateur , Voiture]), EmailModule],\n  controllers: [TrajetController],\n  providers: [TrajetService],\n  exports: [TrajetService]\n  \n})\nexport class TrajetModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrajetService.html":{"url":"injectables/TrajetService.html","title":"injectable - TrajetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TrajetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/trajet/trajet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllTrajetsWithDetails\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findTrajet\n                            \n                            \n                                    Async\n                                findTrajetWithDetails\n                            \n                            \n                                    Private\n                                    Async\n                                getConducteurForInscription\n                            \n                            \n                                    Async\n                                getInscriptionsForTrajet\n                            \n                            \n                                    Async\n                                notifyConducteur\n                            \n                            \n                                    Async\n                                notifyInscriptions\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trajetRepository: Repository, inscriptionRepository: Repository, utilisateurRepository: Repository, voitureRepository: Repository, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/models/trajet/trajet.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trajetRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inscriptionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilisateurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voitureRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTrajetDto: CreateTrajetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTrajetDto\n                                            \n                                                            CreateTrajetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllTrajetsWithDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTrajetsWithDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findTrajet\n                        \n                    \n                \n            \n            \n                \n                        \n                    findTrajet(villeD: number, villeA: number, dateT: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                villeD\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                villeA\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dateT\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findTrajetWithDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    findTrajetWithDetails(villeD: number, villeA: number, dateT: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                villeD\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                villeA\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dateT\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getConducteurForInscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    getConducteurForInscription(inscriptionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inscriptionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getInscriptionsForTrajet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInscriptionsForTrajet(trajetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyConducteur\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyConducteur(inscriptionId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inscriptionId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyInscriptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyInscriptions(trajetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateTrajetDto: UpdateTrajetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/trajet/trajet.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTrajetDto\n                                            \n                                                            UpdateTrajetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTrajetDto } from './dto/create-trajet.dto';\nimport { UpdateTrajetDto } from './dto/update-trajet.dto';\nimport { In, Repository } from 'typeorm';\nimport { Trajet } from './entities/trajet.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { EmailService } from '../../email/email/email.service';\nimport { Inscription } from '../inscription/entities/inscription.entity';\nimport { Utilisateur } from '../utilisateur/entities/utilisateur.entity';\nimport { Voiture } from '../voiture/entities/voiture.entity'; // Import Voiture entity\n\n@Injectable()\nexport class TrajetService {\n\n  constructor(\n    @InjectRepository(Trajet)\n    private readonly trajetRepository: Repository,\n    @InjectRepository(Inscription)\n    private readonly inscriptionRepository: Repository,\n    @InjectRepository(Utilisateur)\n    private readonly utilisateurRepository: Repository,\n    @InjectRepository(Voiture) // Inject Voiture repository\n    private readonly voitureRepository: Repository,\n    private readonly emailService: EmailService,\n  ) { }\n\n  async create(createTrajetDto: CreateTrajetDto): Promise {\n    const trajet = this.trajetRepository.create(createTrajetDto);\n    return this.trajetRepository.save(trajet);\n  }\n\n  async findAll(): Promise {\n    return this.trajetRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const trajet = await this.trajetRepository.findOneBy({ id });\n    if (!trajet) {\n      throw new Error(`Trajet with id ${id} not found`);\n    }\n    return trajet;\n  }\n\n  async update(id: number, updateTrajetDto: UpdateTrajetDto): Promise {\n    try {\n      await this.trajetRepository.update(id, updateTrajetDto);\n      const trajet = await this.trajetRepository.findOneBy({ id });\n      if (!trajet) {\n        throw new Error(`Trajet with id ${id} not found`);\n      }\n      return trajet;\n    } catch (error) {\n      console.error(`Failed to update trajet with id ${id}:`, error);\n      throw new Error(`Failed to update trajet with id ${id}`);\n    }\n  }\n\n  async remove(id: number): Promise {\n    await this.trajetRepository.delete(id);\n  }\n\n  async findTrajet(villeD: number, villeA: number, dateT: Date): Promise {\n    return this.trajetRepository.createQueryBuilder('trajet')\n      .leftJoinAndSelect('trajet.villeD', 'villeD')\n      .leftJoinAndSelect('trajet.villeA', 'villeA')\n      .where('villeD.id = :villeD', { villeD })\n      .andWhere('villeA.id = :villeA', { villeA })\n      .andWhere('DATE(trajet.dateT) = DATE(:dateT)', { dateT: dateT.toISOString().split('T')[0] }) // Extracts only the date part\n      .getMany();\n  }\n\n  async findAllTrajetsWithDetails(): Promise {\n    const trajets = await this.trajetRepository.createQueryBuilder('trajet')\n      .leftJoinAndSelect('trajet.villeD', 'villeD')\n      .leftJoinAndSelect('trajet.villeA', 'villeA')\n      .leftJoinAndSelect('trajet.inscriptions', 'inscriptions')\n      .leftJoinAndSelect('inscriptions.utilisateur', 'utilisateur')\n      .leftJoinAndSelect('utilisateur.voiture', 'voiture')\n      .leftJoinAndSelect('voiture.marque', 'marque')\n      .getMany();\n\n    return trajets.map(trajet => ({\n      ...trajet,\n      inscriptions: trajet.inscriptions.map(inscription => ({\n        ...inscription,\n        utilisateur: {\n          ...inscription.utilisateur,\n          voiture: inscription.utilisateur.voiture\n            ? { ...inscription.utilisateur.voiture, marque: inscription.utilisateur.voiture.marque }\n            : null,\n        },\n      })),\n    }));\n  }\n\n  async findTrajetWithDetails(villeD: number, villeA: number, dateT: Date): Promise {\n    const trajets = await this.trajetRepository.createQueryBuilder('trajet')\n      .leftJoinAndSelect('trajet.villeD', 'villeD')\n      .leftJoinAndSelect('trajet.villeA', 'villeA')\n      .leftJoinAndSelect('trajet.inscriptions', 'inscriptions')\n      .leftJoinAndSelect('inscriptions.utilisateur', 'utilisateur')\n      .leftJoinAndSelect('utilisateur.voiture', 'voiture')\n      .leftJoinAndSelect('voiture.marque', 'marque')\n      .where('trajet.villeD.id = :villeD', { villeD })\n      .andWhere('trajet.villeA.id = :villeA', { villeA })\n      .andWhere('DATE(trajet.dateT) = :dateT', { dateT: dateT.toISOString().split('T')[0] })\n      .getMany();\n\n    return trajets.map(trajet => ({\n      ...trajet,\n      inscriptions: trajet.inscriptions.map(inscription => ({\n        ...inscription,\n        utilisateur: {\n          ...inscription.utilisateur,\n          voiture: inscription.utilisateur.voiture\n            ? { ...inscription.utilisateur.voiture, marque: inscription.utilisateur.voiture.marque }\n            : null,\n        },\n      })),\n    }));\n  }\n\n  async notifyInscriptions(trajetId: number) {\n    const inscriptions = await this.getInscriptionsForTrajet(trajetId);\n\n    for (const inscription of inscriptions) {\n      if (inscription.utilisateur && inscription.utilisateur.email) {\n        await this.emailService.sendEmail(\n          inscription.utilisateur.email,\n          'Notification du Conducteur',\n          'This is a notification from the conducteur.'\n        );\n      }\n    }\n  }\n\n  async notifyConducteur(inscriptionId: number) {\n    const conducteur = await this.getConducteurForInscription(inscriptionId);\n\n    await this.emailService.sendEmail(\n      conducteur.email,\n      'Notification du Inscription',\n      'This is a notification from an inscription.'\n    );\n  }\n\n  async getInscriptionsForTrajet(trajetId: number): Promise {\n    return this.inscriptionRepository.find({\n      where: { trajetId: trajetId },\n      relations: ['utilisateur'],\n    });\n  }\n\n  private async getConducteurForInscription(inscriptionId: number) {\n    // Replace with actual logic to fetch conducteur\n    return { email: 'conducteur@example.com' };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAuthDto.html":{"url":"classes/UpdateAuthDto.html","title":"class - UpdateAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/update-auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAuthDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateAuthDto } from './create-auth.dto';\n\nexport class UpdateAuthDto extends PartialType(CreateAuthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInscriptionDto.html":{"url":"classes/UpdateInscriptionDto.html","title":"class - UpdateInscriptionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/inscription/dto/update-inscription.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateInscriptionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                trajetId\n                            \n                            \n                                utilisateurId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        trajetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/dto/update-inscription.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/inscription/dto/update-inscription.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateInscriptionDto } from './create-inscription.dto';\n\nexport class UpdateInscriptionDto extends PartialType(CreateInscriptionDto) {\n\n\n    utilisateurId: number;\n    trajetId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMarqueDto.html":{"url":"classes/UpdateMarqueDto.html","title":"class - UpdateMarqueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMarqueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/marque/dto/update-marque.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateMarqueDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateMarqueDto } from './create-marque.dto';\n\nexport class UpdateMarqueDto extends PartialType(CreateMarqueDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfilDto.html":{"url":"classes/UpdateProfilDto.html","title":"class - UpdateProfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/profil/dto/update-profil.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProfilDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProfilDto } from './create-profil.dto';\n\nexport class UpdateProfilDto extends PartialType(CreateProfilDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTrajetDto.html":{"url":"classes/UpdateTrajetDto.html","title":"class - UpdateTrajetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTrajetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/trajet/dto/update-trajet.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateTrajetDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateT\n                            \n                            \n                                    \n                                kms\n                            \n                            \n                                    \n                                nplace\n                            \n                            \n                                    \n                                utilisateurId\n                            \n                            \n                                    \n                                villeAId\n                            \n                            \n                                    \n                                villeDId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nplace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        villeAId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        villeDId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/trajet/dto/update-trajet.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTrajetDto } from './create-trajet.dto';\nimport { IsDate, IsInt } from 'class-validator';\n\nexport class UpdateTrajetDto extends PartialType(CreateTrajetDto) {\n  @IsInt()\n  nplace: number;\n\n  @IsInt()\n  kms: number;\n\n  @IsDate()\n  dateT: Date;\n\n  @IsInt()\n  utilisateurId: number;\n\n  @IsInt()\n  villeDId: number;\n\n  @IsInt()\n  villeAId: number;\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto.html":{"url":"classes/UpdateUtilisateurDto.html","title":"class - UpdateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/dto/update-utilisateur.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUtilisateurDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                nom\n                            \n                            \n                                password\n                            \n                            \n                                prenom\n                            \n                            \n                                role\n                            \n                            \n                                tel\n                            \n                            \n                                ville\n                            \n                            \n                                    Optional\n                                voiture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ville\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        voiture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateVoitureDto\n\n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/dto/update-utilisateur.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUtilisateurDto } from './create-utilisateur.dto';\nimport { UpdateVoitureDto } from 'src/models/voiture/dto/update-voiture.dto';\nimport { Role } from 'src/common/enum/role.enum';\n\nexport class UpdateUtilisateurDto extends PartialType(CreateUtilisateurDto) {\n\n      nom : string;\n      prenom : string;\n      email : string;\n      password : string;\n      role : Role ;\n      tel : string;\n      ville : string;\n      voiture?: UpdateVoitureDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVilleDto.html":{"url":"classes/UpdateVilleDto.html","title":"class - UpdateVilleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVilleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ville/dto/update-ville.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateVilleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateVilleDto } from './create-ville.dto';\n\nexport class UpdateVilleDto extends PartialType(CreateVilleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVoitureDto.html":{"url":"classes/UpdateVoitureDto.html","title":"class - UpdateVoitureDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVoitureDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/voiture/dto/update-voiture.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateVoitureDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateVoitureDto } from './create-voiture.dto';\n\nexport class UpdateVoitureDto extends PartialType(CreateVoitureDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Utilisateur.html":{"url":"entities/Utilisateur.html","title":"entity - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/entities/utilisateur.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                inscriptions\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    \n                                profil\n                            \n                            \n                                    \n                                    Optional\n                                refeshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                tel\n                            \n                            \n                                    \n                                ville\n                            \n                            \n                                    \n                                    \n                                voiture\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Inscription[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, inscription => inscription.utilisateur)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profil\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, profil => profil.utilisateur, {nullable: true})@JoinColumn({name: 'profilId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        refeshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Role, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ville\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        voiture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Voiture\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, voiture => voiture.utilisateur, {nullable: true})@JoinColumn({name: 'voitureId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/utilisateur/entities/utilisateur.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, Column, OneToMany, OneToOne, JoinColumn } from 'typeorm'; \nimport { Profil } from 'src/models/profil/entities/profil.entity';\nimport { Inscription } from 'src/models/inscription/entities/inscription.entity';\nimport { Voiture } from 'src/models/voiture/entities/voiture.entity';\nimport { Role } from 'src/common/enum/role.enum';\n\n@Entity('utilisateur')\nexport class Utilisateur {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @Column()\n  prenom: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({\n    type: 'enum',\n    enum: Role,\n    default: Role.Conducteur,\n  })\n  role: Role;\n\n  @Column()\n  tel: string;\n\n  @Column()\n  ville: string;\n\n  @Column({ nullable: true })\n  refeshToken?: string;\n\n  @OneToOne(() => Profil, profil => profil.utilisateur, { nullable: true })\n  @JoinColumn({ name: 'profilId' })\n  profil: Profil;\n\n  @OneToMany(() => Inscription, inscription => inscription.utilisateur)\n  inscriptions: Inscription[];\n\n  @OneToOne(() => Voiture, voiture => voiture.utilisateur, { nullable: true })\n  @JoinColumn({ name: 'voitureId' })\n  voiture: Voiture;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UtilisateurController.html":{"url":"controllers/UtilisateurController.html","title":"controller - UtilisateurController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UtilisateurController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/utilisateur.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                utilisateur\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findListeInscriptionsUtilisateur\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    Async\n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUtilisateurDto: CreateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un nouvel utilisateur'})@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtenir tous les utilisateurs'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findListeInscriptionsUtilisateur\n                        \n                    \n                \n            \n            \n                \n                        \n                    findListeInscriptionsUtilisateur(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('listeInscriptionsUtilisateur/:id')@ApiOperation({summary: 'Obtenir la liste des inscriptions d'un utilisateur par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtenir un utilisateur par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un utilisateur par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un utilisateur par ID'})@ApiParam({name: 'id', type: 'number'})@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserProfile(id: number, updateData: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { UtilisateurService } from './utilisateur.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('utilisateur')\n@Controller('utilisateur')\nexport class UtilisateurController {\n  constructor(private readonly utilisateurService: UtilisateurService) { }\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un nouvel utilisateur' })\n  @ApiBody({\n    schema: {\n      example: {\n        nom: 'John',\n        prenom: 'Doe',\n        email: 'john.doe@example.com',\n        password: '',\n        role: 'conducteur',\n        tel: '1234567890',\n        ville: 'Paris',\n      },\n    },\n  })\n  create(@Body() createUtilisateurDto: CreateUtilisateurDto) {\n    return this.utilisateurService.create(createUtilisateurDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Obtenir tous les utilisateurs' })\n  findAll() {\n    return this.utilisateurService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtenir un utilisateur par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findOne(@Param('id') id: number) {\n    return this.utilisateurService.findOne(+id);\n  }\n\n  @Get('listeInscriptionsUtilisateur/:id')\n  @ApiOperation({ summary: 'Obtenir la liste des inscriptions d\\'un utilisateur par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findListeInscriptionsUtilisateur(@Param('id') id: number) {\n    return this.utilisateurService.findListInscriptionsForUser(+id);\n  }\n\n  @Patch(':id')\n  async updateUserProfile(\n    @Param('id') id: number,\n    @Body() updateData: any\n  ) {\n    console.log('Received Update Request for User ID:', id);\n    console.log(updateData);\n    return this.utilisateurService.updateUtilisateurWithProfilEtVoiture(+id, updateData);\n  }\n\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un utilisateur par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiBody({\n    schema: {\n      example: {\n        nom: 'John',\n        prenom: 'Doe',\n        email: 'john.doe@example.com',\n        password: '',\n        role: 'admin',\n        tel: '0987654321',\n        ville: 'Lyon',\n      },\n    },\n  })\n  update(@Param('id') id: number, @Body() updateUtilisateurDto: UpdateUtilisateurDto) {\n    return this.utilisateurService.update(+id, updateUtilisateurDto);\n  }\n\n\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un utilisateur par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  remove(@Param('id') id: number) {\n    return this.utilisateurService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilisateurModule.html":{"url":"modules/UtilisateurModule.html","title":"module - UtilisateurModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilisateurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/utilisateur/utilisateur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UtilisateurController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilisateurService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UtilisateurService } from './utilisateur.service';\nimport { UtilisateurController } from './utilisateur.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Utilisateur } from './entities/utilisateur.entity';\nimport { Voiture } from '../voiture/entities/voiture.entity';\nimport { Profil } from '../profil/entities/profil.entity';\nimport { Marque } from '../marque/entities/marque.entity';\n\n@Module({\n  \n  imports: [TypeOrmModule.forFeature([Utilisateur,Voiture,Profil ,Marque])],\n  controllers: [UtilisateurController],\n  providers: [UtilisateurService],\n  exports: [UtilisateurService]\n})\nexport class UtilisateurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateurService.html":{"url":"injectables/UtilisateurService.html","title":"injectable - UtilisateurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findListInscriptionsForUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRefreshToken\n                            \n                            \n                                    Async\n                                updateRefreshTokenNull\n                            \n                            \n                                    Async\n                                updateUtilisateurWithProfilEtVoiture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurRepository: Repository, voitureRepository: Repository, ProfilRepository: Repository, marqueRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/utilisateur/utilisateur.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        voitureRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ProfilRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        marqueRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUtilisateurDto: CreateUtilisateurDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findListInscriptionsForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findListInscriptionsForUser(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefreshToken(utilisateurId: number, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRefreshTokenNull\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefreshTokenNull(id: number, refreshToken: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUtilisateurWithProfilEtVoiture\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUtilisateurWithProfilEtVoiture(id: number, updateData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/utilisateur/utilisateur.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\nimport { Utilisateur } from './entities/utilisateur.entity'; // Adjust the path as needed\nimport * as bcrypt from 'bcryptjs';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { Voiture } from '../voiture/entities/voiture.entity';\nimport { Marque } from '../marque/entities/marque.entity';\nimport { Profil } from '../profil/entities/profil.entity';\n\n@Injectable()\nexport class UtilisateurService {\n  constructor(\n    @InjectRepository(Utilisateur) // Inject the repository\n    private readonly utilisateurRepository: Repository,\n    @InjectRepository(Voiture)\n    private readonly voitureRepository: Repository,\n    @InjectRepository(Profil)\n    private readonly ProfilRepository: Repository,\n    @InjectRepository(Marque)\n    private readonly marqueRepository: Repository,\n  ) { }\n\n  async findByEmail(email: string): Promise {\n    const user = await this.utilisateurRepository.findOne({ where: { email } });\n    if (!user) {\n      throw new Error('utilisteur non trouvé');\n    }\n    return user;\n  }\n\n  async findById(id: number): Promise {\n    const user = await this.utilisateurRepository.findOne({ where: { id } });\n    if (!user) {\n      throw new Error('utilisteur non trouvé');\n    }\n    return user;\n  }\n\n  async updateRefreshToken(utilisateurId: number, token: string) {\n    const hashedToken = token ? await bcrypt.hash(token, 10) : null;\n    await this.utilisateurRepository.update(utilisateurId, {\n      refeshToken: hashedToken ?? undefined,\n    });\n  }\n\n  async updateRefreshTokenNull(id: number, refreshToken: string | null): Promise {\n    await this.utilisateurRepository.update(id, { refeshToken: refreshToken ?? '' });\n  }\n\n\n\n  async create(createUtilisateurDto: CreateUtilisateurDto): Promise {\n    const user = this.utilisateurRepository.create(createUtilisateurDto);\n    return this.utilisateurRepository.save(user);\n  }\n\n\n  async update(id: number, updateUtilisateurDto: UpdateUtilisateurDto): Promise {\n    await this.utilisateurRepository.update(id, updateUtilisateurDto);\n    const user = await this.utilisateurRepository.findOne({ where: { id } });\n    if (!user) {\n      throw new Error('utilisteur non trouvé');\n    }\n    return user;\n  }\n\n  async remove(id: number): Promise {\n    await this.utilisateurRepository.delete(id);\n  }\n\n  async findAll(): Promise {\n    return this.utilisateurRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const utilisateur = await this.utilisateurRepository.findOne({\n      where: { id },\n      relations: ['profil', 'voiture'],\n\n    });\n    if (!utilisateur) {\n      throw new Error(`Utilisateur with id ${id} not found`);\n    }\n    return utilisateur;\n  }\n\n  async updateUtilisateurWithProfilEtVoiture(id: number, updateData: any) {\n    const utilisateur = await this.utilisateurRepository.findOne({\n        where: { id },\n        relations: ['profil', 'voiture'],  // Ensure relations are loaded\n    });\n\n    if (!utilisateur) {\n        throw new NotFoundException(`Utilisateur with ID ${id} not found`);\n    }\n\n    // Update Utilisateur fields\n    utilisateur.nom = updateData.nom;\n    utilisateur.prenom = updateData.prenom;\n    utilisateur.email = updateData.email;\n    utilisateur.tel = updateData.tel;\n    utilisateur.ville = updateData.ville;\n\n    // Update Profil if it exists\n    if (utilisateur.profil) {\n        utilisateur.profil.profilImage = updateData.profilImage;\n        utilisateur.profil.dateNaissance = updateData.dateNaissance;\n        utilisateur.profil.adresse = updateData.adresse;\n        await this.ProfilRepository.save(utilisateur.profil);  // Save changes\n    }\n\n    // Update Voiture if it exists\n    if (utilisateur.voiture) {\n        utilisateur.voiture.place = updateData.voiture.place;\n        utilisateur.voiture.modele = updateData.voiture.modele;\n        utilisateur.voiture.immatriculation = updateData.voiture.immatriculation;\n\n        // ✅ Check if \"marque\" exists; if not, create it\n        let marque = await this.marqueRepository.findOne({ where: { nom: updateData.voiture.marque } });\n\n        if (!marque) {\n            console.warn(`Marque \"${updateData.voiture.marque}\" not found. Creating new marque...`);\n            marque = this.marqueRepository.create({ nom: updateData.voiture.marque });\n            marque = await this.marqueRepository.save(marque);\n        }\n\n        utilisateur.voiture.marque = marque;  // Assign the marque\n        utilisateur.voiture.marqueId = marque.id;  // Assign marqueId\n\n        await this.voitureRepository.save(utilisateur.voiture);  // Save voiture changes\n    }\n\n    // Save the updated user\n    return this.utilisateurRepository.save(utilisateur);\n}\n\n\n  \n  async findListInscriptionsForUser(id: number): Promise {\n    const user = await this.utilisateurRepository.findOne({\n      where: { id },\n      relations: ['inscriptions'],\n    });\n    if (!user) {\n      throw new Error(`Utilisateur with id ${id} not found`);\n    }\n    return user;\n  }\n\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Ville.html":{"url":"entities/Ville.html","title":"entity - Ville","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Ville\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ville/entities/ville.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cp\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                trajetsArrivee\n                            \n                            \n                                    \n                                trajetsDepart\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/ville/entities/ville.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/ville/entities/ville.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/ville/entities/ville.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trajetsArrivee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trajet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trajet => trajet.villeA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/ville/entities/ville.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trajetsDepart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Trajet[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, trajet => trajet.villeD)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/ville/entities/ville.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Trajet } from 'src/models/trajet/entities/trajet.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, ManyToMany, OneToMany } from 'typeorm';\n\n@Entity('ville')\nexport class Ville {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  nom: string;\n\n  @Column()\n  cp: number;\n  \n  @OneToMany(() => Trajet, trajet => trajet.villeD)\n  trajetsDepart: Trajet[];\n\n  @OneToMany(() => Trajet, trajet => trajet.villeA)\n  trajetsArrivee: Trajet[];\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VilleController.html":{"url":"controllers/VilleController.html","title":"controller - VilleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VilleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ville/ville.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ville\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findbyName\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVilleDto: CreateVilleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer une nouvelle ville'})@ApiBody({type: CreateVilleDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVilleDto\n                                            \n                                                            CreateVilleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtenir toutes les villes'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findbyName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findbyName(nom: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findbyName/:nom')@ApiOperation({summary: 'Trouver une ville par nom'})@ApiParam({name: 'nom', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nom\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtenir une ville par ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer une ville par ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateVilleDto: UpdateVilleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour une ville par ID'})@ApiParam({name: 'id', type: 'string'})@ApiBody({type: UpdateVilleDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/ville/ville.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVilleDto\n                                            \n                                                            UpdateVilleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { VilleService } from './ville.service';\nimport { CreateVilleDto } from './dto/create-ville.dto';\nimport { UpdateVilleDto } from './dto/update-ville.dto';\nimport { ApiBody, ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport { RolesGuard } from 'src/common/gaurds/role/RolesGaurd';\nimport { Role } from 'src/common/enum/role.enum';\nimport { Roles } from 'src/decorator/roles.decorator';\nimport { JwtAuthGuard } from 'src/common/gaurds/JwtAuthGuard';\n\n@ApiTags('ville')\n@Controller('ville')\n// @UseGuards(JwtAuthGuard,RolesGuard)\nexport class VilleController {\n  constructor(private readonly villeService: VilleService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer une nouvelle ville' })\n  @ApiBody({ type: CreateVilleDto })\n  create(@Body() createVilleDto: CreateVilleDto) {\n    return this.villeService.create(createVilleDto);\n  }\n\n \n  @Get()\n  // @Roles(Role.Conducteur)  \n  @ApiOperation({ summary: 'Obtenir toutes les villes' })\n  findAll() {\n    return this.villeService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtenir une ville par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  findOne(@Param('id') id: string) {\n    return this.villeService.findOne(+id);\n  }\n\n  @Get('findbyName/:nom')\n  @ApiOperation({ summary: 'Trouver une ville par nom' })\n  @ApiParam({ name: 'nom', type: 'string' })\n  findbyName(@Param('nom') nom: string) {\n    return this.villeService.findbyName(nom);\n  }\n  \n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour une ville par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  @ApiBody({ type: UpdateVilleDto })\n  update(@Param('id') id: string, @Body() updateVilleDto: UpdateVilleDto) {\n    return this.villeService.update(+id, updateVilleDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer une ville par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  remove(@Param('id') id: string) {\n    return this.villeService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VilleModule.html":{"url":"modules/VilleModule.html","title":"module - VilleModule","body":"\n                   \n\n\n\n\n    Modules\n    VilleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VilleModule\n\n\n\ncluster_VilleModule_providers\n\n\n\ncluster_VilleModule_exports\n\n\n\n\nVilleService \n\nVilleService \n\n\n\nVilleModule\n\nVilleModule\n\nVilleService  -->\n\nVilleModule->VilleService \n\n\n\n\n\nVilleService\n\nVilleService\n\nVilleModule -->\n\nVilleService->VilleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/ville/ville.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VilleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VilleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VilleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VilleService } from './ville.service';\nimport { VilleController } from './ville.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Ville } from './entities/ville.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Ville])],\n  controllers: [VilleController],\n  providers: [VilleService],\n  exports : [VilleService]\n})\nexport class VilleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VilleService.html":{"url":"injectables/VilleService.html","title":"injectable - VilleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VilleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ville/ville.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findbyName\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(villeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/ville/ville.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        villeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVilleDto: CreateVilleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVilleDto\n                                            \n                                                            CreateVilleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findbyName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findbyName(nom: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nom\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateVilleDto: UpdateVilleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/ville/ville.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVilleDto\n                                            \n                                                            UpdateVilleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateVilleDto } from './dto/create-ville.dto';\nimport { UpdateVilleDto } from './dto/update-ville.dto';\nimport { Ville } from './entities/ville.entity';\n\n@Injectable()\nexport class VilleService {\n  constructor(\n    @InjectRepository(Ville)\n    private readonly villeRepository: Repository,\n  ) {}\n\n  async create(createVilleDto: CreateVilleDto): Promise {\n    const ville = this.villeRepository.create(createVilleDto);\n    return await this.villeRepository.save(ville);\n  }\n\n  async findAll(): Promise {\n    return await this.villeRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const ville = await this.villeRepository.findOne({ where: { id } });\n    if (!ville) {\n      throw new Error(`Ville with id ${id} not found`);\n    }\n    return ville;\n  }\n\n  async findbyName(nom: string): Promise {\n    const ville = await this.villeRepository.findOne({ where: { nom } });\n    if (!ville) {\n      throw new Error(`Ville with name ${nom} not found`);\n    }\n    return ville;\n  }\n\n  async update(id: number, updateVilleDto: UpdateVilleDto): Promise {\n    await this.villeRepository.update(id, updateVilleDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise {\n    await this.villeRepository.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Voiture.html":{"url":"entities/Voiture.html","title":"entity - Voiture","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Voiture\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/voiture/entities/voiture.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                immatriculation\n                            \n                            \n                                    \n                                    \n                                marque\n                            \n                            \n                                    \n                                marqueId\n                            \n                            \n                                    \n                                modele\n                            \n                            \n                                    \n                                place\n                            \n                            \n                                    \n                                    \n                                utilisateur\n                            \n                            \n                                    \n                                utilisateurId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        immatriculation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        marque\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Marque\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, marque => marque.voitures)@JoinColumn({name: 'marqueId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        marqueId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modele\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        place\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, utilisateur => utilisateur.voiture)@JoinColumn({name: 'utilisateurId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        utilisateurId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/voiture/entities/voiture.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Marque } from 'src/models/marque/entities/marque.entity';\nimport { Utilisateur } from 'src/models/utilisateur/entities/utilisateur.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, ManyToOne, JoinColumn } from 'typeorm';\n\n@Entity('voiture')\nexport class Voiture {\n  map(arg0: (voiture: any) => any): any {\n    throw new Error('Method not implemented.');\n  }\n  static utilisateurId(arg0: () => typeof Voiture, utilisateurId: any): (target: Utilisateur, propertyKey: \"voiture\") => void {\n    throw new Error('Method not implemented.');\n  }\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  modele: string;\n\n  @Column()\n  place: number;;\n\n  @Column()\n  immatriculation: string;\n\n  @Column()\n  utilisateurId: number;\n\n  @Column()\n  marqueId: number;\n\n  @OneToOne(() => Utilisateur, utilisateur => utilisateur.voiture)\n  @JoinColumn({ name: 'utilisateurId' })\n  utilisateur: Utilisateur;\n\n  @OneToOne(() => Marque, marque => marque.voitures)\n  @JoinColumn({ name: 'marqueId' })\n  marque: Marque;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VoitureController.html":{"url":"controllers/VoitureController.html","title":"controller - VoitureController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VoitureController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/voiture/voiture.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                voiture\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVoitureDto: CreateVoitureDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer une nouvelle voiture'})@ApiBody({type: CreateVoitureDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/voiture/voiture.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVoitureDto\n                                            \n                                                            CreateVoitureDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtenir toutes les voitures'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/voiture/voiture.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Obtenir une voiture par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/voiture/voiture.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer une voiture par ID'})@ApiParam({name: 'id', type: 'string'})\n                \n            \n\n                    \n                        \n                            Defined in src/models/voiture/voiture.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateVoitureDto: UpdateVoitureDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour une voiture par ID'})@ApiParam({name: 'id', type: 'number'})@ApiBody({type: UpdateVoitureDto})\n                \n            \n\n                    \n                        \n                            Defined in src/models/voiture/voiture.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVoitureDto\n                                            \n                                                            UpdateVoitureDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { VoitureService } from './voiture.service';\nimport { CreateVoitureDto } from './dto/create-voiture.dto';\nimport { UpdateVoitureDto } from './dto/update-voiture.dto';\nimport { ApiTags, ApiOperation, ApiBody, ApiParam } from '@nestjs/swagger';\n\n@ApiTags('voiture')\n@Controller('voiture')\nexport class VoitureController {\n  constructor(private readonly voitureService: VoitureService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer une nouvelle voiture' })\n  @ApiBody({ type: CreateVoitureDto })\n  create(@Body() createVoitureDto: CreateVoitureDto) {\n    return this.voitureService.create(createVoitureDto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Obtenir toutes les voitures' })\n  findAll() {\n    return this.voitureService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Obtenir une voiture par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findOne(@Param('id') id: string) {\n    return this.voitureService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour une voiture par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiBody({ type: UpdateVoitureDto })\n  update(@Param('id') id: string, @Body() updateVoitureDto: UpdateVoitureDto) {\n    return this.voitureService.update(+id, updateVoitureDto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer une voiture par ID' })\n  @ApiParam({ name: 'id', type: 'string' })\n  remove(@Param('id') id: string) {\n    return this.voitureService.remove(+id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VoitureModule.html":{"url":"modules/VoitureModule.html","title":"module - VoitureModule","body":"\n                   \n\n\n\n\n    Modules\n    VoitureModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VoitureModule\n\n\n\ncluster_VoitureModule_providers\n\n\n\ncluster_VoitureModule_exports\n\n\n\n\nVoitureService \n\nVoitureService \n\n\n\nVoitureModule\n\nVoitureModule\n\nVoitureService  -->\n\nVoitureModule->VoitureService \n\n\n\n\n\nVoitureService\n\nVoitureService\n\nVoitureModule -->\n\nVoitureService->VoitureModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/voiture/voiture.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            VoitureService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VoitureController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            VoitureService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VoitureService } from './voiture.service';\nimport { VoitureController } from './voiture.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Voiture } from './entities/voiture.entity';\nimport { Marque } from '../marque/entities/marque.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Voiture,Marque])],\n  controllers: [VoitureController],\n  providers: [VoitureService],\n  exports : [VoitureService]\n})\nexport class VoitureModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoitureService.html":{"url":"injectables/VoitureService.html","title":"injectable - VoitureService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoitureService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/voiture/voiture.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByUtilisateurId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(voitureRepository: Repository, marqueRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/models/voiture/voiture.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        voitureRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        marqueRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createVoitureDto: CreateVoitureDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createVoitureDto\n                                            \n                                                            CreateVoitureDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByUtilisateurId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByUtilisateurId(utilisateurId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                        \n                    save(voiture: Voiture)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                voiture\n                                            \n                                                            Voiture\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateVoitureDto: UpdateVoitureDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/voiture/voiture.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateVoitureDto\n                                            \n                                                            UpdateVoitureDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateVoitureDto } from './dto/create-voiture.dto';\nimport { UpdateVoitureDto } from './dto/update-voiture.dto';\nimport { Voiture } from './entities/voiture.entity';\nimport { Marque } from '../marque/entities/marque.entity';\n\n@Injectable()\nexport class VoitureService {\n  constructor(\n    @InjectRepository(Voiture)\n    private readonly voitureRepository: Repository,\n    @InjectRepository(Marque)\n    private readonly marqueRepository: Repository,\n  ) {}\n\n  async create(createVoitureDto: CreateVoitureDto): Promise {\n    const voiture = this.voitureRepository.create(createVoitureDto);\n    return await this.voitureRepository.save(voiture);\n  }\n\n  async save(voiture: Voiture): Promise {\n    return this.voitureRepository.save(voiture);\n  }\n\n  async findAll(): Promise {\n    return await this.voitureRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    const voiture = await this.voitureRepository.findOne({ where: { id }, \n      relations: ['marque']\n    });\n    if (!voiture) {\n      throw new Error(`Voiture with id ${id} not found`);\n    }\n    return voiture;\n  }\n\n  async findByUtilisateurId(utilisateurId: number): Promise {\n    const voitures = await this.voitureRepository.find({ where: { utilisateurId } });\n    if (!voitures.length) {\n      throw new Error(`No voitures found with utilisateurId ${utilisateurId}`);\n    }\n    return voitures;\n  }\n\n  async update(id: number, updateVoitureDto: UpdateVoitureDto): Promise {\n    await this.voitureRepository.update(id, updateVoitureDto);\n    return this.findOne(id);\n  }\n\n  async remove(id: number): Promise {\n    await this.voitureRepository.delete(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dto/create-auth.dto.ts\n            \n            class\n            CreateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/update-auth.dto.ts\n            \n            class\n            UpdateAuthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/refresh.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/gaurds/JwtAuthGuard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/gaurds/RefreshAuthGuard.ts\n            \n            injectable\n            RefreshAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/gaurds/role/RolesGaurd.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/email/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/inscription/dto/create-inscription.dto.ts\n            \n            class\n            CreateInscriptionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/inscription/dto/update-inscription.dto.ts\n            \n            class\n            UpdateInscriptionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/inscription/entities/inscription.entity.ts\n            \n            entity\n            Inscription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/inscription/inscription.controller.ts\n            \n            controller\n            InscriptionController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/inscription/inscription.service.ts\n            \n            injectable\n            InscriptionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/marque/dto/create-marque.dto.ts\n            \n            class\n            CreateMarqueDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/marque/dto/update-marque.dto.ts\n            \n            class\n            UpdateMarqueDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/marque/entities/marque.entity.ts\n            \n            entity\n            Marque\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/marque/marque.controller.ts\n            \n            controller\n            MarqueController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/marque/marque.service.ts\n            \n            injectable\n            MarqueService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/profil/dto/create-profil.dto.ts\n            \n            class\n            CreateProfilDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/profil/dto/update-profil.dto.ts\n            \n            class\n            UpdateProfilDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/profil/entities/profil.entity.ts\n            \n            entity\n            Profil\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/profil/profil.controller.ts\n            \n            controller\n            ProfilController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/profil/profil.service.ts\n            \n            injectable\n            ProfilService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/trajet/dto/create-trajet.dto.ts\n            \n            class\n            CreateTrajetDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/trajet/dto/update-trajet.dto.ts\n            \n            class\n            UpdateTrajetDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/trajet/entities/trajet.entity.ts\n            \n            entity\n            Trajet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/trajet/trajet.controller.ts\n            \n            controller\n            TrajetController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/trajet/trajet.service.ts\n            \n            injectable\n            TrajetService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/utilisateur/dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/utilisateur/dto/register-utilisateur.dto.ts\n            \n            class\n            RegisterUtilisateurDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/utilisateur/dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/utilisateur/entities/utilisateur.entity.ts\n            \n            entity\n            Utilisateur\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/utilisateur/utilisateur.controller.ts\n            \n            controller\n            UtilisateurController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/utilisateur/utilisateur.service.ts\n            \n            injectable\n            UtilisateurService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/models/ville/dto/create-ville.dto.ts\n            \n            class\n            CreateVilleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/ville/dto/update-ville.dto.ts\n            \n            class\n            UpdateVilleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/ville/entities/ville.entity.ts\n            \n            entity\n            Ville\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/ville/ville.controller.ts\n            \n            controller\n            VilleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/ville/ville.service.ts\n            \n            injectable\n            VilleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/voiture/dto/create-voiture.dto.ts\n            \n            class\n            CreateVoitureDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/voiture/dto/update-voiture.dto.ts\n            \n            class\n            UpdateVoitureDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/voiture/entities/voiture.entity.ts\n            \n            entity\n            Voiture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/voiture/voiture.controller.ts\n            \n            controller\n            VoitureController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/voiture/voiture.service.ts\n            \n            injectable\n            VoitureService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.10\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^11.0.10\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.10\n        \n            @nestjs/serve-static : ^5.0.3\n        \n            @nestjs/swagger : ^11.0.3\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.14.1\n        \n            dotenv : ^16.4.7\n        \n            mysql2 : ^3.12.0\n        \n            nodemailer : ^6.10.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Conducteur\n                            \n                        \n                        \n                            \n                                Value : conducteur\n                            \n                        \n                        \n                            \n                                 Passager\n                            \n                        \n                        \n                            \n                                Value : passager\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InscriptionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MarqueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrajetModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilisateurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VilleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VoitureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EmailModule\n\n\n\ncluster_EmailModule_exports\n\n\n\ncluster_EmailModule_providers\n\n\n\ncluster_InscriptionModule\n\n\n\ncluster_InscriptionModule_exports\n\n\n\ncluster_InscriptionModule_providers\n\n\n\ncluster_MarqueModule\n\n\n\ncluster_MarqueModule_exports\n\n\n\ncluster_MarqueModule_providers\n\n\n\ncluster_ProfilModule\n\n\n\ncluster_ProfilModule_exports\n\n\n\ncluster_ProfilModule_providers\n\n\n\ncluster_TrajetModule\n\n\n\ncluster_TrajetModule_exports\n\n\n\ncluster_TrajetModule_providers\n\n\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\ncluster_VilleModule\n\n\n\ncluster_VilleModule_exports\n\n\n\ncluster_VilleModule_providers\n\n\n\ncluster_VoitureModule\n\n\n\ncluster_VoitureModule_exports\n\n\n\ncluster_VoitureModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nEmailModule\n\nEmailModule\n\n\n\nTrajetModule\n\nTrajetModule\n\nTrajetModule -->\n\nEmailModule->TrajetModule\n\n\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailModule->EmailService \n\n\n\n\n\nInscriptionModule\n\nInscriptionModule\n\nAppModule -->\n\nInscriptionModule->AppModule\n\n\n\n\n\nInscriptionService \n\nInscriptionService \n\nInscriptionService  -->\n\nInscriptionModule->InscriptionService \n\n\n\n\n\nMarqueModule\n\nMarqueModule\n\nAppModule -->\n\nMarqueModule->AppModule\n\n\n\n\n\nMarqueService \n\nMarqueService \n\nMarqueService  -->\n\nMarqueModule->MarqueService \n\n\n\n\n\nProfilModule\n\nProfilModule\n\nAppModule -->\n\nProfilModule->AppModule\n\n\n\n\n\nProfilService \n\nProfilService \n\nProfilService  -->\n\nProfilModule->ProfilService \n\n\n\nAppModule -->\n\nTrajetModule->AppModule\n\n\n\n\n\nTrajetService \n\nTrajetService \n\nTrajetService  -->\n\nTrajetModule->TrajetService \n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAuthModule -->\n\nUtilisateurModule->AuthModule\n\n\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nVilleModule\n\nVilleModule\n\nAppModule -->\n\nVilleModule->AppModule\n\n\n\n\n\nVilleService \n\nVilleService \n\nVilleService  -->\n\nVilleModule->VilleService \n\n\n\n\n\nVoitureModule\n\nVoitureModule\n\nAuthModule -->\n\nVoitureModule->AuthModule\n\n\n\nAppModule -->\n\nVoitureModule->AppModule\n\n\n\n\n\nVoitureService \n\nVoitureService \n\nVoitureService  -->\n\nVoitureModule->VoitureService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailModule -->\n\nEmailService->EmailModule\n\n\n\n\n\nInscriptionService\n\nInscriptionService\n\nInscriptionModule -->\n\nInscriptionService->InscriptionModule\n\n\n\n\n\nMarqueService\n\nMarqueService\n\nMarqueModule -->\n\nMarqueService->MarqueModule\n\n\n\n\n\nProfilService\n\nProfilService\n\nProfilModule -->\n\nProfilService->ProfilModule\n\n\n\n\n\nTrajetService\n\nTrajetService\n\nTrajetModule -->\n\nTrajetService->TrajetModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\nVilleService\n\nVilleService\n\nVilleModule -->\n\nVilleService->VilleModule\n\n\n\n\n\nVoitureService\n\nVoitureService\n\nVoitureModule -->\n\nVoitureService->VoitureModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata('ROLES_KEY', roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
