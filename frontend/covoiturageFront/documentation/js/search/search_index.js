var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,0.609,1,1.675]],["body/injectables/ApiService.html",[0,0.715,1,1.969,2,1.218,3,0.26,4,0.22,5,0.22,6,1.735,7,0.26,8,0.569,9,1.137,10,2.078,11,0.569,12,3.771,13,3.246,14,3.54,15,3.771,16,2.316,17,2.54,18,3.708,19,2.922,20,0.669,21,1.358,22,2.056,23,0.889,24,3.54,25,0.734,26,0.039,27,0.734,28,0.438,29,0.734,30,1.538,31,2.441,32,0.81,33,3.771,34,2.441,35,1.854,36,1.974,37,1.765,38,3.16,39,1.687,40,2.056,41,2.28,42,2.169,43,2.922,44,1.538,45,2.441,46,1.767,47,2.441,48,1.186,49,2.922,50,1.969,51,1.767,52,2.515,53,1.286,54,2.183,55,2.441,56,1.593,57,1.308,58,0.984,59,1.139,60,2.441,61,2.515,62,2.515,63,2.441,64,2.515,65,2.441,66,2.211,67,1.396,68,2.515,69,2.211,70,1.442,71,2.515,72,2.515,73,1.538,74,0.493,75,0.493,76,2.602,77,0.539,78,0.22,79,0.902,80,0.742,81,2.515,82,1.525,83,1.735,84,1.735,85,1.525,86,1.525,87,0.377,88,1.099,89,1.358,90,0.994,91,2.015,92,0.994,93,0.902,94,1.969,95,0.818,96,0.902,97,0.994,98,1.735,99,1.525,100,2.015,101,0.26,102,1.389,103,0.493,104,1.139,105,2.96,106,1.525,107,0.966,108,1.076,109,2.015,110,1.735,111,1.525,112,3.246,113,3.771,114,2.015,115,2.078,116,2.922,117,2.316,118,2.96,119,2.211,120,2.515,121,3.246,122,2.515,123,3.246,124,2.515,125,2.515,126,2.515,127,2.515,128,2.515,129,2.515,130,2.515,131,2.922,132,2.922,133,2.015,134,2.015,135,1.358,136,1.525,137,2.015,138,1.735,139,1.735,140,0.742,141,2.015,142,2.015,143,1.099,144,1.735,145,1.735,146,1.735,147,1.735,148,2.015,149,2.015,150,1.358,151,1.735,152,2.015,153,0.067,154,0.067]],["title/components/AppComponent.html",[155,0.272,156,0.83]],["body/components/AppComponent.html",[3,0.224,4,0.19,5,0.19,7,0.224,8,0.51,9,0.474,11,0.51,17,2.537,20,0.338,23,0.842,25,0.338,26,0.039,27,0.613,28,0.433,29,0.338,32,0.449,35,1.28,37,1.458,39,1.771,40,1.719,41,2.393,46,1.906,48,0.706,53,1.178,57,1.411,58,0.574,59,0.952,66,1.983,67,1.064,73,1.771,74,0.969,75,0.969,77,0.511,78,0.19,87,0.338,90,1.953,93,1.172,95,0.706,97,1.556,101,0.407,102,1.293,103,0.426,143,2.65,155,0.345,156,1.444,157,0.965,158,0.858,159,0.778,160,0.778,161,1.739,162,1.719,163,2.656,164,0.706,165,2.003,166,2.003,167,1.584,168,1.172,169,1.064,170,2.714,171,2.124,172,2.124,173,1.411,174,1.28,175,1.293,176,3.82,177,1.172,178,5.122,179,3.82,180,4.326,181,3.958,182,3.407,183,2.386,184,2.714,185,1.425,186,1.906,187,3.82,188,3.82,189,3.958,190,2.714,191,5.241,192,4.795,193,3.82,194,2.158,195,3.82,196,2.714,197,4.326,198,3.82,199,3.82,200,3.82,201,3.82,202,2.714,203,3.82,204,3.82,205,3.82,206,3.174,207,3.82,208,2.62,209,3.82,210,2.386,211,3.82,212,3.82,213,3.153,214,3.82,215,3.174,216,3.174,217,3.82,218,3.82,219,2.85,220,1.051,221,1.972,222,2.743,223,3.174,224,3.174,225,3.174,226,3.174,227,2.106,228,1.064,229,2.106,230,3.174,231,2.656,232,2.85,233,4.252,234,3.174,235,3.174,236,2.62,237,2.106,238,1.584,239,2.106,240,2.106,241,2.106,242,2.106,243,0.64,244,0.706,245,0.706,246,1.316,247,1.064,248,2.106,249,2.106,250,2.106,251,4.252,252,4.252,253,2.106,254,2.106,255,1.051,256,2.106,257,3.153,258,2.106,259,2.106,260,2.106,261,1.316,262,2.106,263,2.106,264,3.174,265,3.174,266,3.51,267,3.82,268,1.765,269,3.51,270,3.174,271,3.174,272,2.106,273,3.174,274,2.106,275,3.174,276,2.106,277,1.739,278,2.106,279,0.64,280,1.172,281,1.172,282,0.778,283,1.57,284,0.778,285,2.106,286,2.106,287,2.106,288,0.778,289,0.58,290,0.778,291,0.58,292,0.778,293,0.58,294,0.778,295,0.58,296,0.778,297,0.58,298,1.172,299,0.58,300,0.58,301,0.778,302,0.58,303,0.706,304,0.778]],["title/modules/AppRoutingModule.html",[305,2.14,306,1.881]],["body/modules/AppRoutingModule.html",[3,0.359,4,0.304,5,0.304,26,0.039,40,1.516,77,0.649,78,0.304,79,1.244,87,0.471,101,0.359,104,0.839,153,0.083,154,0.083,155,0.537,156,0.928,168,1.244,169,1.482,173,1.633,174,1.482,183,2.762,184,2.393,185,1.482,186,2.207,243,1.024,244,1.129,245,1.129,279,1.024,289,1.219,291,1.445,293,1.219,295,1.219,297,1.219,299,1.219,300,1.219,302,0.928,305,2.393,306,3.61,307,2.393,308,2.104,309,2.78,310,2.393,311,3.508,312,2.78,313,2.78,314,2.78,315,2.78,316,2.277,317,3.108,318,3.651,319,2.104,320,2.78,321,3.368,322,3.368,323,4.938,324,3.368,325,3.368,326,3.368,327,4.423,328,3.368,329,4.423,330,2.78,331,2.104,332,2.762,333,3.368,334,3.368,335,4.423,336,3.368,337,3.368,338,2.104,339,2.393,340,3.368,341,3.368,342,4.94,343,2.104,344,3.368,345,2.78,346,2.78,347,3.368,348,3.368,349,3.368,350,3.368,351,3.368,352,3.368,353,3.368]],["title/guards/AuthGuardService.html",[332,1.881,354,2.14]],["body/guards/AuthGuardService.html",[0,1.029,3,0.449,4,0.38,5,0.38,7,0.449,9,0.948,11,0.818,20,0.677,23,0.818,25,0.677,26,0.039,27,0.677,28,0.38,29,0.677,32,0.597,77,0.583,78,0.38,87,0.449,92,1.717,93,1.557,101,0.449,103,0.852,107,0.921,153,0.096,154,0.096,162,1.897,168,1.557,220,2.103,221,2.186,222,2.988,238,2.103,245,1.413,332,3.182,346,4.885,355,4.215,356,3.479,357,4.215,358,4.215,359,2.293,360,4.215,361,4.215,362,4.215,363,4.215,364,4.215,365,4.215,366,3.479]],["title/interceptors/AuthInterceptor.html",[317,1.675,367,2.486]],["body/interceptors/AuthInterceptor.html",[0,0.88,3,0.35,4,0.297,5,0.297,7,0.35,11,0.699,17,1.829,20,0.528,23,0.699,25,0.699,26,0.039,27,0.699,28,0.393,29,0.699,30,2.124,32,0.617,37,1.324,39,2.124,42,1.996,48,1.636,50,2.421,57,1.608,77,0.576,78,0.297,79,1.215,80,1,82,2.055,87,0.35,97,1.988,98,3.691,101,0.35,102,1.324,103,0.665,104,1.085,105,4.024,106,2.055,107,0.976,108,1,110,3.094,112,3.094,117,1.829,150,2.421,153,0.082,154,0.082,162,1.481,194,1.481,220,1.641,221,2.051,231,2.055,255,1.641,261,2.72,277,2.715,317,2.421,368,3.29,369,2.715,370,4.355,371,3.29,372,4.355,373,5.195,374,2.592,375,5.195,376,3.29,377,4.355,378,4.355,379,4.355,380,5.404,381,4.881,382,2.055,383,4.881,384,4.881,385,4.355,386,4.355,387,4.355,388,3.29,389,4.355,390,4.355,391,3.29,392,3.29,393,3.29,394,3.29,395,3.29,396,3.29,397,3.29,398,3.29,399,2.337,400,4.355,401,3.29,402,4.355,403,3.29,404,3.29,405,3.29,406,4.355,407,4.355,408,3.29,409,3.29,410,3.29,411,2.715,412,3.29,413,3.29,414,3.29,415,2.337,416,3.29,417,3.29,418,3.29,419,3.29,420,3.29,421,3.29,422,2.715,423,3.29,424,3.29]],["title/interfaces/AuthResponse.html",[88,1.356,89,1.675]],["body/interfaces/AuthResponse.html",[0,0.783,1,1.541,3,0.295,4,0.25,5,0.25,6,1.969,7,0.295,8,0.622,9,0.871,10,1.383,12,2.287,13,1.969,15,2.287,16,1.541,17,1.541,18,3.847,20,0.445,22,1.744,26,0.039,28,0.476,30,1.431,32,0.721,33,3.688,35,1.706,36,1.787,37,1.68,38,2.79,39,1.431,40,1.744,41,1.933,42,2.073,43,2.287,44,1.023,46,2.414,48,0.929,49,2.287,50,1.541,51,1.383,52,1.969,53,1.358,54,2.011,56,1.247,57,1.023,58,0.92,59,1.315,61,1.969,62,1.969,64,1.969,66,1.731,67,1.298,68,1.969,69,1.731,70,1.129,71,1.969,72,1.969,73,1.88,76,2.42,77,0.562,78,0.25,79,1.023,80,0.842,81,2.753,82,1.731,83,1.969,84,1.969,85,1.731,86,1.731,87,0.413,88,1.247,89,2.154,90,1.971,91,3.993,92,1.129,93,1.023,94,2.154,95,0.929,96,1.023,97,1.129,98,1.969,99,1.731,100,2.287,101,0.295,102,1.471,103,0.56,104,1.206,105,3.174,106,1.731,107,0.998,108,1.178,109,2.287,110,1.969,111,1.731,112,3.437,113,3.993,114,2.287,115,2.229,116,3.198,117,2.484,118,3.174,119,2.42,120,2.753,121,3.437,122,2.753,123,3.437,124,2.753,125,2.753,126,2.753,127,2.753,128,2.753,129,2.753,130,2.753,131,3.198,132,3.198,133,2.287,134,2.287,135,1.541,136,1.731,137,2.287,138,1.969,139,1.969,140,0.842,141,2.287,142,2.287,143,1.247,144,1.969,145,1.969,146,1.969,147,1.969,148,2.287,149,2.287,150,1.541,151,1.969,152,2.287,153,0.073,154,0.073,425,1.969]],["title/injectables/AuthService.html",[0,0.609,221,1.112]],["body/injectables/AuthService.html",[0,0.665,1,2.812,2,1.103,3,0.235,4,0.2,5,0.2,7,0.235,8,0.529,9,1.332,11,0.529,16,1.83,17,2.59,18,3.309,19,2.717,20,0.355,21,1.229,22,1.96,23,0.917,25,0.699,26,0.039,27,0.699,28,0.393,29,0.699,30,1.215,32,0.802,35,1.881,36,2.073,37,1.794,38,2.909,39,1.868,40,2.096,41,2.65,42,2.026,46,1.962,52,2.338,53,1.194,54,1.96,56,1.481,57,1.215,58,0.939,59,0.98,64,2.338,67,0.741,73,0.816,74,0.941,75,0.941,77,0.539,78,0.2,79,0.816,80,0.672,81,1.571,82,1.381,83,1.571,84,1.571,85,1.381,86,1.381,87,0.235,89,1.229,90,0.9,92,0.9,93,0.816,94,1.83,95,0.741,96,0.816,101,0.235,102,1.324,103,0.447,104,0.98,106,1.381,107,0.939,108,1.707,117,1.83,118,2.338,119,2.056,120,2.338,121,1.571,122,1.571,123,1.571,124,1.571,125,2.338,126,1.571,127,2.338,128,1.571,129,1.571,130,1.571,135,2.186,144,1.571,145,1.571,146,2.338,147,1.571,151,1.571,153,0.062,154,0.062,221,1.215,228,1.318,231,2.721,232,2.721,238,1.103,266,1.825,268,1.229,359,2.339,374,1.962,399,2.338,422,1.825,426,1.825,427,3.932,428,3.932,429,3.932,430,3.932,431,3.246,432,4.356,433,4.356,434,4.356,435,4.356,436,3.291,437,3.291,438,2.21,439,3.596,440,3.291,441,2.21,442,2.21,443,2.21,444,3.291,445,2.717,446,2.21,447,2.21,448,2.21,449,2.21,450,3.291,451,2.21,452,3.291,453,3.291,454,3.291,455,2.21,456,5.196,457,2.21,458,2.21,459,2.21,460,2.21,461,2.21,462,2.21,463,4.657,464,3.291,465,2.21,466,2.21,467,2.21,468,3.291,469,2.21,470,2.717,471,2.21,472,3.932,473,2.21,474,2.21,475,3.309,476,2.21,477,2.21,478,1.381,479,2.21,480,3.932,481,3.932,482,1.962,483,1.962,484,3.932,485,2.21,486,2.21,487,2.21,488,2.21,489,1.825,490,2.21,491,2.21,492,2.21,493,2.21]],["title/components/ConnexionComponent.html",[155,0.272,289,0.83]],["body/components/ConnexionComponent.html",[3,0.252,4,0.213,5,0.213,7,0.252,8,0.555,9,1.011,11,0.555,16,2.501,20,0.379,23,0.868,25,0.555,26,0.039,27,0.722,28,0.466,29,0.555,32,0.579,35,1.158,36,1.276,37,1.67,39,0.872,41,1.179,48,1.158,53,1.289,54,2.025,56,2.025,57,1.51,58,0.813,59,1.403,67,1.158,69,1.475,74,0.967,75,0.967,77,0.533,78,0.213,87,0.252,95,0.792,96,0.872,97,0.962,99,1.475,101,0.368,102,1.243,103,0.477,104,0.589,107,0.865,117,1.314,119,1.475,135,1.314,153,0.065,154,0.065,155,0.406,156,0.651,157,1.051,158,0.962,159,0.872,160,0.872,164,0.792,165,2.056,166,2.056,167,1.725,168,1.51,169,1.158,170,2.904,171,2.273,172,2.273,173,1.51,174,1.37,175,1.408,177,0.872,183,3.43,185,0.792,194,1.063,202,1.678,210,1.475,220,1.179,221,1.847,222,2.577,228,1.604,231,1.475,232,2.159,238,2.244,243,0.718,244,0.792,245,1.158,246,1.475,247,0.792,269,1.95,279,0.718,280,1.276,281,1.276,282,0.872,283,1.661,284,0.872,288,0.872,289,1.239,290,0.872,291,0.651,292,0.872,293,0.651,294,0.872,295,0.651,296,0.872,297,0.651,298,1.276,299,0.651,300,0.651,301,0.872,302,0.651,303,0.792,304,0.872,319,1.475,359,2.154,374,1.179,411,1.95,482,1.725,483,1.725,494,1.95,495,4.087,496,1.408,497,3.456,498,3.951,499,3.374,500,3.951,501,4.498,502,2.853,503,3.456,504,2.362,505,2.362,506,2.853,507,2.362,508,2.362,509,2.362,510,2.362,511,2.362,512,1.475,513,1.95,514,4.264,515,2.853,516,1.95,517,1.95,518,2.362,519,3.374,520,1.95,521,1.95,522,2.362,523,2.362,524,2.853,525,2.362,526,1.95,527,1.922,528,1.922,529,3.374,530,2.362,531,2.362,532,1.678,533,1.95,534,1.95,535,2.362,536,1.475,537,1.95,538,2.362,539,2.362,540,2.362,541,1.95,542,2.362,543,2.362,544,2.853,545,1.95,546,3.951,547,3.951,548,2.362,549,1.179,550,1.95,551,3.374,552,1.95,553,1.95,554,1.95,555,1.475,556,1.95,557,1.95,558,1.95,559,1.95,560,1.95,561,2.362,562,1.314,563,1.95,564,1.95,565,1.95,566,1.95,567,2.853,568,3.456,569,2.853,570,3.456,571,3.456,572,3.456]],["title/components/HomeComponent.html",[155,0.272,291,0.83]],["body/components/HomeComponent.html",[3,0.23,4,0.195,5,0.195,7,0.23,8,0.519,11,0.519,20,0.347,23,0.829,25,0.519,26,0.039,27,0.623,28,0.416,29,0.347,32,0.549,35,1.084,36,1.195,37,1.526,44,1.432,48,0.724,50,2.87,51,1.614,53,1.208,57,1.906,58,0.584,59,0.967,67,0.724,74,0.87,75,0.87,77,0.459,78,0.195,87,0.23,94,1.799,95,1.3,96,0.798,97,1.318,101,0.345,102,0.657,103,0.436,104,0.538,107,0.39,153,0.061,154,0.061,155,0.389,156,0.595,157,0.983,158,0.88,159,0.798,160,0.798,164,0.724,165,2.015,166,2.015,169,0.724,171,1.799,172,2.156,173,1.432,174,1.3,175,1.318,177,0.798,180,2.67,181,2.67,182,3.439,185,0.724,186,2.633,189,3.554,194,1.938,196,2.298,222,2.415,228,1.3,243,0.657,244,0.724,245,0.724,247,0.724,255,2.923,257,2.67,279,0.657,280,1.195,281,1.195,282,0.798,283,1.59,284,0.798,288,0.798,289,0.595,290,0.798,291,1.187,292,0.798,293,0.595,294,0.798,295,0.595,296,0.798,297,0.595,298,1.195,299,0.595,300,0.595,301,0.798,302,0.595,303,0.724,304,0.798,345,3.201,359,1.456,496,1.318,527,1.799,528,1.799,536,2.02,537,1.783,555,3.357,562,1.799,573,1.783,574,3.878,575,3.235,576,2.69,577,4.143,578,2.69,579,2.69,580,3.878,581,4.306,582,4.612,583,2.16,584,3.235,585,2.16,586,2.16,587,2.16,588,2.16,589,3.439,590,2.16,591,2.16,592,2.16,593,2.67,594,4.306,595,2.394,596,1.783,597,3.235,598,1.783,599,1.783,600,1.783,601,3.554,602,2.16,603,1.535,604,2.16,605,2.16,606,2.16,607,2.16,608,1.783,609,2.16,610,2.16,611,3.554,612,4.841,613,3.235,614,4.841,615,4.841,616,3.235,617,3.235,618,3.235,619,4.306,620,3.235,621,3.235,622,2.298,623,4.306,624,4.306,625,4.306,626,4.306,627,3.235,628,3.235,629,3.235,630,3.235,631,2.298,632,2.67,633,4.306,634,3.235,635,1.799,636,3.235,637,3.235,638,1.799,639,4.306,640,3.235,641,3.235,642,3.235,643,3.235,644,2.16,645,3.235,646,3.235,647,2.16,648,3.235,649,3.235,650,4.306,651,3.235,652,3.235,653,3.235,654,3.235,655,3.235,656,3.235,657,2.67,658,3.235,659,3.235,660,3.235,661,3.235,662,2.16,663,3.235,664,3.235,665,3.235,666,4.306,667,3.235,668,3.235,669,3.235,670,3.235,671,3.235,672,3.235,673,3.235,674,3.235,675,3.235,676,3.235,677,3.235,678,3.235,679,2.67,680,3.235,681,3.235,682,3.235,683,3.235,684,3.235,685,3.235,686,3.235,687,2.16,688,2.16,689,2.16]],["title/components/InscriptionComponent.html",[155,0.272,293,0.83]],["body/components/InscriptionComponent.html",[3,0.181,4,0.154,5,0.154,7,0.181,8,0.432,9,1.133,11,0.432,20,0.273,23,0.872,25,0.536,26,0.039,27,0.664,28,0.455,29,0.536,32,0.74,35,1.752,36,1.93,37,1.781,39,1.402,41,1.344,48,1.601,53,1.175,54,1.212,56,1.504,58,0.889,59,1.322,67,0.57,70,1.547,73,1.402,74,0.931,75,0.931,77,0.469,78,0.154,87,0.181,90,1.097,95,0.57,96,0.629,97,1.097,99,1.063,101,0.181,102,0.819,103,0.344,104,0.833,107,0.863,140,0.819,143,1.709,153,0.051,154,0.051,155,0.343,156,0.469,157,0.819,158,0.693,159,0.629,160,0.629,164,0.57,165,1.898,166,1.898,167,1.344,168,1.402,169,0.902,170,2.373,171,1.858,172,1.858,173,1.234,174,1.119,175,1.097,177,0.629,183,1.682,184,3.274,185,0.57,190,1.913,194,1.212,202,1.209,210,1.682,220,0.849,221,1.625,222,2.299,228,1.8,232,1.682,236,2.223,238,2.564,243,0.518,244,0.57,245,0.57,246,1.063,247,0.57,255,1.344,279,0.518,280,0.994,281,0.994,282,0.629,283,1.402,284,0.629,288,0.629,289,0.469,290,0.629,291,0.469,292,0.629,293,1.046,294,0.629,295,0.469,296,0.629,297,0.469,298,0.994,299,0.469,300,0.469,301,0.629,302,0.469,303,0.57,304,0.629,319,1.063,359,2.418,366,1.405,374,0.849,382,1.063,439,2.223,478,1.682,482,0.849,483,1.344,496,1.097,498,3.415,499,2.757,500,3.415,502,2.223,506,2.223,512,1.063,513,1.405,514,3.803,515,2.223,516,1.405,519,3.135,520,2.223,521,1.405,524,1.405,526,1.405,527,2.656,528,2.3,529,2.757,532,1.209,533,1.405,534,2.223,536,1.063,541,1.405,544,2.223,546,3.943,547,3.943,549,1.667,550,1.405,551,2.757,552,1.405,553,1.405,554,1.405,555,1.063,556,1.405,557,1.405,558,1.405,559,1.405,560,1.405,562,2.112,564,1.405,565,1.405,566,1.405,569,2.223,603,1.209,635,0.947,638,2.446,657,2.223,690,1.405,691,3.34,692,2.693,693,3.34,694,4.607,695,4.137,696,3.797,697,2.693,698,3.797,699,3.797,700,3.797,701,3.797,702,2.693,703,1.702,704,3.135,705,2.693,706,1.702,707,1.702,708,3.797,709,2.693,710,1.702,711,1.702,712,2.693,713,1.702,714,1.702,715,2.693,716,2.693,717,2.693,718,1.702,719,1.702,720,1.702,721,1.702,722,1.702,723,3.34,724,1.682,725,2.878,726,1.702,727,1.063,728,1.702,729,1.702,730,3.34,731,3.797,732,3.34,733,2.693,734,1.702,735,1.702,736,1.702,737,1.405,738,2.087,739,1.063,740,2.087,741,1.702,742,2.693,743,1.702,744,1.702,745,1.702,746,1.702,747,1.702,748,1.702,749,1.702,750,1.702,751,3.34,752,3.34,753,1.702,754,3.34,755,1.702,756,2.693,757,1.702,758,1.702,759,1.702,760,1.702,761,1.702,762,1.702,763,1.702,764,1.702,765,1.702,766,1.702,767,1.702,768,1.702,769,1.702,770,1.702,771,1.702,772,3.34,773,1.702,774,2.223,775,2.693,776,2.693,777,2.693,778,2.693,779,2.693,780,2.693,781,2.693,782,2.693,783,2.693,784,2.223,785,2.693,786,2.223,787,1.913,788,1.682,789,2.223,790,1.702,791,1.702]],["title/components/ProfilComponent.html",[155,0.272,295,0.83]],["body/components/ProfilComponent.html",[3,0.241,4,0.204,5,0.204,7,0.241,8,0.538,9,0.991,11,0.538,16,1.259,20,0.708,23,0.818,25,0.363,26,0.039,27,0.64,28,0.398,29,0.363,32,0.565,35,1.65,36,1.819,37,1.743,39,0.836,40,2.447,46,1.671,53,0.896,58,0.89,59,1.391,61,2.38,62,2.38,67,0.759,70,1.624,73,1.473,74,0.457,75,0.457,77,0.569,78,0.204,80,0.688,87,0.241,90,0.922,95,0.759,96,0.836,101,0.357,102,1.549,104,0.994,107,0.796,135,1.863,140,0.688,143,1.983,153,0.063,154,0.063,155,0.398,156,0.624,157,1.018,158,0.922,159,0.836,160,0.836,162,1.508,163,2.491,164,0.759,165,2.036,166,2.036,167,1.671,168,1.237,169,1.123,171,2.217,172,2.217,173,1.473,174,1.336,175,1.364,177,0.836,185,0.759,219,2.753,220,1.129,221,1.974,228,0.759,243,0.688,244,0.759,245,0.759,246,1.414,247,0.759,268,1.259,279,0.688,280,1.237,281,1.237,282,0.836,283,1.627,284,0.836,288,0.836,289,0.624,290,0.836,291,0.624,292,0.836,293,0.624,294,0.836,295,1.214,296,0.836,297,0.624,298,1.237,299,0.624,300,0.624,301,0.836,302,0.624,303,0.759,304,0.836,316,1.624,338,1.414,359,2.217,382,1.414,431,3.291,482,1.671,483,1.671,489,3.638,496,1.364,512,1.414,527,2.738,528,2.971,549,1.129,562,2.738,595,1.863,635,1.259,638,1.863,724,1.414,725,2.491,727,1.414,738,2.491,739,1.414,740,2.491,774,2.765,784,2.765,787,2.38,788,2.092,789,2.765,792,1.868,793,3.291,794,3.987,795,3.349,796,3.987,797,2.833,798,4.925,799,3.638,800,4.407,801,2.447,802,3.396,803,3.638,804,4.065,805,3.349,806,2.263,807,3.349,808,2.263,809,2.263,810,3.291,811,2.263,812,2.263,813,2.263,814,1.868,815,3.349,816,2.263,817,2.765,818,4.552,819,2.263,820,2.263,821,2.263,822,2.263,823,1.868,824,3.349,825,3.987,826,3.349,827,2.263,828,3.987,829,2.263,830,3.349,831,2.765,832,2.263,833,2.263,834,2.263,835,2.263,836,2.263,837,3.349,838,2.263,839,2.263,840,2.263,841,2.263,842,2.263,843,2.263,844,2.263,845,2.263,846,2.263,847,2.263,848,3.349,849,2.263,850,3.349,851,3.349,852,3.349,853,3.349,854,3.349]],["title/injectables/ProfilService.html",[0,0.609,802,1.881]],["body/injectables/ProfilService.html",[0,0.956,2,1.866,3,0.398,4,0.337,5,0.337,7,0.398,8,0.76,9,1.167,10,2.59,11,0.76,13,3.875,20,0.6,21,2.079,22,2.455,23,0.923,25,0.876,26,0.039,27,0.876,28,0.508,29,0.876,30,1.747,32,0.772,40,2.455,42,2.201,44,2.201,53,0.841,74,0.755,75,0.755,76,2.955,77,0.553,78,0.337,79,1.381,80,1.137,87,0.398,92,1.523,93,1.381,101,0.398,103,0.755,107,0.986,138,2.656,140,1.578,153,0.089,154,0.089,802,2.955,855,3.086,856,4.731,857,4.731,858,4.731,859,4.731,860,4.731,861,3.739,862,3.739,863,4.731,864,3.739,865,4.731,866,3.739,867,2.079,868,2.335,869,2.079,870,3.739,871,3.739,872,3.739]],["title/components/PublierTrajetComponent.html",[155,0.272,297,0.83]],["body/components/PublierTrajetComponent.html",[3,0.292,4,0.247,5,0.247,7,0.292,8,0.617,9,0.998,11,0.617,20,0.617,23,0.713,25,0.44,26,0.039,27,0.713,28,0.347,29,0.44,32,0.544,35,1.288,36,1.419,37,1.796,39,1.419,48,1.488,56,1.232,57,1.639,58,0.694,67,0.918,70,1.96,77,0.56,78,0.247,87,0.292,95,0.918,96,1.011,101,0.409,104,1.106,107,0.694,140,0.832,153,0.072,154,0.072,155,0.401,156,0.754,157,1.168,158,1.115,159,1.011,160,1.011,164,0.918,165,2.118,166,2.118,169,1.288,173,1.639,174,1.488,175,1.565,177,1.011,185,1.955,186,2.888,190,1.945,222,2.693,228,1.488,243,0.832,244,0.918,245,0.918,247,0.918,255,1.917,261,1.71,268,1.522,279,0.832,280,1.419,281,1.419,282,1.011,283,1.777,284,1.011,288,1.011,289,0.754,290,1.011,291,0.754,292,1.011,293,0.754,294,1.011,295,0.754,296,1.011,297,1.397,298,1.419,299,0.754,300,0.754,301,1.011,302,0.754,303,0.918,304,1.011,316,1.808,338,1.71,339,3.419,374,1.366,482,1.366,483,1.917,496,1.565,512,2.773,576,1.71,578,1.71,579,1.71,595,2.136,596,2.26,622,1.945,631,3.419,638,2.136,787,2.73,788,2.4,793,3.664,799,3.973,803,3.172,804,3.973,810,3.664,814,2.26,817,2.26,818,4.455,873,3.973,874,2.26,875,3.664,876,3.172,877,4.439,878,2.738,879,3.001,880,3.842,881,2.738,882,3.842,883,3.842,884,5.069,885,2.26,886,2.738,887,2.738,888,2.738,889,3.664,890,2.738,891,2.738,892,3.842,893,2.738,894,4.184,895,2.26,896,2.26,897,2.26,898,2.738,899,2.738,900,2.738,901,2.26,902,2.26,903,2.26,904,2.26,905,2.738,906,2.738,907,2.738,908,2.738,909,2.738,910,2.738,911,3.172,912,2.26,913,2.738,914,2.73,915,3.842,916,3.842,917,2.738]],["title/pipes/TimePipe.html",[115,1.503,316,1.227]],["body/pipes/TimePipe.html",[3,0.422,4,0.358,5,0.358,11,0.637,23,0.637,25,0.637,26,0.039,27,0.856,28,0.358,29,0.637,32,0.695,48,1.645,53,1.329,75,1.126,77,0.422,78,0.358,87,0.422,101,0.422,102,1.206,104,1.329,107,0.963,108,1.206,115,2.78,153,0.092,154,0.092,162,1.785,164,1.329,194,2.209,213,4.052,316,2.171,382,2.477,415,2.818,549,2.449,563,4.052,595,3.243,914,3.487,918,3.274,919,3.274,920,4.598,921,4.908,922,5.331,923,4.908,924,3.966,925,4.908,926,4.908,927,4.908,928,3.966,929,3.966,930,3.966,931,3.274,932,3.966,933,3.966,934,3.966,935,3.966,936,3.966]],["title/components/TrajetComponent.html",[155,0.272,299,0.83]],["body/components/TrajetComponent.html",[3,0.155,4,0.131,5,0.131,7,0.155,8,0.381,9,0.675,11,0.381,20,0.556,23,0.894,25,0.658,26,0.039,27,0.724,28,0.473,29,0.613,32,0.742,35,1.812,36,1.721,37,1.783,38,2.994,42,1.28,44,1.596,46,1.183,48,0.794,50,1.318,53,1.205,56,0.654,57,1.513,58,0.428,59,0.362,66,2.558,67,1.448,68,1.684,69,1.481,70,0.966,71,1.684,72,1.684,73,0.876,74,0.992,75,0.942,77,0.48,78,0.131,80,0.442,87,0.155,94,0.808,95,0.487,96,0.537,97,2.159,101,0.253,102,1.161,104,1.077,107,0.69,136,1.481,140,0.442,150,0.808,153,0.045,154,0.045,155,0.313,156,0.4,157,0.721,158,0.592,159,0.537,160,0.537,162,1.067,163,1.876,164,0.487,165,1.812,166,1.812,167,1.183,168,0.876,169,0.794,173,1.109,174,1.006,175,0.966,177,0.537,182,3.674,185,0.487,186,2.615,194,1.067,197,1.199,208,1.957,210,2.165,219,2.558,228,1.756,243,0.442,244,0.487,245,0.487,247,0.487,255,1.183,261,2.165,268,0.808,279,0.442,280,0.876,281,0.876,282,0.537,283,1.28,284,0.537,288,0.537,289,0.4,290,0.537,291,0.4,292,0.537,293,0.4,294,0.537,295,0.4,296,0.537,297,0.4,298,0.876,299,0.955,300,0.4,301,0.537,302,0.4,303,1.006,304,0.537,316,1.223,338,0.907,359,0.654,374,1.729,415,2.134,445,1.957,470,1.957,475,2.134,482,1.729,483,2.248,496,0.966,527,0.808,528,0.808,532,1.032,545,1.957,549,1.183,555,1.481,562,0.808,567,1.957,576,1.876,577,2.479,578,1.876,579,1.876,589,2.134,593,1.957,598,2.479,599,2.479,600,1.957,601,1.199,611,1.957,622,1.032,631,2.462,638,0.808,737,1.957,786,1.199,788,1.481,823,1.199,831,2.86,869,0.808,875,2.479,876,1.957,879,2.592,885,1.199,889,1.957,895,1.199,896,1.199,897,1.199,901,1.199,902,1.199,903,1.957,904,1.199,911,1.199,912,1.199,914,1.684,931,1.199,937,1.199,938,3.003,939,3.003,940,4.096,941,3.818,942,3.003,943,3.465,944,3.465,945,3.465,946,3.465,947,1.957,948,2.371,949,2.371,950,2.371,951,1.453,952,3.465,953,3.465,954,2.479,955,2.371,956,3.003,957,1.453,958,4.096,959,4.096,960,1.453,961,1.453,962,1.453,963,1.957,964,1.453,965,1.453,966,2.371,967,1.453,968,1.453,969,1.453,970,4.32,971,4.661,972,2.371,973,2.371,974,2.371,975,2.371,976,2.371,977,1.453,978,4.096,979,1.957,980,2.371,981,1.453,982,1.453,983,1.453,984,1.453,985,2.371,986,1.957,987,1.453,988,1.453,989,1.453,990,1.453,991,1.453,992,1.453,993,1.453,994,1.453,995,1.453,996,1.453,997,2.371,998,1.453,999,1.199,1000,3.003,1001,1.453,1002,1.453,1003,1.453,1004,1.453,1005,1.453,1006,1.453,1007,1.453,1008,2.371,1009,1.453,1010,1.453,1011,2.371,1012,2.371,1013,1.453,1014,2.371,1015,2.371,1016,3.003,1017,1.453,1018,3.003,1019,1.453,1020,1.453,1021,3.957,1022,1.453,1023,1.453,1024,3.003,1025,2.371,1026,2.371,1027,3.003,1028,1.453,1029,1.453,1030,1.453,1031,3.003,1032,1.453,1033,3.003,1034,1.453,1035,1.453,1036,3.003,1037,1.453,1038,1.453,1039,1.199,1040,1.453,1041,1.453,1042,1.453,1043,1.453,1044,1.453,1045,1.453,1046,1.453,1047,1.453,1048,1.453,1049,3.003,1050,1.453,1051,1.453,1052,1.453,1053,1.453,1054,1.453,1055,2.371,1056,3.003,1057,2.371,1058,2.371,1059,1.453,1060,1.453,1061,1.453,1062,1.453,1063,1.453,1064,1.453,1065,2.371,1066,2.371,1067,3.003,1068,2.371,1069,3.003,1070,1.453,1071,1.453,1072,1.453,1073,1.453,1074,2.371,1075,1.453,1076,1.453,1077,1.453,1078,2.371,1079,1.453,1080,1.453,1081,1.453,1082,1.453,1083,1.453,1084,1.453,1085,1.453,1086,1.453,1087,1.453,1088,3.003,1089,1.453,1090,1.453,1091,1.453,1092,1.453,1093,1.453,1094,1.453,1095,1.453,1096,1.453,1097,2.371,1098,2.371,1099,2.371,1100,2.371,1101,2.371,1102,2.371,1103,2.371,1104,2.371,1105,2.371,1106,2.371,1107,2.371,1108,3.465,1109,1.453,1110,1.453,1111,2.371,1112,2.371,1113,2.371,1114,1.453,1115,1.453]],["title/injectables/TrajetService.html",[0,0.609,879,1.675]],["body/injectables/TrajetService.html",[0,0.861,2,1.59,3,0.339,4,0.288,5,0.288,7,0.339,8,0.685,9,1.153,10,2.56,11,0.685,20,0.512,21,1.772,22,2.309,23,0.929,25,0.884,26,0.039,27,0.884,28,0.507,29,0.884,30,1.575,32,0.796,42,2.227,44,2.227,53,1.264,74,0.644,75,0.644,76,2.663,77,0.546,78,0.288,79,1.177,80,0.969,87,0.339,92,1.298,93,1.177,101,0.339,103,0.644,104,1.063,107,1.015,108,1.296,136,1.991,139,2.264,140,0.969,153,0.08,154,0.08,186,2.127,576,3.204,578,3.001,579,1.991,595,1.772,867,2.371,868,2.663,869,2.371,879,2.371,894,3.519,920,2.631,947,3.519,963,3.519,979,4.235,1039,3.519,1116,2.631,1117,4.263,1118,4.263,1119,5.13,1120,4.263,1121,5.13,1122,4.263,1123,4.263,1124,3.187,1125,4.263,1126,3.187,1127,3.187,1128,4.263,1129,3.187,1130,3.187,1131,3.187,1132,4.263,1133,3.187,1134,4.263,1135,2.264,1136,3.187,1137,3.187,1138,2.631,1139,3.187,1140,3.187,1141,4.263,1142,3.187,1143,3.187,1144,3.187,1145,3.187,1146,3.187,1147,3.187,1148,3.187,1149,3.187,1150,4.263,1151,3.187,1152,3.187,1153,3.187,1154,3.187,1155,3.187]],["title/interfaces/Utilisateur.html",[58,0.544,88,1.356]],["body/interfaces/Utilisateur.html",[0,0.913,3,0.371,4,0.314,5,0.314,7,0.371,8,0.726,9,0.783,10,1.738,22,2.035,26,0.039,28,0.54,30,1.286,42,2.121,44,2.15,51,1.738,53,1.398,54,2.391,58,1.08,59,1.324,70,2.164,73,1.962,77,0.535,78,0.314,79,1.286,80,1.059,87,0.482,88,1.568,90,2.164,92,1.419,93,1.286,101,0.371,103,0.704,107,1.019,108,1.059,111,2.176,140,1.674,143,2.259,153,0.085,154,0.085,343,2.176,425,2.475,478,3.318,635,1.937,724,3.318,725,3.318,738,2.176,739,2.176,740,2.176,797,3.212,801,1.568,867,1.937,868,2.176,869,1.937,1156,2.475,1157,4.521,1158,2.875,1159,2.875,1160,2.875,1161,2.875,1162,2.875,1163,2.875,1164,2.875,1165,2.475,1166,2.875,1167,2.875,1168,2.875,1169,2.875,1170,2.475,1171,2.475,1172,2.875]],["title/components/UtilisateurFormComponent.html",[155,0.272,300,0.83]],["body/components/UtilisateurFormComponent.html",[3,0.344,4,0.291,5,0.291,7,0.344,11,0.69,20,0.518,23,0.828,25,0.518,26,0.039,27,0.905,28,0.436,29,0.518,32,0.457,58,1.106,59,1.285,74,0.652,75,0.652,77,0.549,78,0.291,87,0.344,101,0.344,103,0.652,108,0.981,153,0.081,154,0.081,155,0.436,156,0.889,157,1.307,158,1.314,159,1.192,160,1.192,164,1.081,165,2.181,166,2.181,167,2.145,168,1.588,169,1.441,173,1.786,174,1.62,175,1.751,177,1.192,185,1.081,228,1.441,243,0.981,244,1.081,247,1.081,279,0.981,280,1.588,281,1.588,282,1.192,283,1.904,284,1.192,288,1.192,289,0.889,290,1.192,291,0.889,292,1.192,293,0.889,294,1.192,295,0.889,296,1.192,297,0.889,298,1.588,299,0.889,300,1.421,301,1.192,302,0.889,303,1.081,304,1.192,343,2.686,496,1.751,517,3.549,603,3.055,727,2.016,801,2.486,1173,3.815,1174,4.433,1175,2.664,1176,4.835,1177,4.299,1178,5.156,1179,4.299,1180,4.835,1181,2.664,1182,4.299,1183,4.299,1184,4.299,1185,3.227,1186,4.835,1187,3.227,1188,4.299,1189,4.299,1190,3.227,1191,3.227,1192,3.227,1193,4.299,1194,3.227,1195,3.549,1196,4.299,1197,3.549,1198,3.549,1199,4.299]],["title/components/UtilisateurListComponent.html",[155,0.272,302,0.83]],["body/components/UtilisateurListComponent.html",[3,0.339,4,0.288,5,0.288,7,0.339,8,0.685,11,0.685,20,0.512,23,0.859,25,0.685,26,0.039,27,0.917,28,0.434,29,0.685,32,0.68,44,1.774,51,2.397,58,1.079,59,1.063,74,0.644,75,0.644,77,0.512,78,0.288,87,0.339,101,0.339,103,0.644,140,1.461,150,1.772,153,0.08,154,0.08,155,0.434,156,0.878,157,1.296,159,1.177,160,1.177,162,1.919,163,3.001,164,1.068,165,2.176,166,2.176,169,1.429,174,1.61,177,1.177,185,1.068,219,3.204,228,1.844,243,0.969,247,1.068,279,0.969,280,1.575,281,1.575,282,1.177,283,1.895,284,1.177,288,1.177,289,0.878,290,1.177,291,0.878,292,1.177,293,0.878,294,1.177,295,0.878,296,1.177,297,0.878,298,1.575,299,0.878,300,0.878,301,1.177,302,1.414,303,1.844,304,1.177,496,1.737,727,1.991,801,2.477,1021,2.631,1170,3.029,1171,3.029,1173,3.91,1181,2.631,1195,3.519,1197,3.519,1198,3.519,1200,4.542,1201,2.631,1202,4.263,1203,4.263,1204,4.263,1205,3.519,1206,5.13,1207,4.263,1208,3.187,1209,3.187,1210,3.187,1211,4.263,1212,3.187,1213,3.187,1214,3.187,1215,3.187,1216,4.263,1217,4.263,1218,4.263,1219,4.263]],["title/injectables/UtilisateurService.html",[0,0.609,801,1.356]],["body/injectables/UtilisateurService.html",[0,0.873,2,1.623,3,0.346,4,0.293,5,0.293,7,0.346,8,0.694,9,1.091,10,2.422,11,0.694,20,0.522,21,1.808,22,2.328,23,0.921,25,0.889,26,0.039,27,0.889,28,0.51,29,0.889,30,1.596,32,0.784,42,2.211,44,2.222,51,1.623,53,1.329,54,1.464,58,1.1,59,0.811,70,1.325,73,1.201,74,0.657,75,0.657,77,0.517,78,0.293,79,1.201,80,0.989,87,0.46,88,1.464,90,1.325,92,1.325,93,1.201,101,0.346,103,0.657,107,1,108,0.989,111,2.031,140,1.683,143,1.464,153,0.081,154,0.081,343,2.031,478,2.031,635,1.808,724,2.031,725,2.031,738,2.031,739,2.031,740,2.031,797,3.674,801,1.945,867,1.808,868,2.031,869,1.808,1156,2.31,1158,3.567,1159,4.269,1160,2.684,1161,3.567,1162,2.684,1163,3.567,1164,2.684,1165,2.31,1166,3.567,1167,2.684,1168,3.567,1169,2.684,1170,2.31,1171,3.07,1172,2.684,1205,3.567,1220,4.321,1221,4.321,1222,4.321,1223,4.321,1224,4.321,1225,3.252,1226,3.252,1227,3.252,1228,3.252,1229,3.252,1230,3.252]],["title/coverage.html",[1231,3.388]],["body/coverage.html",[0,1.131,1,2.046,5,0.332,6,3.327,26,0.039,28,0.332,58,0.665,88,2.108,89,2.046,108,1.119,115,1.836,153,0.088,154,0.088,155,0.536,156,1.014,161,3.037,221,1.359,289,1.014,291,1.014,293,1.014,295,1.014,297,1.014,299,1.014,300,1.014,302,1.014,316,1.499,317,2.046,332,2.298,339,2.614,354,2.614,356,3.037,367,3.037,369,3.037,426,3.037,494,3.037,549,3.069,573,3.037,679,3.037,690,3.037,792,3.037,801,1.656,802,2.298,855,3.037,873,3.037,874,3.037,879,2.046,919,3.037,937,3.037,986,3.037,1116,3.037,1135,3.327,1156,3.327,1173,3.327,1174,3.037,1175,3.037,1200,3.037,1201,3.037,1231,3.037,1232,3.679,1233,3.679,1234,3.679,1235,3.037,1236,5.816,1237,3.865,1238,5.816,1239,3.679,1240,3.679,1241,3.865,1242,3.037,1243,3.037,1244,3.037,1245,3.037,1246,3.037,1247,5.151,1248,3.679,1249,3.679,1250,4.683,1251,4.683,1252,3.679,1253,3.679,1254,3.679,1255,3.679,1256,3.679,1257,3.679,1258,3.679,1259,3.679,1260,3.679,1261,3.679,1262,4.683,1263,3.679,1264,3.679,1265,3.679,1266,3.679,1267,3.037,1268,3.037,1269,3.037,1270,3.679,1271,3.679]],["title/dependencies.html",[308,2.261,1272,2.079]],["body/dependencies.html",[26,0.039,78,0.389,80,1.31,85,2.691,86,2.691,153,0.097,154,0.097,243,1.31,244,1.444,245,1.444,308,2.691,310,3.061,330,4.563,331,3.224,999,4.261,1273,6.014,1274,4.308,1275,4.308,1276,3.061,1277,4.308,1278,4.308,1279,3.556,1280,4.308,1281,5.527,1282,4.308,1283,4.308,1284,4.308,1285,4.308,1286,4.308,1287,4.308,1288,4.308,1289,4.308,1290,4.308,1291,4.308,1292,4.308,1293,4.308,1294,4.308,1295,4.308,1296,4.308,1297,4.308,1298,4.308]],["title/index.html",[7,0.268,1299,2.518,1300,2.518]],["body/index.html",[4,0.349,26,0.03,74,0.977,108,1.176,153,0.091,154,0.091,155,0.476,157,1.176,247,1.297,303,1.297,331,2.417,399,2.749,475,2.749,536,2.417,608,3.194,867,2.152,918,3.194,1276,3.746,1279,3.194,1301,3.869,1302,5.272,1303,3.869,1304,4.834,1305,5.522,1306,5.684,1307,3.194,1308,4.834,1309,3.869,1310,5.684,1311,5.797,1312,4.785,1313,3.869,1314,4.834,1315,3.869,1316,3.869,1317,4.834,1318,3.869,1319,3.869,1320,3.869,1321,3.869,1322,3.869,1323,4.834,1324,4.834,1325,3.869,1326,3.869,1327,3.869,1328,5.272,1329,3.869,1330,3.869,1331,3.869,1332,3.869,1333,3.869,1334,3.869,1335,5.272,1336,3.869,1337,3.869,1338,3.869,1339,3.869,1340,3.194,1341,3.194,1342,3.869,1343,3.194,1344,3.869,1345,4.834,1346,5.272,1347,3.869,1348,3.869,1349,3.869,1350,3.869,1351,3.869,1352,5.272,1353,3.869,1354,5.797,1355,3.869,1356,4.834,1357,3.869,1358,3.869,1359,3.869,1360,3.869,1361,3.869,1362,3.869,1363,3.869,1364,3.869,1365,3.869,1366,3.869,1367,3.869,1368,3.869,1369,3.869,1370,3.869,1371,3.869,1372,2.749,1373,3.869]],["title/modules.html",[307,2.916]],["body/modules.html",[26,0.034,153,0.104,154,0.104,306,3.023,307,3.439,331,3.023,1374,4.84,1375,4.84,1376,4.84]],["title/overview.html",[1372,2.916]],["body/overview.html",[2,2.264,26,0.036,115,2.264,153,0.1,154,0.1,157,1.38,279,1.38,305,3.783,306,3.759,308,2.835,309,3.746,310,3.224,311,3.224,312,3.746,313,3.746,314,3.746,315,3.746,316,2.301,317,3.142,318,4.395,319,2.835,320,3.746,354,3.224,425,3.224,589,4.014,632,3.746,1372,3.224,1377,4.538,1378,4.538]],["title/properties.html",[8,0.581,1272,2.079]],["body/properties.html",[8,0.78,26,0.036,153,0.104,154,0.104,1307,4.01,1379,4.858]],["title/miscellaneous/variables.html",[1380,2.079,1381,2.989]],["body/miscellaneous/variables.html",[7,0.39,26,0.039,28,0.516,30,1.723,74,1.174,75,1.174,153,0.088,154,0.088,168,1.998,196,2.599,238,1.825,311,3.315,342,3.02,704,3.02,954,3.851,1135,3.844,1138,3.02,1165,2.599,1235,3.851,1237,4.466,1241,3.02,1242,4.241,1243,3.02,1244,3.851,1245,3.02,1246,3.851,1267,3.02,1268,3.851,1269,3.02,1276,2.599,1312,3.02,1340,3.02,1341,3.851,1343,3.02,1380,3.02,1381,3.02,1382,3.658,1383,4.666,1384,3.658,1385,3.658,1386,3.658,1387,4.666,1388,3.658,1389,3.658,1390,3.658,1391,3.658,1392,3.658,1393,3.658,1394,3.658,1395,3.658,1396,3.658,1397,3.658,1398,3.658,1399,3.658,1400,3.658,1401,3.658,1402,3.658,1403,3.658,1404,3.658,1405,3.658,1406,3.658,1407,3.658,1408,5.137,1409,3.658,1410,3.658,1411,3.658,1412,3.658,1413,3.658,1414,3.658,1415,3.658,1416,3.658,1417,3.658,1418,3.658,1419,3.658,1420,3.658,1421,3.658,1422,3.658,1423,4.666,1424,3.658,1425,3.658,1426,3.658,1427,3.658,1428,3.658,1429,3.658,1430,3.658,1431,3.658,1432,3.658,1433,3.658,1434,3.658,1435,3.658,1436,3.658,1437,3.658]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":549,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1379,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":589,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{},"overview.html":{}}}],["1.5",{"_index":539,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["1.9.4",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1073,"title":{},"body":{"components/TrajetComponent.html":{}}}],["100",{"_index":986,"title":{},"body":{"components/TrajetComponent.html":{},"coverage.html":{}}}],["11",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":1103,"title":{},"body":{"components/TrajetComponent.html":{}}}],["1500",{"_index":543,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["19.2.0",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["19.2.3",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["19.2.4",{"_index":1279,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1b1f",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":632,"title":{},"body":{"components/HomeComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["2.3522",{"_index":1063,"title":{},"body":{"components/TrajetComponent.html":{}}}],["2/10",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":735,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["2024",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["2a01",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":636,"title":{},"body":{"components/HomeComponent.html":{}}}],["3.2.12",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":737,"title":{},"body":{"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["4.0.0",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["4.8",{"_index":1102,"title":{},"body":{"components/TrajetComponent.html":{}}}],["4/8",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":770,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["401",{"_index":411,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/ConnexionComponent.html":{}}}],["405",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["4470",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e40.ngrok",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1378,"title":{},"body":{"overview.html":{}}}],["5.3.3",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["54",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1064,"title":{},"body":{"components/TrajetComponent.html":{}}}],["6/11",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["6/16",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["6cdd",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1.0",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":779,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["9",{"_index":1377,"title":{},"body":{"overview.html":{}}}],["9/21",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":417,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["accesstoken",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["accueil",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["actions",{"_index":1216,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["activatedroute",{"_index":952,"title":{},"body":{"components/TrajetComponent.html":{}}}],["activatedroutesnapshot",{"_index":361,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["actual_component",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["add",{"_index":1074,"title":{},"body":{"components/TrajetComponent.html":{}}}],["additional",{"_index":1364,"title":{},"body":{"index.html":{}}}],["addto(this.map",{"_index":1069,"title":{},"body":{"components/TrajetComponent.html":{}}}],["addtrajet",{"_index":1117,"title":{},"body":{"injectables/TrajetService.html":{}}}],["addtrajet(trajet",{"_index":1123,"title":{},"body":{"injectables/TrajetService.html":{}}}],["adresse",{"_index":528,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["afterviewinit",{"_index":994,"title":{},"body":{"components/TrajetComponent.html":{}}}],["ajoute",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ajouter",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["alert('erreur",{"_index":912,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["alert('error",{"_index":849,"title":{},"body":{"components/ProfilComponent.html":{}}}],["alert('please",{"_index":822,"title":{},"body":{"components/ProfilComponent.html":{}}}],["alert('profile",{"_index":845,"title":{},"body":{"components/ProfilComponent.html":{}}}],["alert('réservation",{"_index":1042,"title":{},"body":{"components/TrajetComponent.html":{}}}],["alert('trajet",{"_index":907,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["alert('veuillez",{"_index":897,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["already",{"_index":1047,"title":{},"body":{"components/TrajetComponent.html":{}}}],["android",{"_index":1138,"title":{},"body":{"injectables/TrajetService.html":{},"miscellaneous/variables.html":{}}}],["androidscheme",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":1305,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["angular/compiler",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{}}}],["api/api.service",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["api/utilisateur",{"_index":1158,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["apiurl",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["apiurlgo",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["app.component",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app.component.css",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":156,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appel",{"_index":1038,"title":{},"body":{"components/TrajetComponent.html":{}}}],["appid",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1317,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appname",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":306,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["après",{"_index":538,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["arrival",{"_index":1077,"title":{},"body":{"components/TrajetComponent.html":{}}}],["artifacts",{"_index":1338,"title":{},"body":{"index.html":{}}}],["async",{"_index":798,"title":{},"body":{"components/ProfilComponent.html":{}}}],["attribution",{"_index":1066,"title":{},"body":{"components/TrajetComponent.html":{}}}],["au",{"_index":552,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["aucun",{"_index":1113,"title":{},"body":{"components/TrajetComponent.html":{}}}],["aussi",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["auth",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":360,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["auth/auth.service",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authentifi",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguardservice",{"_index":332,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":317,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["authreq",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authresponse",{"_index":89,"title":{"interfaces/AuthResponse.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authservice",{"_index":221,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"coverage.html":{}}}],["automatically",{"_index":1318,"title":{},"body":{"index.html":{}}}],["available",{"_index":1331,"title":{},"body":{"index.html":{}}}],["avec",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["avis",{"_index":1104,"title":{},"body":{"components/TrajetComponent.html":{}}}],["await",{"_index":826,"title":{},"body":{"components/ProfilComponent.html":{}}}],["bas",{"_index":1009,"title":{},"body":{"components/TrajetComponent.html":{}}}],["bearer",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{}}}],["beaucoup",{"_index":646,"title":{},"body":{"components/HomeComponent.html":{}}}],["behaviorsubject",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(null",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["behaviorsubject(this.checkauth",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["better",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":1091,"title":{},"body":{"components/TrajetComponent.html":{}}}],["bienvenue",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["blue",{"_index":1096,"title":{},"body":{"components/TrajetComponent.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["bootstrap",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["browse",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["build",{"_index":1335,"title":{},"body":{"index.html":{}}}],["buildthis",{"_index":1336,"title":{},"body":{"index.html":{}}}],["calculateavailableplaces",{"_index":943,"title":{},"body":{"components/TrajetComponent.html":{}}}],["canactivate",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["capacitor.config.ts",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":1280,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["capacitor/ios",{"_index":1283,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capacitorhttp",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caractères",{"_index":780,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["carbone",{"_index":626,"title":{},"body":{"components/HomeComponent.html":{}}}],["cartype",{"_index":938,"title":{},"body":{"components/TrajetComponent.html":{}}}],["catch",{"_index":830,"title":{},"body":{"components/ProfilComponent.html":{}}}],["catcherror",{"_index":392,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror((error",{"_index":409,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["catcherror(err",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ce",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["centre",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["cet",{"_index":771,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["cette",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{}}}],["champs",{"_index":521,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["changer",{"_index":708,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["chargement",{"_index":854,"title":{},"body":{"components/ProfilComponent.html":{}}}],["check",{"_index":1051,"title":{},"body":{"components/TrajetComponent.html":{}}}],["checkauth",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpasswordstrength",{"_index":696,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["chez",{"_index":621,"title":{},"body":{"components/HomeComponent.html":{}}}],["chiffre",{"_index":783,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["choisir",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["choisissez",{"_index":634,"title":{},"body":{"components/HomeComponent.html":{}}}],["choose",{"_index":1360,"title":{},"body":{"index.html":{}}}],["city",{"_index":1014,"title":{},"body":{"components/TrajetComponent.html":{}}}],["cityname",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["class",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["class=\"mt",{"_index":1099,"title":{},"body":{"components/TrajetComponent.html":{}}}],["clear",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearerror",{"_index":501,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["cleartext",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":1306,"title":{},"body":{"index.html":{}}}],["clone",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["clonedrequest",{"_index":418,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["cluster_approutingmodule",{"_index":313,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_providers",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["code",{"_index":1323,"title":{},"body":{"index.html":{}}}],["cologique",{"_index":623,"title":{},"body":{"components/HomeComponent.html":{}}}],["color",{"_index":1095,"title":{},"body":{"components/TrajetComponent.html":{}}}],["come",{"_index":1358,"title":{},"body":{"index.html":{}}}],["command",{"_index":1352,"title":{},"body":{"index.html":{}}}],["commencez",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["comment",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["commonmodule",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["communautaire",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["compile",{"_index":1337,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1330,"title":{},"body":{"index.html":{}}}],["component",{"_index":155,"title":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["components",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"index.html":{},"overview.html":{}}}],["components/connexion/connexion.component",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/home/home.component",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/inscription/inscription.component",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/profil/profil.component",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/trajet/trajet.component",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["composant",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["compte",{"_index":571,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["conducteur",{"_index":723,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["config",{"_index":1237,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["connecter",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["connexion",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["connexion'},{'name",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["connexion.component.css",{"_index":495,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["connexion.component.html",{"_index":497,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["connexioncomponent",{"_index":289,"title":{"components/ConnexionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["conomique",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["conomis",{"_index":645,"title":{},"body":{"components/HomeComponent.html":{}}}],["conomiser",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["conomisez",{"_index":614,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.error('city",{"_index":1012,"title":{},"body":{"components/TrajetComponent.html":{}}}],["console.error('erreur",{"_index":910,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["console.error('error",{"_index":831,"title":{},"body":{"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["console.error('login",{"_index":561,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["console.warn('invalid",{"_index":1059,"title":{},"body":{"components/TrajetComponent.html":{}}}],["const",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(authservice",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["constructor(fb",{"_index":878,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["constructor(http",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(route",{"_index":951,"title":{},"body":{"components/TrajetComponent.html":{}}}],["constructor(router",{"_index":583,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(utilisateurservice",{"_index":1181,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["contient",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["contributors",{"_index":1068,"title":{},"body":{"components/TrajetComponent.html":{}}}],["convivialit",{"_index":617,"title":{},"body":{"components/HomeComponent.html":{}}}],["coordinates",{"_index":1052,"title":{},"body":{"components/TrajetComponent.html":{}}}],["copy",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/TrajetComponent.html":{}}}],["correct",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cours",{"_index":534,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["coverage",{"_index":1231,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covoiturage",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["covoituragefront2",{"_index":1301,"title":{},"body":{"index.html":{}}}],["create",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"injectables/UtilisateurService.html":{}}}],["creates",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["createutilisateur",{"_index":1220,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateur(utilisateur",{"_index":1163,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["créer",{"_index":570,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["curie",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["current",{"_index":1153,"title":{},"body":{"injectables/TrajetService.html":{}}}],["d'accueil",{"_index":537,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{}}}],["d'accès",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["d'aide",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["d'argent",{"_index":647,"title":{},"body":{"components/HomeComponent.html":{}}}],["d'arrivée",{"_index":913,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["d'authentification",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["d'erreur",{"_index":717,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["d'un",{"_index":512,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["d'une",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/ConnexionComponent.html":{},"components/TrajetComponent.html":{}}}],["d\\'aide",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["d\\'argent",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{}}}],["d\\'arrivée",{"_index":917,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["dans",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["data",{"_index":1021,"title":{},"body":{"components/TrajetComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["date",{"_index":595,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"injectables/TrajetService.html":{}}}],["date().toisostring",{"_index":1152,"title":{},"body":{"injectables/TrajetService.html":{}}}],["date(value",{"_index":928,"title":{},"body":{"pipes/TimePipe.html":{}}}],["date.gethours().tostring().padstart(2",{"_index":933,"title":{},"body":{"pipes/TimePipe.html":{}}}],["date.getminutes().tostring().padstart(2",{"_index":935,"title":{},"body":{"pipes/TimePipe.html":{}}}],["date:'shortdate",{"_index":1109,"title":{},"body":{"components/TrajetComponent.html":{}}}],["date:'shorttime",{"_index":1110,"title":{},"body":{"components/TrajetComponent.html":{}}}],["date:\\'shortdate",{"_index":1114,"title":{},"body":{"components/TrajetComponent.html":{}}}],["date:\\'shorttime",{"_index":1115,"title":{},"body":{"components/TrajetComponent.html":{}}}],["dateinscription",{"_index":1151,"title":{},"body":{"injectables/TrajetService.html":{}}}],["datenaissance",{"_index":821,"title":{},"body":{"components/ProfilComponent.html":{}}}],["datet",{"_index":576,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["de",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["declarations",{"_index":309,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decode",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["decodedtoken",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["decodedtoken.email",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["decodedtoken.nom",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.prenom",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedtoken.userid",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["decrementpassagers",{"_index":580,"title":{},"body":{"components/HomeComponent.html":{}}}],["default",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["delete",{"_index":1170,"title":{},"body":{"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["deleteprofil",{"_index":856,"title":{},"body":{"injectables/ProfilService.html":{}}}],["deleteprofil(id",{"_index":860,"title":{},"body":{"injectables/ProfilService.html":{}}}],["deletetrajet",{"_index":1118,"title":{},"body":{"injectables/TrajetService.html":{}}}],["deletetrajet(id",{"_index":1125,"title":{},"body":{"injectables/TrajetService.html":{}}}],["deleteutilisateur",{"_index":1205,"title":{},"body":{"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["deleteutilisateur(id",{"_index":1171,"title":{},"body":{"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["deletion",{"_index":1215,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["departtime",{"_index":939,"title":{},"body":{"components/TrajetComponent.html":{}}}],["departure",{"_index":593,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["dependencies",{"_index":308,"title":{"dependencies.html":{}},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depuis",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["des",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["description",{"_index":382,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"pipes/TimePipe.html":{}}}],["destination",{"_index":594,"title":{},"body":{"components/HomeComponent.html":{}}}],["destinations",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["destroy",{"_index":1046,"title":{},"body":{"components/TrajetComponent.html":{}}}],["detailed",{"_index":1369,"title":{},"body":{"index.html":{}}}],["details",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/TrajetService.html":{}}}],["dev",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1308,"title":{},"body":{"index.html":{}}}],["directive",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["directives",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"index.html":{}}}],["directory",{"_index":1340,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["disable",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disent",{"_index":641,"title":{},"body":{"components/HomeComponent.html":{}}}],["disponible",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"components/TrajetComponent.html":{}}}],["disponibles",{"_index":618,"title":{},"body":{"components/HomeComponent.html":{}}}],["dist",{"_index":1339,"title":{},"body":{"index.html":{}}}],["dist/covoiturage",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.queryselector('.nav",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["document.queryselector(\\'.nav",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["draw",{"_index":1089,"title":{},"body":{"components/TrajetComponent.html":{}}}],["droits",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["du",{"_index":638,"title":{},"body":{"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["dupont",{"_index":652,"title":{},"body":{"components/HomeComponent.html":{}}}],["durand",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["dureedetrajet",{"_index":890,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["durée",{"_index":916,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["dynamic",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["dès",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["déconnexion",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["déj",{"_index":772,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["départ",{"_index":631,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["détails",{"_index":769,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["e0a",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":1355,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1357,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1196,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["edit/:id",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["element",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["elle",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["email",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["empreinte",{"_index":625,"title":{},"body":{"components/HomeComponent.html":{}}}],["en",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["enable",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encore",{"_index":568,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["end",{"_index":1354,"title":{},"body":{"index.html":{}}}],["ensemble",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["ensure",{"_index":841,"title":{},"body":{"components/ProfilComponent.html":{}}}],["entrer",{"_index":526,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["entrez",{"_index":630,"title":{},"body":{"components/HomeComponent.html":{}}}],["environment",{"_index":1135,"title":{},"body":{"injectables/TrajetService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurlgo",{"_index":1137,"title":{},"body":{"injectables/TrajetService.html":{}}}],["environments/environment",{"_index":1136,"title":{},"body":{"injectables/TrajetService.html":{}}}],["err",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["err.status",{"_index":544,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["erreur",{"_index":557,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["error",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["error('invalid",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["error.status",{"_index":410,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["errormessage",{"_index":498,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["est",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["et",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["europe",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1186,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["example",{"_index":1311,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1347,"title":{},"body":{"index.html":{}}}],["existe",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["exists",{"_index":1048,"title":{},"body":{"components/TrajetComponent.html":{}}}],["expired",{"_index":412,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["export",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["exports",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["f59e",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facile",{"_index":653,"title":{},"body":{"components/HomeComponent.html":{}}}],["faible",{"_index":777,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["fails",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["false",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":803,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["fetch",{"_index":1008,"title":{},"body":{"components/TrajetComponent.html":{}}}],["fetchalltrajets",{"_index":944,"title":{},"body":{"components/TrajetComponent.html":{}}}],["fetching",{"_index":1027,"title":{},"body":{"components/TrajetComponent.html":{}}}],["fetchtrajets",{"_index":945,"title":{},"body":{"components/TrajetComponent.html":{}}}],["fiable",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["files",{"_index":1322,"title":{},"body":{"index.html":{}}}],["filterdate.gettime",{"_index":1037,"title":{},"body":{"components/TrajetComponent.html":{}}}],["filtering",{"_index":1000,"title":{},"body":{"components/TrajetComponent.html":{}}}],["filterresults",{"_index":946,"title":{},"body":{"components/TrajetComponent.html":{}}}],["filtertime",{"_index":966,"title":{},"body":{"components/TrajetComponent.html":{}}}],["filtrer",{"_index":958,"title":{},"body":{"components/TrajetComponent.html":{}}}],["findalltrajetswithdetails",{"_index":1119,"title":{},"body":{"injectables/TrajetService.html":{}}}],["findtrajetwithdetails",{"_index":1120,"title":{},"body":{"injectables/TrajetService.html":{}}}],["findtrajetwithdetails(villed",{"_index":1128,"title":{},"body":{"injectables/TrajetService.html":{}}}],["first",{"_index":1197,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["firstname",{"_index":1183,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["following",{"_index":1351,"title":{},"body":{"index.html":{}}}],["fonction",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["footer",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["force",{"_index":704,"title":{},"body":{"components/InscriptionComponent.html":{},"miscellaneous/variables.html":{}}}],["forkjoin",{"_index":997,"title":{},"body":{"components/TrajetComponent.html":{}}}],["form",{"_index":603,"title":{},"body":{"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["form'},{'name",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["form.component.css",{"_index":1176,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["form.component.html",{"_index":1177,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["form.component.ts",{"_index":1175,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:14",{"_index":1185,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["form.component.ts:15",{"_index":1182,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["form.component.ts:19",{"_index":1187,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["form/utilisateur",{"_index":1174,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":563,"title":{},"body":{"components/ConnexionComponent.html":{},"pipes/TimePipe.html":{}}}],["formater",{"_index":926,"title":{},"body":{"pipes/TimePipe.html":{}}}],["formbuilder",{"_index":804,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["formgroup",{"_index":810,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["formsmodule",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["formulaire",{"_index":883,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["formvalue",{"_index":892,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["forte",{"_index":775,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["fr.inter.ylago",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frais",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["framework",{"_index":1359,"title":{},"body":{"index.html":{}}}],["free.app",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front2",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["front2/browser",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"pipes/TimePipe.html":{}}}],["generate",{"_index":1328,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1303,"title":{},"body":{"index.html":{}}}],["gens",{"_index":649,"title":{},"body":{"components/HomeComponent.html":{}}}],["gestionnaire",{"_index":386,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["getauthheaders",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["getauthstate",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcityidbyname",{"_index":947,"title":{},"body":{"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["getcityidbyname(cityname",{"_index":963,"title":{},"body":{"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["getprofil",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/ProfilService.html":{}}}],["getprofilbyid",{"_index":857,"title":{},"body":{"injectables/ProfilService.html":{}}}],["getprofilbyid(id",{"_index":863,"title":{},"body":{"injectables/ProfilService.html":{}}}],["getting",{"_index":1299,"title":{"index.html":{}},"body":{}}],["gettrajets",{"_index":1121,"title":{},"body":{"injectables/TrajetService.html":{}}}],["getuserdetails",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuserdetails(userid",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["getuserid",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["getutilisateur",{"_index":1221,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["getutilisateur(id",{"_index":1161,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["getutilisateurs",{"_index":1159,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["guard",{"_index":354,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardresult",{"_index":362,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":355,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["gérer",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["hamburger",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["handle",{"_index":602,"title":{},"body":{"components/HomeComponent.html":{}}}],["handleerror",{"_index":697,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["handleerror(err",{"_index":705,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["hascar",{"_index":693,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["header",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{}}}],["helpbuilding",{"_index":1334,"title":{},"body":{"index.html":{}}}],["heure",{"_index":914,"title":{},"body":{"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["hh:mm",{"_index":921,"title":{},"body":{"pipes/TimePipe.html":{}}}],["home",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["home.component.css",{"_index":574,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":575,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":291,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["hostname",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours",{"_index":932,"title":{},"body":{"pipes/TimePipe.html":{}}}],["hours}:${minutes",{"_index":936,"title":{},"body":{"pipes/TimePipe.html":{}}}],["html",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["http",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["http://192.168.1.34:3000",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1316,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["httpclient",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["httpclientmodule",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["httperrorresponse",{"_index":390,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpevent",{"_index":388,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["httpinterceptor",{"_index":389,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpparams",{"_index":1134,"title":{},"body":{"injectables/TrajetService.html":{}}}],["httprequest",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://d879",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["identifier",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1015,"title":{},"body":{"components/TrajetComponent.html":{}}}],["il",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["image",{"_index":852,"title":{},"body":{"components/ProfilComponent.html":{}}}],["immatriculation",{"_index":740,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["implements",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"components/ProfilComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["import",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["imports",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["imports:[routerlink",{"_index":592,"title":{},"body":{"components/HomeComponent.html":{}}}],["impossible",{"_index":550,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["include",{"_index":905,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["includes",{"_index":1325,"title":{},"body":{"index.html":{}}}],["including",{"_index":1368,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":548,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["increment",{"_index":610,"title":{},"body":{"components/HomeComponent.html":{}}}],["incrementpassagers",{"_index":581,"title":{},"body":{"components/HomeComponent.html":{}}}],["incroyable",{"_index":643,"title":{},"body":{"components/HomeComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["information",{"_index":1367,"title":{},"body":{"index.html":{}}}],["informations",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/InscriptionComponent.html":{}}}],["initialize",{"_index":1070,"title":{},"body":{"components/TrajetComponent.html":{}}}],["inject",{"_index":995,"title":{},"body":{"components/TrajetComponent.html":{}}}],["inject(platform_id",{"_index":1001,"title":{},"body":{"components/TrajetComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{}},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"injectables/UtilisateurService.html":{},"overview.html":{}}}],["input",{"_index":1188,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["inputs",{"_index":517,"title":{},"body":{"components/ConnexionComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["inscription",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/InscriptionComponent.html":{}}}],["inscription'},{'name",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["inscription.component.css",{"_index":691,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["inscription.component.html",{"_index":692,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["inscriptioncomponent",{"_index":293,"title":{"components/InscriptionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["inscriptions",{"_index":1112,"title":{},"body":{"components/TrajetComponent.html":{}}}],["inscrit",{"_index":569,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["instance",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["intercept",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercepte",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":367,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":88,"title":{"interfaces/AuthResponse.html":{},"interfaces/Utilisateur.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["interfaces",{"_index":425,"title":{},"body":{"interfaces/AuthResponse.html":{},"interfaces/Utilisateur.html":{},"overview.html":{}}}],["internet",{"_index":556,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["isauth",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthenticated",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading",{"_index":499,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["islocalstorageavailable",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnan(date.gettime",{"_index":929,"title":{},"body":{"pipes/TimePipe.html":{}}}],["isplatformbrowser",{"_index":993,"title":{},"body":{"components/TrajetComponent.html":{}}}],["istimeinrange",{"_index":948,"title":{},"body":{"components/TrajetComponent.html":{}}}],["istimeinrange(trajettime",{"_index":965,"title":{},"body":{"components/TrajetComponent.html":{}}}],["it's",{"_index":930,"title":{},"body":{"pipes/TimePipe.html":{}}}],["j'ai",{"_index":644,"title":{},"body":{"components/HomeComponent.html":{}}}],["j\\'ai",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["jamais",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["je",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{},"components/InscriptionComponent.html":{}}}],["jean",{"_index":651,"title":{},"body":{"components/HomeComponent.html":{}}}],["jeton",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["jour",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/ProfilComponent.html":{}}}],["jquery",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["jusqu",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["jwt",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["jwtdecode(response.accesstoken",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["karma",{"_index":1348,"title":{},"body":{"index.html":{}}}],["kilomètres",{"_index":915,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["kms",{"_index":888,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["l",{"_index":998,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l'adresse",{"_index":523,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["l'api",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["l'application",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["l'authentification",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'id",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{}}}],["l'identifiant",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'inscription",{"_index":728,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["l'url",{"_index":973,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l'utilisateur",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["l.map",{"_index":985,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.map('map').setview([48.8566",{"_index":1062,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.map('map').setview([trajet.villed.lat",{"_index":1072,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.marker([trajet.villea.lat",{"_index":1085,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.marker([trajet.villed.lat",{"_index":1080,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.polyline(latlngs",{"_index":1094,"title":{},"body":{"components/TrajetComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":1065,"title":{},"body":{"components/TrajetComponent.html":{}}}],["la",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["last",{"_index":1198,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["lastname",{"_index":1184,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["lastvaluefrom",{"_index":815,"title":{},"body":{"components/ProfilComponent.html":{}}}],["lastvaluefrom(this.utilisateurservice.getutilisateur(number(userid",{"_index":827,"title":{},"body":{"components/ProfilComponent.html":{}}}],["latlngs",{"_index":1093,"title":{},"body":{"components/TrajetComponent.html":{}}}],["le",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["leaflet",{"_index":999,"title":{},"body":{"components/TrajetComponent.html":{},"dependencies.html":{}}}],["legend",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"overview.html":{}}}],["les",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["liens",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["lille",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["links').classlist.toggle('active",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["links\\').classlist.toggle(\\'active",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"index.html":{}}}],["list.component.css",{"_index":1204,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list.component.html",{"_index":1202,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list.component.ts",{"_index":1201,"title":{},"body":{"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["list.component.ts:12",{"_index":1207,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list.component.ts:16",{"_index":1210,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list.component.ts:20",{"_index":1209,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list.component.ts:26",{"_index":1208,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["list/utilisateur",{"_index":1200,"title":{},"body":{"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["liste",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["literal",{"_index":1157,"title":{},"body":{"interfaces/Utilisateur.html":{}}}],["loading",{"_index":832,"title":{},"body":{"components/ProfilComponent.html":{}}}],["loadutilisateurs",{"_index":1206,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["local",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["localhost",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.getitem('accesstoken",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.getitem('email",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('nom",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('prenom",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('refreshtoken",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.getitem('role",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('userid",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["localstorage.removeitem('accesstoken",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.removeitem('email",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.removeitem('nom",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["localstorage.removeitem('prenom",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["localstorage.removeitem('refreshtoken",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.removeitem('userid",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('accesstoken",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{}}}],["localstorage.setitem('email",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('nom",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('prenom",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('refreshtoken",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["localstorage.setitem('role",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userid",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["location",{"_index":1071,"title":{},"body":{"components/TrajetComponent.html":{}}}],["logged",{"_index":895,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["login",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/ProfilComponent.html":{}}}],["login(email",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["lors",{"_index":911,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["lyon",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["machine",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["maintenant",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["majuscule",{"_index":781,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["map",{"_index":940,"title":{},"body":{"components/TrajetComponent.html":{}}}],["marche",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["marie",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["markera",{"_index":1084,"title":{},"body":{"components/TrajetComponent.html":{}}}],["markera.bindpopup(`arrivée",{"_index":1087,"title":{},"body":{"components/TrajetComponent.html":{}}}],["markerd",{"_index":1079,"title":{},"body":{"components/TrajetComponent.html":{}}}],["markerd.bindpopup(`départ",{"_index":1082,"title":{},"body":{"components/TrajetComponent.html":{}}}],["markers",{"_index":1076,"title":{},"body":{"components/TrajetComponent.html":{}}}],["marque",{"_index":738,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["matchesprice",{"_index":1035,"title":{},"body":{"components/TrajetComponent.html":{}}}],["matching",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":1097,"title":{},"body":{"components/TrajetComponent.html":{}}}],["maxprice",{"_index":941,"title":{},"body":{"components/TrajetComponent.html":{}}}],["maybeasync",{"_index":363,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["medium",{"_index":754,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["mediumregex",{"_index":746,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["mediumregex.test(this.utilisateur.password",{"_index":753,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["memberof",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["menu",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["merci",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":716,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["messages",{"_index":513,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["metadata",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["mettre",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/ProfilComponent.html":{}}}],["minimum",{"_index":778,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["minuscule",{"_index":782,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["minutes",{"_index":934,"title":{},"body":{"pipes/TimePipe.html":{}}}],["miscellaneous",{"_index":1380,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["missing",{"_index":1060,"title":{},"body":{"components/TrajetComponent.html":{}}}],["modele",{"_index":739,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["modify",{"_index":1321,"title":{},"body":{"index.html":{}}}],["module",{"_index":305,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["modules",{"_index":307,"title":{"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["modèle",{"_index":789,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["moments",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["more",{"_index":1366,"title":{},"body":{"index.html":{}}}],["mot",{"_index":546,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["moyenne",{"_index":776,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["multi",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["n'a",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["n'y",{"_index":975,"title":{},"body":{"components/TrajetComponent.html":{}}}],["n\\'a",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["naissance",{"_index":853,"title":{},"body":{"components/ProfilComponent.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["namefor",{"_index":1329,"title":{},"body":{"index.html":{}}}],["names",{"_index":1013,"title":{},"body":{"components/TrajetComponent.html":{}}}],["native",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":608,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["navigation",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["needs",{"_index":1363,"title":{},"body":{"index.html":{}}}],["new",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"pipes/TimePipe.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["next.handle(authreq).pipe",{"_index":408,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(clonedrequest",{"_index":419,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1312,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["ngrok",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nom",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["nombre",{"_index":787,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["nomsubject",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["noresults",{"_index":1098,"title":{},"body":{"components/TrajetComponent.html":{}}}],["nos",{"_index":642,"title":{},"body":{"components/HomeComponent.html":{}}}],["nous",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["nplace",{"_index":887,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["null",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["number",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/HomeComponent.html":{},"injectables/ProfilService.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["object",{"_index":954,"title":{},"body":{"components/TrajetComponent.html":{},"miscellaneous/variables.html":{}}}],["obligatoires",{"_index":763,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["observable",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["observable((observer",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["observer.complete",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["observer.error(err",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["observer.next(response",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["one",{"_index":1361,"title":{},"body":{"index.html":{}}}],["onhascarchange",{"_index":698,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["oninit",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["onregister",{"_index":699,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["onsearch",{"_index":582,"title":{},"body":{"components/HomeComponent.html":{}}}],["onsubmit",{"_index":799,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["open",{"_index":1315,"title":{},"body":{"index.html":{}}}],["openstreetmap",{"_index":1067,"title":{},"body":{"components/TrajetComponent.html":{}}}],["optimizes",{"_index":1342,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["original",{"_index":415,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["originaltrajets",{"_index":942,"title":{},"body":{"components/TrajetComponent.html":{}}}],["ou",{"_index":545,"title":{},"body":{"components/ConnexionComponent.html":{},"components/TrajetComponent.html":{}}}],["oubli",{"_index":572,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["out",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["output",{"_index":1189,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["outputs",{"_index":1179,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["overview",{"_index":1372,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1272,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":536,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"index.html":{}}}],["par",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{}}}],["param",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["params",{"_index":1141,"title":{},"body":{"injectables/TrajetService.html":{}}}],["params['datet",{"_index":1006,"title":{},"body":{"components/TrajetComponent.html":{}}}],["params['passagers",{"_index":1007,"title":{},"body":{"components/TrajetComponent.html":{}}}],["params['villea",{"_index":1005,"title":{},"body":{"components/TrajetComponent.html":{}}}],["params['villed",{"_index":1004,"title":{},"body":{"components/TrajetComponent.html":{}}}],["paramètres",{"_index":970,"title":{},"body":{"components/TrajetComponent.html":{}}}],["paris",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/TrajetComponent.html":{}}}],["partagez",{"_index":612,"title":{},"body":{"components/HomeComponent.html":{}}}],["partir",{"_index":972,"title":{},"body":{"components/TrajetComponent.html":{}}}],["pas",{"_index":567,"title":{},"body":{"components/ConnexionComponent.html":{},"components/TrajetComponent.html":{}}}],["passager",{"_index":733,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["passagers",{"_index":577,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["passe",{"_index":547,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["password",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["password).subscribe",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordstrength",{"_index":694,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["patchformvalues",{"_index":800,"title":{},"body":{"components/ProfilComponent.html":{}}}],["path",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["performance",{"_index":1343,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["permet",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["permettant",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["pierre",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["pipe",{"_index":115,"title":{"pipes/TimePipe.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"pipes/TimePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe/time.pipe",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["pipes",{"_index":918,"title":{},"body":{"pipes/TimePipe.html":{},"index.html":{}}}],["pipetransform",{"_index":927,"title":{},"body":{"pipes/TimePipe.html":{}}}],["place",{"_index":635,"title":{},"body":{"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["places",{"_index":788,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["platform_id",{"_index":996,"title":{},"body":{"components/TrajetComponent.html":{}}}],["platformid",{"_index":953,"title":{},"body":{"components/TrajetComponent.html":{}}}],["plugin",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plugins",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plus",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["point",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["points",{"_index":1078,"title":{},"body":{"components/TrajetComponent.html":{}}}],["polyline",{"_index":1090,"title":{},"body":{"components/TrajetComponent.html":{}}}],["populaires",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["por",{"_index":925,"title":{},"body":{"pipes/TimePipe.html":{}}}],["possède",{"_index":785,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["pour",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["pourquoi",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["powerful",{"_index":1326,"title":{},"body":{"index.html":{}}}],["prenom",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["prenomsubject",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["principal",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["prix",{"_index":889,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["production",{"_index":1341,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{}}}],["profil'},{'name",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["profil.component.css",{"_index":794,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profil.component.html",{"_index":795,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profilcomponent",{"_index":295,"title":{"components/ProfilComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["profile",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfilComponent.html":{}}}],["profileform",{"_index":796,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profilimage",{"_index":820,"title":{},"body":{"components/ProfilComponent.html":{}}}],["profilservice",{"_index":802,"title":{"injectables/ProfilService.html":{}},"body":{"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"coverage.html":{}}}],["profitez",{"_index":637,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":1302,"title":{},"body":{"index.html":{}}}],["promise",{"_index":807,"title":{},"body":{"components/ProfilComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"properties.html":{}}}],["provide",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["providehttpclient",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proxy",{"_index":868,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["près",{"_index":620,"title":{},"body":{"components/HomeComponent.html":{}}}],["précédent",{"_index":627,"title":{},"body":{"components/HomeComponent.html":{}}}],["prénom",{"_index":774,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["prêt",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["publi",{"_index":908,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["publication",{"_index":884,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["publier",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["publiertrajetcomponent",{"_index":297,"title":{"components/PublierTrajetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["publiertrajetform",{"_index":877,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["que",{"_index":640,"title":{},"body":{"components/HomeComponent.html":{}}}],["query",{"_index":609,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparams",{"_index":597,"title":{},"body":{"components/HomeComponent.html":{}}}],["qui",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["re",{"_index":564,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["re.test(email",{"_index":566,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["reactiveformsmodule",{"_index":793,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["recherche",{"_index":971,"title":{},"body":{"components/TrajetComponent.html":{}}}],["rechercher",{"_index":611,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["recherchez",{"_index":629,"title":{},"body":{"components/HomeComponent.html":{}}}],["recommande",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["recupère",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["redirection",{"_index":533,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["redirectto",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rediriger",{"_index":535,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["reference",{"_index":1373,"title":{},"body":{"index.html":{}}}],["references",{"_index":1370,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["refreshtoken",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["register",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["register(utilisateur",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["reload",{"_index":1319,"title":{},"body":{"index.html":{}}}],["remplir",{"_index":520,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["rencontr",{"_index":648,"title":{},"body":{"components/HomeComponent.html":{}}}],["rencontrez",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendermode",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rennes",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["req",{"_index":383,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":406,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.headers.set('authorization",{"_index":407,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":416,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requête",{"_index":384,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requêtes",{"_index":98,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{}}}],["reservation",{"_index":1043,"title":{},"body":{"components/TrajetComponent.html":{}}}],["reservationdata",{"_index":1150,"title":{},"body":{"injectables/TrajetService.html":{}}}],["reserver",{"_index":949,"title":{},"body":{"components/TrajetComponent.html":{}}}],["reserver(trajetid",{"_index":976,"title":{},"body":{"components/TrajetComponent.html":{}}}],["reservertrajet",{"_index":1039,"title":{},"body":{"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["reservertrajet(utilisateurid",{"_index":1132,"title":{},"body":{"injectables/TrajetService.html":{}}}],["reserving",{"_index":1044,"title":{},"body":{"components/TrajetComponent.html":{}}}],["reset",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"overview.html":{}}}],["resources",{"_index":1365,"title":{},"body":{"index.html":{}}}],["response",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/ProfilComponent.html":{}}}],["response.accesstoken",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{}}}],["response.email",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["response.nom",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["response.prenom",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["response.refreshtoken",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["response.role",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.userid",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["restantes",{"_index":1111,"title":{},"body":{"components/TrajetComponent.html":{}}}],["results",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["returns",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["role",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"components/InscriptionComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["root",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["root'},{'name",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["route",{"_index":956,"title":{},"body":{"components/TrajetComponent.html":{}}}],["router",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["routerlink",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["routerlinkactive",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["routermodule",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["routerstatesnapshot",{"_index":364,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["routes",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1310,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1350,"title":{},"body":{"index.html":{}}}],["running",{"_index":1314,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["récupère",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["récupérer",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/TrajetComponent.html":{}}}],["réduisez",{"_index":624,"title":{},"body":{"components/HomeComponent.html":{}}}],["réessayer",{"_index":559,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["réservation",{"_index":1045,"title":{},"body":{"components/TrajetComponent.html":{}}}],["réserver",{"_index":978,"title":{},"body":{"components/TrajetComponent.html":{}}}],["réservez",{"_index":633,"title":{},"body":{"components/HomeComponent.html":{}}}],["réservés",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["résultats",{"_index":959,"title":{},"body":{"components/TrajetComponent.html":{}}}],["réussie",{"_index":532,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["rôle",{"_index":709,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["s'il",{"_index":974,"title":{},"body":{"components/TrajetComponent.html":{}}}],["s'inscrire",{"_index":790,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":565,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["s\\'inscrire",{"_index":791,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["save",{"_index":1199,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["saveutilisateur",{"_index":1178,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["savoir",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["scaffolding",{"_index":1324,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":1332,"title":{},"body":{"index.html":{}}}],["script",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["se",{"_index":551,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["search",{"_index":1002,"title":{},"body":{"components/TrajetComponent.html":{}}}],["secondes",{"_index":540,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["selector",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["sent",{"_index":842,"title":{},"body":{"components/ProfilComponent.html":{}}}],["serve",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serveonce",{"_index":1313,"title":{},"body":{"index.html":{}}}],["server",{"_index":1276,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serveur",{"_index":553,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["service",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["services/api/auth.intercepter",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/auth/auth.service",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["services/auth/guard/auth.guard.service",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/profil/profil.service",{"_index":813,"title":{},"body":{"components/ProfilComponent.html":{}}}],["services/trajet/trajet.service",{"_index":885,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["services/utilisateur/utilisateur.service",{"_index":727,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["set('datet",{"_index":1146,"title":{},"body":{"injectables/TrajetService.html":{}}}],["set('villea",{"_index":1144,"title":{},"body":{"injectables/TrajetService.html":{}}}],["set('villed",{"_index":1142,"title":{},"body":{"injectables/TrajetService.html":{}}}],["settimeout",{"_index":541,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["setuserid",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["setuserid(userid",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["showing",{"_index":1061,"title":{},"body":{"components/TrajetComponent.html":{}}}],["showmap",{"_index":950,"title":{},"body":{"components/TrajetComponent.html":{}}}],["showmap(trajet",{"_index":980,"title":{},"body":{"components/TrajetComponent.html":{}}}],["showpassword",{"_index":695,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["si",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{}}}],["simple",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["single",{"_index":1160,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["sommes",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["son",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/TrajetComponent.html":{}}}],["sortante",{"_index":385,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sortantes",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["soumettre",{"_index":882,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"index.html":{}}}],["speed",{"_index":1344,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:116",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:118",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:119",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:120",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:121",{"_index":240,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:122",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:137",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.ts",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/components/connexion/connexion.component.ts",{"_index":494,"title":{},"body":{"components/ConnexionComponent.html":{},"coverage.html":{}}}],["src/app/components/connexion/connexion.component.ts:23",{"_index":508,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:24",{"_index":511,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:25",{"_index":509,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:26",{"_index":510,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:27",{"_index":503,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:38",{"_index":505,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:91",{"_index":507,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/connexion/connexion.component.ts:96",{"_index":504,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["src/app/components/home/home.component.ts",{"_index":573,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:23",{"_index":591,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:24",{"_index":590,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:25",{"_index":588,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:26",{"_index":584,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:35",{"_index":587,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:59",{"_index":586,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:66",{"_index":585,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts",{"_index":690,"title":{},"body":{"components/InscriptionComponent.html":{},"coverage.html":{}}}],["src/app/components/inscription/inscription.component.ts:106",{"_index":703,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:124",{"_index":711,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:133",{"_index":714,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:163",{"_index":713,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:168",{"_index":706,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:21",{"_index":726,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:33",{"_index":719,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:34",{"_index":720,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:35",{"_index":718,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:36",{"_index":722,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:37",{"_index":721,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:38",{"_index":702,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:49",{"_index":710,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/inscription/inscription.component.ts:86",{"_index":707,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["src/app/components/profil/profil.component.ts",{"_index":792,"title":{},"body":{"components/ProfilComponent.html":{},"coverage.html":{}}}],["src/app/components/profil/profil.component.ts:107",{"_index":808,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:26",{"_index":812,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:27",{"_index":811,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:28",{"_index":805,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:70",{"_index":806,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/profil/profil.component.ts:91",{"_index":809,"title":{},"body":{"components/ProfilComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts",{"_index":937,"title":{},"body":{"components/TrajetComponent.html":{},"coverage.html":{}}}],["src/app/components/trajet/trajet.component.ts:120",{"_index":960,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:139",{"_index":964,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:148",{"_index":957,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:160",{"_index":962,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:176",{"_index":967,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:188",{"_index":977,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:209",{"_index":981,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:24",{"_index":992,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:25",{"_index":991,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:26",{"_index":983,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:27",{"_index":989,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:28",{"_index":990,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:29",{"_index":988,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:30",{"_index":987,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:31",{"_index":984,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:32",{"_index":982,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:33",{"_index":955,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:54",{"_index":969,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/trajet/trajet.component.ts:76",{"_index":961,"title":{},"body":{"components/TrajetComponent.html":{}}}],["src/app/components/utilisateur",{"_index":1173,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["src/app/pipe/time.pipe.ts",{"_index":919,"title":{},"body":{"pipes/TimePipe.html":{},"coverage.html":{}}}],["src/app/pipe/time.pipe.ts:22",{"_index":924,"title":{},"body":{"pipes/TimePipe.html":{}}}],["src/app/publier",{"_index":873,"title":{},"body":{"components/PublierTrajetComponent.html":{},"coverage.html":{}}}],["src/app/services/api/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"coverage.html":{}}}],["src/app/services/api/api.service.ts:107",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:121",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:29",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:37",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:49",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:59",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:84",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:93",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/api.service.ts:98",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api/auth.intercepter.ts",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/services/api/auth.intercepter.ts:18",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/api/auth.intercepter.ts:8",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth/auth.service.ts:116",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:128",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:155",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:18",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:19",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:20",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:21",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:22",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:37",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:41",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:49",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:57",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:71",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:98",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/guard/auth.guard.service.ts",{"_index":356,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/auth/guard/auth.guard.service.ts:11",{"_index":358,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/services/auth/guard/auth.guard.service.ts:8",{"_index":357,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/services/profil/profil.service.ts",{"_index":855,"title":{},"body":{"injectables/ProfilService.html":{},"coverage.html":{}}}],["src/app/services/profil/profil.service.ts:12",{"_index":862,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/app/services/profil/profil.service.ts:17",{"_index":866,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/app/services/profil/profil.service.ts:21",{"_index":861,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/app/services/profil/profil.service.ts:25",{"_index":864,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/app/services/profil/profil.service.ts:9",{"_index":859,"title":{},"body":{"injectables/ProfilService.html":{}}}],["src/app/services/trajet/trajet.service.ts",{"_index":1116,"title":{},"body":{"injectables/TrajetService.html":{},"coverage.html":{}}}],["src/app/services/trajet/trajet.service.ts:10",{"_index":1122,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:16",{"_index":1131,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:20",{"_index":1127,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:24",{"_index":1129,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:32",{"_index":1124,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:36",{"_index":1126,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:40",{"_index":1133,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/trajet/trajet.service.ts:50",{"_index":1130,"title":{},"body":{"injectables/TrajetService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts",{"_index":1156,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:27",{"_index":1224,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:32",{"_index":1228,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:37",{"_index":1227,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:42",{"_index":1225,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:47",{"_index":1229,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:51",{"_index":1230,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/app/services/utilisateur/utilisateur.service.ts:55",{"_index":1226,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/environments/environment",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["start",{"_index":1309,"title":{},"body":{"index.html":{}}}],["started",{"_index":1300,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["stockage",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["stocker",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["storage",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["store",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"components/TrajetComponent.html":{},"index.html":{}}}],["storeduserid",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["string",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["strong",{"_index":752,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["strongregex",{"_index":741,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["strongregex.test(this.utilisateur.password",{"_index":750,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["styles",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["styleurl",{"_index":1203,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["styleurls",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{}}}],["submission",{"_index":604,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe",{"_index":1020,"title":{},"body":{"components/TrajetComponent.html":{}}}],["successfully",{"_index":847,"title":{},"body":{"components/ProfilComponent.html":{}}}],["successmessage",{"_index":500,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["succès",{"_index":909,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["such",{"_index":1333,"title":{},"body":{"index.html":{}}}],["suits",{"_index":1362,"title":{},"body":{"index.html":{}}}],["suivant",{"_index":628,"title":{},"body":{"components/HomeComponent.html":{}}}],["suivez",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":786,"title":{},"body":{"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["survenue",{"_index":558,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["svg",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["switchmap((response",{"_index":414,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sympas",{"_index":650,"title":{},"body":{"components/HomeComponent.html":{}}}],["t",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["table",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1270,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["tap(response",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["tard",{"_index":560,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["tel",{"_index":724,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["template",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["templateurl",{"_index":496,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["test",{"_index":1349,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1356,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1353,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1346,"title":{},"body":{"index.html":{}}}],["this.apiservice.login(email",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.refreshtoken().subscribe",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.register(utilisateur).subscribe",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.getauthstate",{"_index":365,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.authservice.getauthstate().subscribe((auth",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(this.email",{"_index":530,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["this.authservice.logout",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{}}}],["this.authservice.refreshtoken().pipe",{"_index":413,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.register(this.utilisateur).subscribe",{"_index":734,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.calculateavailableplaces",{"_index":1026,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.date",{"_index":607,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.datet",{"_index":600,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["this.datet).subscribe",{"_index":1023,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.departure",{"_index":605,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.destination",{"_index":606,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.email",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{}}}],["this.errormessage",{"_index":514,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["this.fb.group",{"_index":817,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["this.fetchalltrajets",{"_index":1011,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.fetchtrajets",{"_index":1010,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.getauthheaders",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.getcityidbyname(this.villea",{"_index":1019,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.getcityidbyname(this.villed",{"_index":1017,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.handleerror(err",{"_index":736,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.hascar",{"_index":730,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.http.delete(`${this.apiurl}/${id",{"_index":1172,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.delete(`${this.apiurl}/profil/${id",{"_index":871,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.http.delete(`${this.apiurl}/trajet/${id",{"_index":1149,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.get(`${this.apiurl",{"_index":1139,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.get(`${this.apiurl}/${id",{"_index":1162,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.get(`${this.apiurl}/${userid",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.http.get(`${this.apiurl}/profil",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/ProfilService.html":{}}}],["this.http.get(`${this.apiurl}/profil/${id",{"_index":872,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.http.get(`${this.apiurl}/trajet/all",{"_index":1140,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.get(`${this.apiurl}/trajet/details",{"_index":1147,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.get(`/api/ville/findbyname/${cityname",{"_index":1155,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.get(this.apiurl",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.patch(`${this.apiurl}/${id",{"_index":1169,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.post(`${this.apiurl}/auth/login",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.http.post(`${this.apiurl}/auth/logout",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.http.post(`${this.apiurl}/auth/refresh",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.http.post(`${this.apiurl}/auth/register",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["this.http.post(`${this.apiurl}/inscription",{"_index":1154,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.post(`${this.apiurl}/trajet",{"_index":1148,"title":{},"body":{"injectables/TrajetService.html":{}}}],["this.http.post(this.apiurl",{"_index":1164,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":1167,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["this.http.put(`${this.apiurl}/profil/${id",{"_index":870,"title":{},"body":{"injectables/ProfilService.html":{}}}],["this.isauth.asobservable",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth.next(false",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauth.next(true",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isauthenticated",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":529,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["this.islocalstorageavailable",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loadutilisateurs",{"_index":1211,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["this.map",{"_index":1049,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.map.remove",{"_index":1050,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.nom",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["this.originaltrajets",{"_index":1025,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.originaltrajets.filter((trajet",{"_index":1034,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.passagers",{"_index":601,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["this.password",{"_index":518,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["this.password).subscribe",{"_index":531,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["this.passwordstrength",{"_index":751,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.patchformvalues",{"_index":829,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.prenom",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["this.profileform",{"_index":816,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.profileform.get('voiture')?.patchvalue(this.userdata.voiture",{"_index":835,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.profileform.patchvalue(response",{"_index":844,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.profileform.patchvalue(this.userdata",{"_index":833,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.profileform.valid",{"_index":836,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.profileform.value",{"_index":838,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.publiertrajetform",{"_index":886,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.publiertrajetform.valid",{"_index":891,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.publiertrajetform.value",{"_index":893,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.role",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":1003,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.router.navigate",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/connexion",{"_index":366,"title":{},"body":{"guards/AuthGuardService.html":{},"components/InscriptionComponent.html":{}}}],["this.router.navigate(['/home",{"_index":542,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["this.router.navigate(['/trajet",{"_index":596,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["this.showpassword",{"_index":756,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.successmessage",{"_index":515,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["this.trajets",{"_index":1024,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.trajets.foreach((trajet",{"_index":1030,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.trajetservice.addtrajet(trajetdata).subscribe",{"_index":906,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.trajetservice.findalltrajetswithdetails().subscribe",{"_index":1028,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.trajetservice.findtrajetwithdetails(villedid",{"_index":1022,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.trajetservice.getcityidbyname(cityname",{"_index":1029,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.trajetservice.getcityidbyname(formvalue.villea).subscribe(villeadata",{"_index":899,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.trajetservice.getcityidbyname(formvalue.villed).subscribe(villeddata",{"_index":898,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["this.trajetservice.reservertrajet(+userid",{"_index":1040,"title":{},"body":{"components/TrajetComponent.html":{}}}],["this.userdata",{"_index":825,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.userdata.voiture",{"_index":834,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.userid",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["this.useridsubject.asobservable",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useridsubject.next(storeduserid",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.useridsubject.next(userid",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userprofile",{"_index":828,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.userprofile.id",{"_index":840,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.userprofile.next(null",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateur).subscribe",{"_index":1192,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["this.utilisateur.email",{"_index":759,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.id",{"_index":1190,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["this.utilisateur.nom",{"_index":757,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.password",{"_index":760,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.prenom",{"_index":758,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.role",{"_index":732,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.tel",{"_index":761,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.ville",{"_index":762,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.voiture",{"_index":731,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.voiture.immatriculation",{"_index":768,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.voiture.marque",{"_index":766,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.voiture.modele",{"_index":767,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateur.voiture.place",{"_index":765,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.utilisateurs",{"_index":1213,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["this.utilisateursaved.emit",{"_index":1193,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["this.utilisateurservice.createutilisateur(this.utilisateur).subscribe",{"_index":1194,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["this.utilisateurservice.deleteutilisateur(id).subscribe",{"_index":1214,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["this.utilisateurservice.getutilisateurs().subscribe((data",{"_index":1212,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["this.utilisateurservice.updateutilisateur(this.utilisateur.id",{"_index":1191,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["this.utilisateurservice.updateutilisateurwithprofile(this.userprofile.id",{"_index":843,"title":{},"body":{"components/ProfilComponent.html":{}}}],["this.validateemail(this.email",{"_index":525,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["this.validateemail(this.utilisateur.email",{"_index":764,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.validateform",{"_index":729,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["this.villea",{"_index":599,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["this.villed",{"_index":598,"title":{},"body":{"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["throw",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{}}}],["throwerror",{"_index":391,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror(err",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["throwerror(error",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tiles",{"_index":1075,"title":{},"body":{"components/TrajetComponent.html":{}}}],["time",{"_index":920,"title":{},"body":{"pipes/TimePipe.html":{},"injectables/TrajetService.html":{}}}],["timepipe",{"_index":316,"title":{"pipes/TimePipe.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemenu",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["togglepasswordvisibility",{"_index":700,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["token",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{}}}],["tools",{"_index":1327,"title":{},"body":{"index.html":{}}}],["tous",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["toute",{"_index":616,"title":{},"body":{"components/HomeComponent.html":{}}}],["trajet",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["trajet'},{'name",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["trajet.availableplaces",{"_index":1031,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.component",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["trajet.component.css",{"_index":875,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["trajet.component.html",{"_index":876,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["trajet.component.ts",{"_index":874,"title":{},"body":{"components/PublierTrajetComponent.html":{},"coverage.html":{}}}],["trajet.component.ts:20",{"_index":880,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["trajet.component.ts:44",{"_index":881,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["trajet.datet",{"_index":1108,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.inscriptions.length",{"_index":1033,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.nplace",{"_index":1032,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.prix",{"_index":1036,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.utilisateur?.nom",{"_index":1100,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.utilisateur?.prenom",{"_index":1101,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.utilisateur?.voiture?.marque?.nom",{"_index":1106,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.utilisateur?.voiture?.modele",{"_index":1105,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villea",{"_index":1054,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villea.lat",{"_index":1057,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villea.lng",{"_index":1058,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villea.lng]).addto(this.map",{"_index":1086,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villea.nom",{"_index":1088,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed",{"_index":1053,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed.lat",{"_index":1055,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed.lng",{"_index":1056,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed.lng]).addto(this.map",{"_index":1081,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed.nom",{"_index":1107,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet.villed.nom}`).openpopup",{"_index":1083,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajet/publier",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PublierTrajetComponent.html":{},"coverage.html":{}}}],["trajetcomponent",{"_index":299,"title":{"components/TrajetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["trajetdata",{"_index":900,"title":{},"body":{"components/PublierTrajetComponent.html":{}}}],["trajetid",{"_index":979,"title":{},"body":{"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["trajetid).subscribe",{"_index":1041,"title":{},"body":{"components/TrajetComponent.html":{}}}],["trajets",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/TrajetComponent.html":{}}}],["trajetservice",{"_index":879,"title":{"injectables/TrajetService.html":{}},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"coverage.html":{}}}],["trajettime",{"_index":968,"title":{},"body":{"components/TrajetComponent.html":{}}}],["transform",{"_index":922,"title":{},"body":{"pipes/TimePipe.html":{}}}],["transform(value",{"_index":923,"title":{},"body":{"pipes/TimePipe.html":{}}}],["tree",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["trouvez",{"_index":619,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":824,"title":{},"body":{"components/ProfilComponent.html":{}}}],["très",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{}}}],["ts",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1092,"title":{},"body":{"components/TrajetComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"components/PublierTrajetComponent.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["téléphone",{"_index":784,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{}}}],["têtes",{"_index":405,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["un",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["undefined",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/TrajetComponent.html":{}}}],["une",{"_index":527,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["uniques",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["unit",{"_index":1345,"title":{},"body":{"index.html":{}}}],["update",{"_index":1165,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":846,"title":{},"body":{"components/ProfilComponent.html":{}}}],["updateddata",{"_index":837,"title":{},"body":{"components/ProfilComponent.html":{}}}],["updateddata.id",{"_index":839,"title":{},"body":{"components/ProfilComponent.html":{}}}],["updateprofil",{"_index":858,"title":{},"body":{"injectables/ProfilService.html":{}}}],["updateprofil(id",{"_index":865,"title":{},"body":{"injectables/ProfilService.html":{}}}],["updateutilisateur",{"_index":1222,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateur(id",{"_index":1166,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["updateutilisateurwithprofile",{"_index":1223,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurwithprofile(id",{"_index":1168,"title":{},"body":{"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["updating",{"_index":848,"title":{},"body":{"components/ProfilComponent.html":{}}}],["url",{"_index":869,"title":{},"body":{"injectables/ProfilService.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["use",{"_index":867,"title":{},"body":{"injectables/ProfilService.html":{},"injectables/TrajetService.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"index.html":{}}}],["useclass",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{}}}],["user's",{"_index":896,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["userdata",{"_index":797,"title":{},"body":{"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["userid",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["useridsubject",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["userprofile",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"components/ProfilComponent.html":{}}}],["userprofile.nom",{"_index":850,"title":{},"body":{"components/ProfilComponent.html":{}}}],["userprofile.prenom",{"_index":851,"title":{},"body":{"components/ProfilComponent.html":{}}}],["uses",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":1304,"title":{},"body":{"index.html":{}}}],["utilis",{"_index":773,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["utilisateur",{"_index":58,"title":{"interfaces/Utilisateur.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["utilisateur.email",{"_index":1219,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["utilisateur.firstname",{"_index":1217,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["utilisateur.id",{"_index":1195,"title":{},"body":{"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["utilisateur.lastname",{"_index":1218,"title":{},"body":{"components/UtilisateurListComponent.html":{}}}],["utilisateur/utilisateur.service",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"injectables/AuthService.html":{}}}],["utilisateurformcomponent",{"_index":300,"title":{"components/UtilisateurFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["utilisateurid",{"_index":894,"title":{},"body":{"components/PublierTrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["utilisateurlistcomponent",{"_index":302,"title":{"components/UtilisateurListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"coverage.html":{}}}],["utilisateurs",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/HomeComponent.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateursaved",{"_index":1180,"title":{},"body":{"components/UtilisateurFormComponent.html":{}}}],["utilisateurservice",{"_index":801,"title":{"injectables/UtilisateurService.html":{}},"body":{"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["utiliser",{"_index":654,"title":{},"body":{"components/HomeComponent.html":{}}}],["valid",{"_index":931,"title":{},"body":{"pipes/TimePipe.html":{},"components/TrajetComponent.html":{}}}],["validate",{"_index":516,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["validateemail",{"_index":502,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["validateemail(email",{"_index":506,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["validateform",{"_index":701,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["validators",{"_index":814,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["validators.email",{"_index":819,"title":{},"body":{"components/ProfilComponent.html":{}}}],["validators.required",{"_index":818,"title":{},"body":{"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{}}}],["valide",{"_index":524,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["valider",{"_index":562,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["value",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"injectables/ProfilService.html":{},"pipes/TimePipe.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["variable",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1381,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifier",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["vers",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["version",{"_index":1307,"title":{},"body":{"index.html":{},"properties.html":{}}}],["veuillez",{"_index":519,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["vider",{"_index":715,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["view",{"_index":823,"title":{},"body":{"components/ProfilComponent.html":{},"components/TrajetComponent.html":{}}}],["ville",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/AuthResponse.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["villea",{"_index":578,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["villea.tostring",{"_index":1145,"title":{},"body":{"injectables/TrajetService.html":{}}}],["villeadata",{"_index":1018,"title":{},"body":{"components/TrajetComponent.html":{}}}],["villeadata.id",{"_index":904,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["villeaid",{"_index":903,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["villed",{"_index":579,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"injectables/TrajetService.html":{}}}],["villed.tostring",{"_index":1143,"title":{},"body":{"injectables/TrajetService.html":{}}}],["villeddata",{"_index":1016,"title":{},"body":{"components/TrajetComponent.html":{}}}],["villeddata.id",{"_index":902,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["villedid",{"_index":901,"title":{},"body":{"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["visibilit",{"_index":712,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["visit",{"_index":1371,"title":{},"body":{"index.html":{}}}],["vivement",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{},"components/UtilisateurFormComponent.html":{},"components/UtilisateurListComponent.html":{}}}],["voiture",{"_index":725,"title":{},"body":{"components/InscriptionComponent.html":{},"components/ProfilComponent.html":{},"interfaces/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["vos",{"_index":613,"title":{},"body":{"components/HomeComponent.html":{}}}],["votre",{"_index":555,"title":{},"body":{"components/ConnexionComponent.html":{},"components/HomeComponent.html":{},"components/InscriptionComponent.html":{},"components/TrajetComponent.html":{}}}],["vous",{"_index":622,"title":{},"body":{"components/HomeComponent.html":{},"components/PublierTrajetComponent.html":{},"components/TrajetComponent.html":{}}}],["voyage",{"_index":639,"title":{},"body":{"components/HomeComponent.html":{}}}],["voyageant",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["voyager",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["voyageurs",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["voyagez",{"_index":615,"title":{},"body":{"components/HomeComponent.html":{}}}],["vénements",{"_index":387,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["vérifie",{"_index":522,"title":{},"body":{"components/ConnexionComponent.html":{}}}],["vérifier",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"components/InscriptionComponent.html":{}}}],["vérifiez",{"_index":554,"title":{},"body":{"components/ConnexionComponent.html":{},"components/InscriptionComponent.html":{}}}],["weak",{"_index":755,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["webdir",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":1320,"title":{},"body":{"index.html":{}}}],["window",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["ylago",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["z\\d@$!%*?&]{8",{"_index":745,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["z])(?=.*[a",{"_index":742,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":743,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["z])(?=.*\\d))).{6",{"_index":749,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["z])(?=.*\\d))|((?=.*[a",{"_index":748,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["z]))|((?=.*[a",{"_index":747,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["za",{"_index":744,"title":{},"body":{"components/InscriptionComponent.html":{}}}],["zone.js",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAuthHeaders\n                            \n                            \n                                getProfil\n                            \n                            \n                                getUserDetails\n                            \n                            \n                                getUsers\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/api.service.ts:29\n                            \n                        \n\n                \n                    \n                             Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getAuthHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuthHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     HttpHeaders\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfil\n                        \n                    \n                \n            \n            \n                \ngetProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:93\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de récupérer le profil de l'utilisateur\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \ngetUserDetails(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:49\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de récupérer la liste des utilisateurs\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:59\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de connecter un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:107\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de mettre à jour le profil de l'utilisateur\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(utilisateur: Utilisateur)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/api.service.ts:84\n                        \n                    \n\n\n            \n                \n                        cette fonction permet de récupérer l'ID d'une ville par son nom\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateur\n                                            \n                                                            Utilisateur\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/api/api.service.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Utilisateur } from '../utilisateur/utilisateur.service';\nimport { jwtDecode } from 'jwt-decode';\n\n\nexport interface AuthResponse {\n  nom: string;\n  prenom: string;\n  email: string;\n  userId: string;\n  accessToken: string;\n  refreshToken: string;\n\n}\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Api service\n * ce service permet de gérer les requêtes vers l'API\n * \n */\nexport class ApiService {\n  private apiUrl = '/api';\n\n  /**\n   *  Constructor\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  private getAuthHeaders(): HttpHeaders {\n    const token = localStorage.getItem('accessToken');\n    return new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n  }\n\n\n  /**\n   *  Fonction permettant de récupérer la liste des utilisateurs\n   * @returns Observable\n   */\n  getUsers(): Observable {\n    return this.http.get(this.apiUrl, { headers: this.getAuthHeaders() });\n  }\n\n  /**\n   *  Fonction permettant de connecter un utilisateur\n   * @param email \n   * @param password \n   * @returns \n   */\n  login(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/auth/login`, { email, password }).pipe(\n      tap(response => {\n        if (response.accessToken && response.refreshToken) {\n          localStorage.setItem('accessToken', response.accessToken);\n          localStorage.setItem('refreshToken', response.refreshToken);\n          localStorage.setItem('userId', response.userId);\n          localStorage.setItem('email', response.email);\n          localStorage.setItem('nom', response.nom);\n          localStorage.setItem('prenom', response.prenom);\n          // const decodedToken: any = jwtDecode(response.accessToken);\n          // localStorage.setItem('userId', decodedToken.userId);\n          // localStorage.setItem('email', decodedToken.email);\n        } else {\n          throw new Error('Invalid login response');\n        }\n      })\n    );\n  }\n  /**\n   * cette fonction permet de récupérer l'ID d'une ville par son nom\n   * @param cityName\n   * @returns\n   * \n   */\n  register(utilisateur: Utilisateur): Observable {\n    return this.http.post(`${this.apiUrl}/auth/register`, utilisateur);\n  }\n\n  /**\n   *  Fonction permettant de récupérer le profil de l'utilisateur\n   * \n   * @returns \n   */\n  getProfil(): Observable {\n    return this.http.get(`${this.apiUrl}/profil`, { headers: this.getAuthHeaders() });\n  }\n\n  // Get utilisateur details by ID\n  getUserDetails(userId: number): Observable {\n    return this.http.get(`${this.apiUrl}/${userId}`, { headers: this.getAuthHeaders() });\n  }\n\n\n  /**\n   *  Fonction permettant de mettre à jour le profil de l'utilisateur\n   * @returns \n   */\n  logout(): Observable {\n    return this.http.post(`${this.apiUrl}/auth/logout`, null, { headers: this.getAuthHeaders() }).pipe(\n      tap(() => {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('email');\n        localStorage.removeItem('nom');\n        localStorage.removeItem('prenom');\n      })\n    );\n  }\n\n  // Refresh token\n  refreshToken(): Observable {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post(`${this.apiUrl}/auth/refresh`, { refreshToken }).pipe(\n      tap(response => {\n        localStorage.setItem('accessToken', response.accessToken);\n        localStorage.setItem('refreshToken', response.refreshToken);\n        localStorage.setItem('userId', response.userId);\n        localStorage.setItem('email', response.email);\n        localStorage.setItem('nom', response.nom);\n        localStorage.setItem('prenom', response.prenom);\n        // const decodedToken: any = jwtDecode(response.accessToken);\n        // localStorage.setItem('userId', decodedToken.userId);\n        // localStorage.setItem('email', decodedToken.email);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n            \n                template\n                \n\n  \n\n     \n          \n              \n          \n            YLAGO\n       \n\n      \n\n          \n              Accueil\n              Comment ça marche\n              Trajets\n              \n                  \n                  \n                      Connexion\n                      Inscription\n                      Profil\n                      Publier un trajet\n                      Déconnexion\n                      Bienvenue, {{nom}} {{prenom}}\n                  \n              \n          \n          ☰\n      \n\n  \n     \n\n      \n\n  \n  \n      \n  \n\n  \n  \n      \n          \n              Comment voyager avec nous\n              \n                  Trajets populaires\n                  Destinations populaires\n                  Voyager en Europe\n              \n          \n          \n              Covoiturage\n              \n                  Paris → Rennes\n                  Lyon → Paris\n                  Lille → Paris\n              \n          \n          \n              En savoir plus\n              \n                  Comment ça marche\n                  Qui sommes-nous ?\n                  Centre d'aide\n              \n          \n          \n              Suivez-nous\n              \n                  \n                  \n                  \n              \n          \n      \n      \n          &copy; 2024 YLAGO. Tous droits réservés.\n      \n  \n\n  \n      function toggleMenu() {\n          document.querySelector('.nav-links').classList.toggle('active');\n      }\n  \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                nom\n                            \n                            \n                                prenom\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:122\n                            \n                        \n\n                \n                    \n                             Creates an instance of AppComponent.\n @param {AuthService} authService\n @param {Router} router\n @memberof AppComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:137\n                        \n                    \n\n\n            \n                \n                         cette fonction permet de verifier si l'utilisateur est connecté\nsi l'utilisateur est connecté, elle recupère les informations de l'utilisateur\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'YlaGo'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:120\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterOutlet, RouterLink, RouterLinkActive, Router } from '@angular/router';\nimport { AuthService } from './services/auth/auth.service';\n\n@Component({\n    selector: 'app-root',\n    standalone: true,\n    imports: [RouterOutlet, RouterLink, RouterLinkActive, FormsModule, CommonModule], // Import Router directives\n    template: `\n  \n       \n    \n      \n       \n            \n                \n            \n              YLAGO\n         \n    \n        \n       \n            \n                Accueil\n                Comment ça marche\n                Trajets\n                \n                    \n                    \n                        Connexion\n                        Inscription\n                        Profil\n                        Publier un trajet\n                        Déconnexion\n                        Bienvenue, {{nom}} {{prenom}}\n                    \n                \n            \n            ☰\n        \n        \n    \n       \n                    \n        \n    \n    \n    \n        \n    \n    \n    \n    \n        \n            \n                Comment voyager avec nous\n                \n                    Trajets populaires\n                    Destinations populaires\n                    Voyager en Europe\n                \n            \n            \n                Covoiturage\n                \n                    Paris → Rennes\n                    Lyon → Paris\n                    Lille → Paris\n                \n            \n            \n                En savoir plus\n                \n                    Comment ça marche\n                    Qui sommes-nous ?\n                    Centre d'aide\n                \n            \n            \n                Suivez-nous\n                \n                    \n                    \n                    \n                \n            \n        \n        \n            &copy; 2024 YLAGO. Tous droits réservés.\n        \n    \n    \n    \n        function toggleMenu() {\n            document.querySelector('.nav-links').classList.toggle('active');\n        }\n    \n  `,\n    styleUrls: ['./app.component.css']\n})\n\n/**\n *  class AppComponent\n * @implements {OnInit}\n * @export\n * \n * ce class est le composant principal de l'application\n *  il contient le header, le main et le footer\n *  il contient aussi les liens de navigation\n * il contient aussi le script pour le menu hamburger\n *  il contient aussi la fonction logout\n */\nexport class AppComponent implements OnInit {\n    title = 'YlaGo';\n\n    isAuthenticated = false;\n    email: string | null = null;\n    userId: string | null = null;\n    nom: string | null = null;\n    prenom: string | null = null;\n/**\n *  Creates an instance of AppComponent.\n *  @param {AuthService} authService\n *  @param {Router} router\n * \n *  @memberof AppComponent\n */\n    constructor(private authService: AuthService, private router: Router) { }\n\n    /**\n     *  cette fonction permet de verifier si l'utilisateur est connecté\n     * si l'utilisateur est connecté, elle recupère les informations de l'utilisateur\n     * \n     */\n    ngOnInit() {\n        this.authService.getAuthState().subscribe((auth) => {\n            this.isAuthenticated = auth;\n            if (auth) {\n                this.userId = localStorage.getItem('userId');\n                this.email = localStorage.getItem('email');\n                // this.role = localStorage.getItem('role');\n                this.nom = localStorage.getItem('nom');\n                this.prenom = localStorage.getItem('prenom');\n            } else {\n                this.userId = null;\n                this.email = null;\n                // this.role = null;\n                this.nom = null;\n                this.prenom = null;\n            }\n        });\n    }\n\n    // ngOnInit() {\n    //   this.authService.getAuthState().subscribe((auth) => {\n    //     this.isAuthenticated = auth;\n    //     if (auth) {\n    //       this.userId = localStorage.getItem('userId');\n    //       this.email = localStorage.getItem('email');\n    //     } else {\n    //       this.email = null;\n    //     }\n    //   });\n    // }\n\n    logout() {\n        this.authService.logout();\n        this.router.navigate(['']);\n    }\n}\n    \n\n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     YLAGO                                     Accueil              Comment ça marche              Trajets                                                                        Connexion                      Inscription                      Profil                      Publier un trajet                      Déconnexion                      Bienvenue, {{nom}} {{prenom}}                                                    ☰                                                                 Comment voyager avec nous                                Trajets populaires                  Destinations populaires                  Voyager en Europe                                                Covoiturage                                Paris → Rennes                  Lyon → Paris                  Lille → Paris                                                En savoir plus                                Comment ça marche                  Qui sommes-nous ?                  Centre d\\'aide                                                Suivez-nous                                                                                                                  © 2024 YLAGO. Tous droits réservés.                function toggleMenu() {          document.querySelector(\\'.nav-links\\').classList.toggle(\\'active\\');      }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   "},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nTimePipe\n\nTimePipe\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nTimePipe->AppRoutingModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppRoutingModule -->\n\nAuthInterceptor->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TimePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RouterModule, Routes } from '@angular/router';\nimport { ConnexionComponent } from './components/connexion/connexion.component';\nimport { InscriptionComponent } from './components/inscription/inscription.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { TrajetComponent } from './components/trajet/trajet.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuardService } from './services/auth/guard/auth.guard.service';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from './services/api/auth.intercepter';\nimport { TimePipe } from './pipe/time.pipe';\nimport { PublierTrajetComponent } from './publier-trajet/publier-trajet.component';\nimport { ProfilComponent } from './components/profil/profil.component';\n\n\nexport const routes: Routes = [\n  // { path: '', component: UtilisateurListComponent },\n  // { path: 'create', component: UtilisateurFormComponent },\n  // { path: 'edit/:id', component: UtilisateurFormComponent },\n  { path: '', component: HomeComponent },\n  { path: 'connexion', component: ConnexionComponent },\n  { path: 'inscription', component: InscriptionComponent },\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuardService] },\n  { path: 'trajet', component: TrajetComponent },\n  { path: 'publier-trajet', component: PublierTrajetComponent },\n  { path: 'profil', component: ProfilComponent },\n  { path: '**', component: HomeComponent },\n  { path: '', redirectTo: '/connexion', pathMatch: 'full' },\n\n];\n\n@NgModule({\n\n  imports: [\n    BrowserModule,\n    TimePipe,\n    CommonModule,\n    FormsModule,\n\n    RouterModule.forRoot(routes)\n\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth/guard/auth.guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/guard/auth.guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/guard/auth.guard.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { ActivatedRouteSnapshot, CanActivate, GuardResult, MaybeAsync, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  \n  constructor(private authService: AuthService, private router: Router) { }\n  canActivate(): boolean {\n    if (this.authService.getAuthState()) {\n      return true;\n    }\n    this.router.navigate(['/connexion']);\n    return false;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/auth.intercepter.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/auth.intercepter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/api/auth.intercepter.ts:18\n                        \n                    \n\n\n            \n                \n                        Intercepte les requêtes HTTP sortantes pour ajouter le jeton d'authentification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    La requête HTTP sortante.\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Le gestionnaire de requêtes HTTP.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                Un Observable des événements HTTP.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) { }\n\n\n  /**\n   * Intercepte les requêtes HTTP sortantes pour ajouter le jeton d'authentification.\n   * @param req La requête HTTP sortante.\n   * @param next Le gestionnaire de requêtes HTTP.\n   * @returns Un Observable des événements HTTP.\n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    // Récupère le jeton d'accès depuis le stockage local\n\n    const token = localStorage.getItem('accessToken');\n    let authReq = req;\n\n    // Si le jeton existe, clone la requête et ajoute le jeton d'authentification dans les en-têtes\n\n    if (token) {\n      authReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      });\n    }\n\n    return next.handle(authReq).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 401) {\n          // Token expired, refresh the token\n          return this.authService.refreshToken().pipe(\n            switchMap((response: any) => {\n              // Clone the original request with the new access token\n              const clonedRequest = req.clone({\n                headers: req.headers.set('Authorization', `Bearer ${response.accessToken}`)\n              });\n              return next.handle(clonedRequest);\n            }),\n            catchError(err => {\n              // If refresh token fails, logout the user\n              this.authService.logout();\n              return throwError(err);\n            })\n          );\n        }\n        return throwError(error);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            nom\n                                        \n                                \n                                \n                                        \n                                            prenom\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prenom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prenom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Utilisateur } from '../utilisateur/utilisateur.service';\nimport { jwtDecode } from 'jwt-decode';\n\n\nexport interface AuthResponse {\n  nom: string;\n  prenom: string;\n  email: string;\n  userId: string;\n  accessToken: string;\n  refreshToken: string;\n\n}\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Api service\n * ce service permet de gérer les requêtes vers l'API\n * \n */\nexport class ApiService {\n  private apiUrl = '/api';\n\n  /**\n   *  Constructor\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  private getAuthHeaders(): HttpHeaders {\n    const token = localStorage.getItem('accessToken');\n    return new HttpHeaders({\n      Authorization: `Bearer ${token}`\n    });\n  }\n\n\n  /**\n   *  Fonction permettant de récupérer la liste des utilisateurs\n   * @returns Observable\n   */\n  getUsers(): Observable {\n    return this.http.get(this.apiUrl, { headers: this.getAuthHeaders() });\n  }\n\n  /**\n   *  Fonction permettant de connecter un utilisateur\n   * @param email \n   * @param password \n   * @returns \n   */\n  login(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/auth/login`, { email, password }).pipe(\n      tap(response => {\n        if (response.accessToken && response.refreshToken) {\n          localStorage.setItem('accessToken', response.accessToken);\n          localStorage.setItem('refreshToken', response.refreshToken);\n          localStorage.setItem('userId', response.userId);\n          localStorage.setItem('email', response.email);\n          localStorage.setItem('nom', response.nom);\n          localStorage.setItem('prenom', response.prenom);\n          // const decodedToken: any = jwtDecode(response.accessToken);\n          // localStorage.setItem('userId', decodedToken.userId);\n          // localStorage.setItem('email', decodedToken.email);\n        } else {\n          throw new Error('Invalid login response');\n        }\n      })\n    );\n  }\n  /**\n   * cette fonction permet de récupérer l'ID d'une ville par son nom\n   * @param cityName\n   * @returns\n   * \n   */\n  register(utilisateur: Utilisateur): Observable {\n    return this.http.post(`${this.apiUrl}/auth/register`, utilisateur);\n  }\n\n  /**\n   *  Fonction permettant de récupérer le profil de l'utilisateur\n   * \n   * @returns \n   */\n  getProfil(): Observable {\n    return this.http.get(`${this.apiUrl}/profil`, { headers: this.getAuthHeaders() });\n  }\n\n  // Get utilisateur details by ID\n  getUserDetails(userId: number): Observable {\n    return this.http.get(`${this.apiUrl}/${userId}`, { headers: this.getAuthHeaders() });\n  }\n\n\n  /**\n   *  Fonction permettant de mettre à jour le profil de l'utilisateur\n   * @returns \n   */\n  logout(): Observable {\n    return this.http.post(`${this.apiUrl}/auth/logout`, null, { headers: this.getAuthHeaders() }).pipe(\n      tap(() => {\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n        localStorage.removeItem('userId');\n        localStorage.removeItem('email');\n        localStorage.removeItem('nom');\n        localStorage.removeItem('prenom');\n      })\n    );\n  }\n\n  // Refresh token\n  refreshToken(): Observable {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post(`${this.apiUrl}/auth/refresh`, { refreshToken }).pipe(\n      tap(response => {\n        localStorage.setItem('accessToken', response.accessToken);\n        localStorage.setItem('refreshToken', response.refreshToken);\n        localStorage.setItem('userId', response.userId);\n        localStorage.setItem('email', response.email);\n        localStorage.setItem('nom', response.nom);\n        localStorage.setItem('prenom', response.prenom);\n        // const decodedToken: any = jwtDecode(response.accessToken);\n        // localStorage.setItem('userId', decodedToken.userId);\n        // localStorage.setItem('email', decodedToken.email);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isAuth\n                            \n                            \n                                    Private\n                                nomSubject\n                            \n                            \n                                    Private\n                                prenomSubject\n                            \n                            \n                                    Private\n                                userIdSubject\n                            \n                            \n                                    Private\n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkAuth\n                            \n                            \n                                getAuthState\n                            \n                            \n                                getUserId\n                            \n                            \n                                    Private\n                                isLocalStorageAvailable\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                setUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de vérifier si l'utilisateur est authentifié\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthState\n                        \n                    \n                \n            \n            \n                \ngetAuthState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLocalStorageAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLocalStorageAvailable()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:49\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de vérifier si le local storage est disponible\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de connecter un utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de récupérer le profil de l'utilisateur\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(utilisateur: Utilisateur)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:98\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de récupérer le profil de l'utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateur\n                                            \n                                                            Utilisateur\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserId\n                        \n                    \n                \n            \n            \n                \nsetUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de stocker l'identifiant de l'utilisateur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(this.checkAuth())\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        nomSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prenomSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userIdSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth/auth.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ApiService, AuthResponse } from '../api/api.service';\nimport { Utilisateur } from '../utilisateur/utilisateur.service';\nimport { jwtDecode } from 'jwt-decode';\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Auth service\n * ce service permet de gérer l'authentification\n *  \n */\nexport class AuthService {\n  private isAuth = new BehaviorSubject(this.checkAuth());\n  private userProfile = new BehaviorSubject(null);\n  private userIdSubject = new BehaviorSubject(null);\n  private nomSubject = new BehaviorSubject(null);\n  private prenomSubject = new BehaviorSubject(null);\n\n  constructor(private http: HttpClient, private apiService: ApiService) {\n    if (this.isLocalStorageAvailable()) {\n      const storedUserId = localStorage.getItem('userId');\n      if (storedUserId) {\n        this.userIdSubject.next(storedUserId);\n      }\n    }\n  }\n\n  /**\n   *  Fonction permettant de stocker l'identifiant de l'utilisateur\n   * @param userId \n   */\n  setUserId(userId: string) {\n    this.userIdSubject.next(userId);\n  }\n\n  getUserId(): Observable {\n    return this.userIdSubject.asObservable();\n  }\n\n  /**\n   *  Fonction permettant de vérifier si le local storage est disponible\n   * @returns boolean\n   */\n  private isLocalStorageAvailable(): boolean {\n    return typeof window !== 'undefined' && typeof localStorage !== 'undefined';\n  }\n\n  /**\n   *  Fonction permettant de vérifier si l'utilisateur est authentifié\n   * @returns boolean\n   */\n  private checkAuth(): boolean {\n    if (this.isLocalStorageAvailable()) {\n      return !!localStorage.getItem('accessToken');\n    }\n    return false;\n  }\n\n\n  /**\n   *  Fonction permettant de connecter un utilisateur\n   * @param email \n   * @param password \n   * @returns \n   */\n  login(email: string, password: string): Observable {\n    return new Observable((observer) => {\n      this.apiService.login(email, password).subscribe({\n        next: (response) => {\n          if (this.isLocalStorageAvailable()) {\n            localStorage.setItem('accessToken', response.accessToken);\n            localStorage.setItem('refreshToken', response.refreshToken);\n            localStorage.setItem('userId', response.userId); // Store userId\n            // localStorage.setItem('email', response.email); // Store email\n            // localStorage.setItem('role', response.role); // Store role\n            localStorage.setItem('nom', response.nom); // Store nom\n            localStorage.setItem('prenom', response.prenom); // Store prenom\n          }\n          this.isAuth.next(true);\n          observer.next(response);\n          observer.complete();\n        },\n        error: (err) => observer.error(err),\n      });\n    });\n  }\n\n  /**\n   *  Fonction permettant de récupérer le profil de l'utilisateur\n   * @param utilisateur \n   * @returns \n   */\n  register(utilisateur: Utilisateur): Observable {\n\n    return new Observable((observer) => {\n      this.apiService.register(utilisateur).subscribe({\n        next: (response) => {\n          observer.next(response);\n          observer.complete();\n        },\n        error: (err) => observer.error(err),\n      });\n    });\n\n  }\n\n  /**\n   * Fonction permettant de récupérer le profil de l'utilisateur\n   * \n   */\n  logout(): void {\n    if (this.isLocalStorageAvailable()) {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      // localStorage.removeItem('userId');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n    }\n    this.isAuth.next(false);\n    this.userProfile.next(null); // Clear user profile on logout\n  }\n\n  refreshToken(): Observable {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return new Observable((observer) => {\n      this.apiService.refreshToken().subscribe({\n        next: (response) => {\n          if (this.isLocalStorageAvailable()) {\n            localStorage.setItem('accessToken', response.accessToken);\n            localStorage.setItem('refreshToken', response.refreshToken);\n            const decodedToken: any = jwtDecode(response.accessToken);\n\n            localStorage.setItem('nom', decodedToken.nom);\n            localStorage.setItem('prenom', decodedToken.prenom);\n          }\n          observer.next(response);\n          observer.complete();\n        },\n        error: (err) => observer.error(err),\n      });\n    });\n  }\n\n\n  /*\n    *  Fonction permettant de récupérer le profil de l'utilisateur\n    * @returns \n    */\n\n  getAuthState(): Observable {\n    return this.isAuth.asObservable();\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConnexionComponent.html":{"url":"components/ConnexionComponent.html","title":"component - ConnexionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConnexionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/connexion/connexion.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-connexion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterOutlet\n                            RouterLinkActive\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./connexion.component.css\n            \n\n\n\n            \n                templateUrl\n                ./connexion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                password\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearError\n                            \n                            \n                                login\n                            \n                            \n                                    Private\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/connexion/connexion.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearError\n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connexion/connexion.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connexion/connexion.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/connexion/connexion.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connexion/connexion.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connexion/connexion.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connexion/connexion.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connexion/connexion.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/connexion/connexion.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-connexion',\n  standalone: true,\n  imports: [RouterLink, RouterOutlet, RouterLinkActive, FormsModule, CommonModule],\n  templateUrl: './connexion.component.html',\n  styleUrls: ['./connexion.component.css']\n})\n\n/*\n  * Connexion component\n  * ce Class permet de gérer la connexion d'un utilisateur\n  * \n  \n  */\nexport class ConnexionComponent {\n  email: string = '';\n  password: string = '';\n  errorMessage: string = '';\n  isLoading: boolean = false;\n  successMessage: string = '';\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /*\n  * Fonction permettant de connecter un utilisateur\n  *  @param email: string\n  * @param password: string\n  * @return void\n  * \n  */\n  login(): void {\n    // Reset messages\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    // Validate inputs\n    if (!this.email || !this.password) {\n      this.errorMessage = 'Veuillez remplir tous les champs';\n      return;\n    }\n\n    /* Vérifie si l'adresse email est valide */\n\n\n    if (!this.validateEmail(this.email)) {\n      this.errorMessage = 'Veuillez entrer une adresse email valide';\n      return;\n    }\n\n    this.isLoading = true;\n\n    this.authService.login(this.email, this.password).subscribe({\n      next: (response) => {\n        this.isLoading = false;\n        this.successMessage = 'Connexion réussie! Redirection en cours...';\n        localStorage.setItem('accessToken', response.accessToken);\n\n        // permet de rediriger l'utilisateur vers la page d'accueil après 1.5 secondes\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        }, 1500);\n      },\n      error: (err) => {\n        this.isLoading = false;\n        if (err.status === 401) {\n          this.errorMessage = 'Email ou mot de passe incorrect';\n        } else if (err.status === 0) {\n          this.errorMessage = 'Impossible de se connecter au serveur. Vérifiez votre connexion internet.';\n        } else {\n          this.errorMessage = 'Une erreur est survenue. Veuillez réessayer plus tard.';\n        }\n        console.error('Login error:', err);\n      }\n    });\n  }\n\n  /*\n  * Fonction permettant de valider le format d'une adresse email\n  * @param email: string\n  * @return boolean\n  * \n  */\n\n  private validateEmail(email: string): boolean {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  }\n\n  clearError(): void {\n    this.errorMessage = '';\n  }\n}\n    \n\n    \n        \n    \n        \n            Connexion\n            \n                \n                    Email\n                    \n                \n                \n                    Mot de passe\n                    \n                \n                \n                    Se connecter\n                    \n                         Connexion...\n                    \n                \n                \n                \n                \n                    ✓ {{ successMessage }}\n                \n                \n                \n                \n                    ! {{ errorMessage }}\n                \n            \n            \n                Pas encore inscrit ? Créer un compte\n                Mot de passe oublié ?\n            \n        \n    \n\n    \n\n    \n                \n                    ./connexion.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Connexion                                                Email                                                                        Mot de passe                                                                        Se connecter                                             Connexion...                                                                                                        ✓ {{ successMessage }}                                                                                    ! {{ errorMessage }}                                                        Pas encore inscrit ? Créer un compte                Mot de passe oublié ?                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConnexionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateT\n                            \n                            \n                                passagers\n                            \n                            \n                                villeA\n                            \n                            \n                                villeD\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decrementPassagers\n                            \n                            \n                                incrementPassagers\n                            \n                            \n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decrementPassagers\n                        \n                    \n                \n            \n            \n                \ndecrementPassagers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementPassagers\n                        \n                    \n                \n            \n            \n                \nincrementPassagers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de valider une adresse email\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passagers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villeD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  imports:[RouterLink , RouterLinkActive , FormsModule ,CommonModule],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\n\n/*\n  * Home component\n  * ce Class permet de gérer la page d'accueil\n  */\nexport class HomeComponent {\n  // departure: string = '';\n  // destination: string = '';\n  // date: string = '';\n  // passagers: number = 1;\n\n  villeD: string = '';\n  villeA: string = '';\n  dateT: string = '';\n  passagers: number = 1; \n\n  constructor(private router: Router) {}\n/**\n * Fonction permettant de valider une adresse email\n * @param email: string\n * @return boolean\n * \n */\n  onSearch() {\n    this.router.navigate(['/trajet'], {\n      queryParams: {\n        villeD: this.villeD,\n        villeA: this.villeA,\n        dateT: this.dateT,\n        passagers: this.passagers,\n      },\n    }\n    )\n  }\n  // Handle form submission\n  // onSearch() {\n  //   const queryParams = {\n  //     departure: this.departure,\n  //     destination: this.destination,\n  //     date: this.date,\n  //     passagers: this.passagers,\n  //   };\n\n    // Navigate to the Trajet page with query parameters\n  \n\n  // Increment passagers\n  incrementPassagers() {\n    if (this.passagers  1) {\n      this.passagers--;\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    \n    \n      \n        🚗\n        \n      \n      \n    \n\n    \n    \n      \n        📍\n        \n      \n      \n    \n\n    \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n    \n      \n        −\n        \n          \n        \n        \n        +\n      \n    \n\n    \n    \n      Rechercher\n    \n  \n\n\n\n\n  \n  \n    \n      \n        \n        \n        \n      \n      \n        \n          \n          \n            Partagez vos trajets\n            Économisez et voyagez en toute convivialité.\n          \n        \n        \n          \n          \n            Trajets disponibles\n            Trouvez des trajets près de chez vous.\n          \n        \n        \n          \n          \n            Voyagez écologique\n            Réduisez votre empreinte carbone.\n          \n        \n      \n      \n        \n        Précédent\n      \n      \n        \n        Suivant\n      \n    \n  \n\n  \n  \n    Comment ça marche\n    \n      \n        \n        1. Recherchez un trajet\n        Entrez votre départ, destination et date.\n      \n      \n        \n        2. Réservez\n        Choisissez un trajet et réservez votre place.\n      \n      \n        \n        3. Voyagez\n        Profitez du voyage et économisez.\n      \n    \n  \n\n\n\n  \n  \n    \n      Ce que disent nos utilisateurs\n      \n        \n          \n            \"Un service incroyable ! J'ai économisé beaucoup d'argent et rencontré des gens sympas.\"\n            \n              \n              Jean Dupont\n            \n          \n        \n        \n          \n            \"Facile à utiliser et très fiable. Je recommande vivement !\"\n            \n              \n              Marie Curie\n            \n          \n        \n        \n          \n            \"Voyager n'a jamais été aussi simple et économique. Merci !\"\n            \n              \n              Pierre Durand\n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n  \n    \n      Prêt à voyager ?\n      Trouvez votre trajet dès maintenant et commencez à économiser.\n      Rechercher un trajet\n    \n  \n\n\n  \n  \n    \n      Pourquoi choisir Covoiturage ?\n      \n        \n          \n          Économique\n          Partagez les frais de voyage et économisez jusqu'à 50%.\n        \n        \n          \n          Écologique\n          Réduisez votre empreinte carbone en voyageant ensemble.\n        \n        \n          \n          Communautaire\n          Rencontrez des voyageurs sympas et partagez des moments uniques.\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        🚗                                              📍                                                                                                        −                                          +                        Rechercher                                                                                                Partagez vos trajets            Économisez et voyagez en toute convivialité.                                                          Trajets disponibles            Trouvez des trajets près de chez vous.                                                          Voyagez écologique            Réduisez votre empreinte carbone.                                              Précédent                            Suivant                    Comment ça marche                          1. Recherchez un trajet        Entrez votre départ, destination et date.                            2. Réservez        Choisissez un trajet et réservez votre place.                            3. Voyagez        Profitez du voyage et économisez.                          Ce que disent nos utilisateurs                                    \"Un service incroyable ! J\\'ai économisé beaucoup d\\'argent et rencontré des gens sympas.\"                                        Jean Dupont                                                            \"Facile à utiliser et très fiable. Je recommande vivement !\"                                        Marie Curie                                                            \"Voyager n\\'a jamais été aussi simple et économique. Merci !\"                                        Pierre Durand                                                        Prêt à voyager ?      Trouvez votre trajet dès maintenant et commencez à économiser.      Rechercher un trajet                    Pourquoi choisir Covoiturage ?                                  Économique          Partagez les frais de voyage et économisez jusqu\\'à 50%.                                    Écologique          Réduisez votre empreinte carbone en voyageant ensemble.                                    Communautaire          Rencontrez des voyageurs sympas et partagez des moments uniques.                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InscriptionComponent.html":{"url":"components/InscriptionComponent.html","title":"component - InscriptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InscriptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/inscription/inscription.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-inscription\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterOutlet\n                            RouterLinkActive\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./inscription.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inscription.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                hasCar\n                            \n                            \n                                isLoading\n                            \n                            \n                                passwordStrength\n                            \n                            \n                                showPassword\n                            \n                            \n                                successMessage\n                            \n                            \n                                utilisateur\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPasswordStrength\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                onHasCarChange\n                            \n                            \n                                onRegister\n                            \n                            \n                                togglePasswordVisibility\n                            \n                            \n                                    Private\n                                validateEmail\n                            \n                            \n                                    Private\n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/inscription/inscription.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkPasswordStrength\n                        \n                    \n                \n            \n            \n                \ncheckPasswordStrength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:106\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de vérifier la force du mot de passe\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(err: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onHasCarChange\n                        \n                    \n                \n            \n            \n                \nonHasCarChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de changer le rôle de l'utilisateur\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:49\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de valider une adresse email\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de changer la visibilité du mot de passe\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de valider une adresse email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    : string\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/inscription/inscription.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de vider le message d'erreur\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordStrength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 0,\n    nom: '',\n    prenom: '',\n    email: '',\n    password: '',\n    role: 'conducteur',\n    tel: '',\n    ville: '',\n    voiture: null\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/components/inscription/inscription.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Utilisateur } from '../../services/utilisateur/utilisateur.service';\n\n@Component({\n  selector: 'app-inscription',\n  standalone: true,\n  imports: [RouterLink, RouterOutlet, RouterLinkActive, FormsModule, CommonModule],\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.css']\n})\n\n/**\n * ce component permet de gérer l'inscription d'un utilisateur\n * \n */\nexport class InscriptionComponent {\n  utilisateur: Utilisateur = {\n    id: 0,\n    nom: '',\n    prenom: '',\n    email: '',\n    password: '',\n    role: 'conducteur',\n    tel: '',\n    ville: '',\n    voiture: null\n  };\n\n  hasCar: boolean = false;\n  isLoading: boolean = false;\n  errorMessage: string = '';\n  successMessage: string = '';\n  passwordStrength: string = '';\n  showPassword: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n\n  /**\n   *  Fonction permettant de valider une adresse email\n   * @param email: string\n   * @return boolean\n   * @returns void\n   */\n  onRegister() {\n    // Reset messages\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    // Validate form\n    if (!this.validateForm()) {\n      return;\n    }\n\n    this.isLoading = true;\n\n    if (!this.hasCar) {\n      this.utilisateur.voiture = null;\n      this.utilisateur.role = 'passager';\n    }\n\n    this.authService.register(this.utilisateur).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.successMessage = 'Inscription réussie! Redirection vers la page de connexion...';\n        setTimeout(() => {\n          this.router.navigate(['/connexion']);\n        }, 2000);\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.handleError(err);\n      }\n    });\n  }\n\n  /**\n   * Fonction permettant de changer le rôle de l'utilisateur\n   * @returns void\n   * \n   */\n  onHasCarChange() {\n    if (this.hasCar) {\n      this.utilisateur.voiture = {\n        place: 4,\n        marque: '',\n        modele: '',\n        immatriculation: ''\n      };\n      this.utilisateur.role = 'conducteur';\n    } else {\n      this.utilisateur.voiture = null;\n      this.utilisateur.role = 'passager';\n    }\n  }\n\n  /**\n   * Fonction permettant de vérifier la force du mot de passe\n   * @returns void\n   *  \n   */\n  checkPasswordStrength() {\n    const strongRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n    const mediumRegex = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*\\d))|((?=.*[A-Z])(?=.*\\d))).{6,}$/;\n\n    if (strongRegex.test(this.utilisateur.password)) {\n      this.passwordStrength = 'strong';\n    } else if (mediumRegex.test(this.utilisateur.password)) {\n      this.passwordStrength = 'medium';\n    } else {\n      this.passwordStrength = 'weak';\n    }\n  }\n\n  /**\n   * Fonction permettant de changer la visibilité du mot de passe\n   * @returns void\n   * \n   */\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  /**\n   * Fonction permettant de vider le message d'erreur\n   * @returns void\n   * \n   */\n  private validateForm(): boolean {\n    if (!this.utilisateur.nom || !this.utilisateur.prenom || !this.utilisateur.email ||\n      !this.utilisateur.password || !this.utilisateur.tel || !this.utilisateur.ville) {\n      this.errorMessage = 'Veuillez remplir tous les champs obligatoires';\n      return false;\n    }\n\n    if (!this.validateEmail(this.utilisateur.email)) {\n      this.errorMessage = 'Veuillez entrer une adresse email valide';\n      return false;\n    }\n\n    if (this.hasCar && this.utilisateur.voiture) {\n      if (!this.utilisateur.voiture.place || !this.utilisateur.voiture.marque ||\n        !this.utilisateur.voiture.modele || !this.utilisateur.voiture.immatriculation) {\n        this.errorMessage = 'Veuillez remplir tous les détails de la voiture';\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Fonction permettant de valider une adresse email\n   * @param email: string\n   * @return boolean\n   * \n   */\n\n  private validateEmail(email: string): boolean {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n  }\n\n  private handleError(err: any) {\n    if (err.status === 400) {\n      this.errorMessage = 'Cet email est déjà utilisé';\n    } else if (err.status === 0) {\n      this.errorMessage = 'Impossible de se connecter au serveur. Vérifiez votre connexion internet.';\n    } else {\n      this.errorMessage = 'Une erreur est survenue. Veuillez réessayer plus tard.';\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      Inscription\n      \n        \n        \n          \n            Nom*\n            \n          \n          \n            Prénom*\n            \n          \n        \n\n        \n          Email*\n          \n        \n\n        \n          Mot de passe*\n          \n            \n            \n              {{ showPassword ? '👁️' : '👁️‍🗨️' }}\n            \n          \n          \n            \n              Force du mot de passe: \n              {{ \n                passwordStrength === 'strong' ? 'Forte' : \n                passwordStrength === 'medium' ? 'Moyenne' : 'Faible' \n              }}\n            \n          \n          Minimum 8 caractères avec majuscule, minuscule et chiffre\n        \n\n        \n          \n            Téléphone*\n            \n          \n          \n            Ville*\n            \n          \n        \n\n        \n        \n          \n            \n            Je possède une voiture\n          \n        \n\n        \n          Informations sur la voiture\n          \n            \n              Nombre de places*\n              \n            \n            \n              Marque*\n              \n            \n          \n          \n            Modèle*\n            \n          \n          \n            Immatriculation*\n            \n          \n        \n\n        \n        \n          ! {{ errorMessage }}\n        \n        \n          ✓ {{ successMessage }}\n        \n\n        \n          S'inscrire\n          \n             Inscription en cours...\n          \n        \n      \n\n      \n          Déjà inscrit ? Se connecter\n      \n    \n  \n\n    \n\n    \n                \n                    ./inscription.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Inscription                                            Nom*                                            Prénom*                                                Email*                                    Mot de passe*                                                {{ showPassword ? \\'👁️\\' : \\'👁️‍🗨️\\' }}                                                          Force du mot de passe:               {{                 passwordStrength === \\'strong\\' ? \\'Forte\\' :                 passwordStrength === \\'medium\\' ? \\'Moyenne\\' : \\'Faible\\'               }}                                Minimum 8 caractères avec majuscule, minuscule et chiffre                                      Téléphone*                                            Ville*                                                                                Je possède une voiture                                    Informations sur la voiture                                    Nombre de places*                                                    Marque*                                                          Modèle*                                            Immatriculation*                                                        ! {{ errorMessage }}                          ✓ {{ successMessage }}                          S\\'inscrire                       Inscription en cours...                                        Déjà inscrit ? Se connecter            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InscriptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfilComponent.html":{"url":"components/ProfilComponent.html","title":"component - ProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profil/profil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profil\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            ReactiveFormsModule\n                            CommonModule\n                            TimePipe\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./profil.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                profileForm\n                            \n                            \n                                userData\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                patchFormValues\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, utilisateurService: UtilisateurService, profilService: ProfilService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profil/profil.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : AuthService\n\n                                                        \n                                                \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : UtilisateurService\n\n                                                        \n                                                \n                                                \n                                                        profilService\n                                                  \n                                                        \n                                                                        ProfilService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : ProfilService\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                : FormBuilder\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:70\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de valider une adresse email\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de valider une adresse email\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchFormValues\n                        \n                    \n                \n            \n            \n                \npatchFormValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profil/profil.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de valider une adresse email\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                boolean\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profil/profil.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { TimePipe } from '../../pipe/time.pipe';\nimport { Utilisateur, UtilisateurService } from '../../services/utilisateur/utilisateur.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { ProfilService } from '../../services/profil/profil.service';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { lastValueFrom } from 'rxjs';\n\n@Component({\n  selector: 'app-profil',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, ReactiveFormsModule, CommonModule, TimePipe, FormsModule],\n  templateUrl: './profil.component.html',\n  styleUrls: ['./profil.component.css']\n})\n\n/**\n * Profil component\n * ce Class permet de gérer le profil d'un utilisateur\n * \n */\n\nexport class ProfilComponent implements OnInit {\n  userProfile: Utilisateur | null = null;\n  profileForm: FormGroup;\n  userData: any;\n\n\n  /**\n   * Constructor\n   * @param authService: AuthService\n   * @param utilisateurService: UtilisateurService\n   * @param profilService: ProfilService\n   * @param fb: FormBuilder\n   */\n\n\n  constructor(\n    private authService: AuthService,\n    private utilisateurService: UtilisateurService,\n    private profilService: ProfilService,\n    private fb: FormBuilder\n  ) {\n    this.profileForm = this.fb.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      tel: ['', Validators.required],\n      ville: ['', Validators.required],\n      profilImage: [''],\n      dateNaissance: ['', Validators.required],\n      adresse: ['', Validators.required],\n      voiture: this.fb.group({\n        place: [0, Validators.required],\n        marque: ['', Validators.required],\n        modele: ['', Validators.required],\n        immatriculation: ['', Validators.required]\n      })\n    });\n  }\n\n  /**\n   *  Fonction permettant de valider une adresse email\n   * @param email: string\n   * @return boolean\n   * \n   */\n  async ngOnInit(): Promise {\n    const userId = localStorage.getItem('userId');\n    if (!userId) {\n      alert('Please login to view your profile.');\n      return;\n    }\n\n    try {\n      this.userData = await lastValueFrom(this.utilisateurService.getUtilisateur(Number(userId)));\n      this.userProfile = this.userData;\n      this.patchFormValues();\n    } catch (error) {\n      console.error('Error loading profile:', error);\n    }\n  }\n\n  /**\n   * Fonction permettant de valider une adresse email\n   * @param email: string\n   * @return boolean\n   */\n  patchFormValues() {\n    if (this.userData) {\n      this.profileForm.patchValue(this.userData);\n      if (this.userData.voiture) {\n        this.profileForm.get('voiture')?.patchValue(this.userData.voiture);\n      }\n    }\n  }\n\n  /**\n   * Fonction permettant de valider une adresse email\n   * @param email: string\n   * @return boolean\n   * \n   */\n\n  async onSubmit() {\n    if (this.profileForm.valid && this.userProfile) {\n      try {\n        const updatedData = this.profileForm.value;\n        updatedData.id = this.userProfile.id; // Ensure ID is sent\n\n        const response = await lastValueFrom(\n          this.utilisateurService.updateUtilisateurWithProfile(this.userProfile.id, updatedData)\n        );\n\n        this.userProfile = response;\n        this.profileForm.patchValue(response);\n\n        alert('Profile updated successfully!');\n      } catch (err) {\n        console.error('Error updating profile:', err);\n        alert('Error updating profile.');\n      }\n    }\n  }\n\n\n}\n    \n\n    \n        \n  Profil de {{ userProfile.nom }} {{ userProfile.prenom }}\n  \n    \n      Nom:\n      \n    \n    \n      Prénom:\n      \n    \n    \n      Email:\n      \n    \n    \n      Téléphone:\n      \n    \n    \n      Ville:\n      \n    \n    \n      Image de profil:\n      \n    \n    \n      Date de naissance:\n      \n    \n    \n      Adresse:\n      \n    \n    \n      Voiture\n      \n        Nombre de places:\n        \n      \n      \n        Marque:\n        \n      \n      \n        Modèle:\n        \n      \n      \n        Immatriculation:\n        \n      \n    \n    Mettre à jour\n  \n\n\n  Chargement du profil...\n\n    \n\n    \n                \n                    ./profil.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profil de {{ userProfile.nom }} {{ userProfile.prenom }}            Nom:                    Prénom:                    Email:                    Téléphone:                    Ville:                    Image de profil:                    Date de naissance:                    Adresse:                    Voiture              Nombre de places:                            Marque:                            Modèle:                            Immatriculation:                      Mettre à jour    Chargement du profil...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfilService.html":{"url":"injectables/ProfilService.html","title":"injectable - ProfilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/profil/profil.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteProfil\n                            \n                            \n                                getProfil\n                            \n                            \n                                getProfilById\n                            \n                            \n                                updateProfil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/profil/profil.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProfil\n                        \n                    \n                \n            \n            \n                \ndeleteProfil(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profil/profil.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfil\n                        \n                    \n                \n            \n            \n                \ngetProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profil/profil.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfilById\n                        \n                    \n                \n            \n            \n                \ngetProfilById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profil/profil.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfil\n                        \n                    \n                \n            \n            \n                \nupdateProfil(id: number, profil: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profil/profil.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                profil\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/profil/profil.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilService {\n private apiUrl = '/api'; // Use the proxy URL\n  constructor(private http : HttpClient) { }\n\n  getProfil(): Observable {\n    return this.http.get(`${this.apiUrl}/profil`);\n  }\n  \n\n  updateProfil(id: number, profil: any): Observable {\n    return this.http.put(`${this.apiUrl}/profil/${id}`, profil);\n  }\n\n  deleteProfil(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/profil/${id}`);\n  }\n\n  getProfilById(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/profil/${id}`);\n  }\n\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublierTrajetComponent.html":{"url":"components/PublierTrajetComponent.html","title":"component - PublierTrajetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PublierTrajetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/publier-trajet/publier-trajet.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-publier-trajet\n            \n\n\n            \n                imports\n                \n                            FormsModule\n                            ReactiveFormsModule\n                            CommonModule\n                            TimePipe\n                \n            \n\n            \n                styleUrls\n                ./publier-trajet.component.css\n            \n\n\n\n            \n                templateUrl\n                ./publier-trajet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                publierTrajetForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, trajetService: TrajetService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/publier-trajet/publier-trajet.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trajetService\n                                                  \n                                                        \n                                                                        TrajetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/publier-trajet/publier-trajet.component.ts:44\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de soumettre le formulaire de publication d'un trajet\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        publierTrajetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/publier-trajet/publier-trajet.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TrajetService } from '../services/trajet/trajet.service';\nimport { TimePipe } from '../pipe/time.pipe';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-publier-trajet',\n  imports: [FormsModule, ReactiveFormsModule, CommonModule, TimePipe],\n  templateUrl: './publier-trajet.component.html',\n  styleUrls: ['./publier-trajet.component.css']\n})\n\n/**\n * PublierTrajetComponent\n * ce Class permet de gérer la publication d'un trajet\n */\nexport class PublierTrajetComponent {\n  publierTrajetForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private trajetService: TrajetService,\n    private router: Router\n  ) {\n    this.publierTrajetForm = this.fb.group({\n      villeD: ['', Validators.required],\n      villeA: ['', Validators.required],\n      dateT: ['', Validators.required],\n      nplace: ['', Validators.required],\n      kms: ['', Validators.required],\n      prix: ['', Validators.required],\n      dureeDeTrajet: ['', Validators.required]\n    });\n  }\n\n\n  /**\n   *  Fonction permettant de soumettre le formulaire de publication d'un trajet\n   * @return void\n   * @returns \n   */\n  onSubmit() {\n    if (this.publierTrajetForm.valid) {\n      const formValue = this.publierTrajetForm.value;\n      const utilisateurId = localStorage.getItem('userId'); // Get the logged-in user's ID\n\n      if (!utilisateurId) {\n        alert('Veuillez vous connecter pour publier un trajet.');\n        return;\n      }\n\n      this.trajetService.getCityIdByName(formValue.villeD).subscribe(villeDData => {\n        this.trajetService.getCityIdByName(formValue.villeA).subscribe(villeAData => {\n          const trajetData = {\n            ...formValue,\n            villeDId: villeDData.id,\n            villeAId: villeAData.id,\n            utilisateurId: +utilisateurId // Include the utilisateurId\n          };\n          this.trajetService.addTrajet(trajetData).subscribe({\n            next: () => {\n              alert('Trajet publié avec succès !');\n              this.router.navigate(['/trajet']);\n            },\n            error: (err) => {\n              console.error('Erreur lors de la publication du trajet:', err);\n              alert('Erreur lors de la publication du trajet.');\n            }\n          });\n        });\n      });\n    }\n  }\n}\n    \n\n    \n        \n  Publier un trajet\n  \n    \n      Ville de départ\n      \n    \n    \n      Ville d'arrivée\n      \n    \n    \n      Date et heure de départ\n      \n    \n    \n      Nombre de places\n      \n    \n    \n      Kilomètres\n      \n    \n    \n      Prix (€)\n      \n    \n    \n      Durée de trajet\n      \n    \n    Publier\n  \n\n    \n\n    \n                \n                    ./publier-trajet.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Publier un trajet            Ville de départ                    Ville d\\'arrivée                    Date et heure de départ                    Nombre de places                    Kilomètres                    Prix (€)                    Durée de trajet              Publier  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublierTrajetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimePipe.html":{"url":"pipes/TimePipe.html","title":"pipe - TimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipe/time.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Pipe to format a date as a time string (HH:mm)\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        time\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipe/time.pipe.ts:22\n                        \n                    \n\n\n            \n                \n                         transform function por formater la date en heure\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n\n/**\n * Pipe to format a date as a time string (HH:mm)\n * \n */\n@Pipe({\n  name: 'time'\n})\n\n/**\n * TimePipe\n * \n */\nexport class TimePipe implements PipeTransform {\n  /**\n   *  transform function por formater la date en heure\n   * @param value \n   * @returns \n   */\n  transform(value: string): string {\n    const date = new Date(value);\n    if (isNaN(date.getTime())) {\n      return value; // Return the original value if it's not a valid date\n    }\n    const hours = date.getHours().toString().padStart(2, '0');\n    const minutes = date.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrajetComponent.html":{"url":"components/TrajetComponent.html","title":"component - TrajetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrajetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/trajet/trajet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trajet\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                            CommonModule\n                            TimePipe\n                \n            \n\n            \n                styleUrls\n                ./trajet.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trajet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                carType\n                            \n                            \n                                dateT\n                            \n                            \n                                departTime\n                            \n                            \n                                map\n                            \n                            \n                                maxPrice\n                            \n                            \n                                originalTrajets\n                            \n                            \n                                passagers\n                            \n                            \n                                trajets\n                            \n                            \n                                villeA\n                            \n                            \n                                villeD\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateAvailablePlaces\n                            \n                            \n                                fetchAllTrajets\n                            \n                            \n                                fetchTrajets\n                            \n                            \n                                filterResults\n                            \n                            \n                                getCityIdByName\n                            \n                            \n                                isTimeInRange\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reserver\n                            \n                            \n                                showMap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, trajetService: TrajetService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/trajet/trajet.component.ts:33\n                            \n                        \n\n                \n                    \n                             Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trajetService\n                                                  \n                                                        \n                                                                        TrajetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateAvailablePlaces\n                        \n                    \n                \n            \n            \n                \ncalculateAvailablePlaces()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de filtrer les résultats\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchAllTrajets\n                        \n                    \n                \n            \n            \n                \nfetchAllTrajets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de récupérer tous les trajets\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchTrajets\n                        \n                    \n                \n            \n            \n                \nfetchTrajets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de rechercher un trajet\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterResults\n                        \n                    \n                \n            \n            \n                \nfilterResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Fonction permettant de filtrer les résultats\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCityIdByName\n                        \n                    \n                \n            \n            \n                \ngetCityIdByName(cityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:139\n                        \n                    \n\n\n            \n                \n                         cette fonction permet de récupérer l'ID d'une ville par son nom\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTimeInRange\n                        \n                    \n                \n            \n            \n                \nisTimeInRange(trajetTime: string, filterTime: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:176\n                        \n                    \n\n\n            \n                \n                         Fonction permettant de valider une adresse email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filterTime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:54\n                        \n                    \n\n\n            \n                \n                        ngOnInit\ncette fonction permet de récupérer les paramètres de recherche à partir de l'URL\net de récupérer les trajets en fonction des paramètres de recherche ou de récupérer tous les trajets s'il n'y a pas de paramètres de recherche\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reserver\n                        \n                    \n                \n            \n            \n                \nreserver(trajetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:188\n                        \n                    \n\n\n            \n                \n                         cette fonction permet de réserver un trajet\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMap\n                        \n                    \n                \n            \n            \n                \nshowMap(trajet: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/trajet/trajet.component.ts:209\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajet\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        carType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        departTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Map | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalTrajets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passagers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trajets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villeA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        villeD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/trajet/trajet.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { AfterViewInit, Component, Inject, OnInit, PLATFORM_ID } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { TrajetService } from '../../services/trajet/trajet.service';\nimport { TimePipe } from '../../pipe/time.pipe';\nimport { Observable, forkJoin } from 'rxjs';\nimport L from 'leaflet';\n\n@Component({\n  selector: 'app-trajet',\n  standalone: true,\n  imports: [FormsModule, CommonModule, TimePipe],\n  templateUrl: './trajet.component.html',\n  styleUrls: ['./trajet.component.css'],\n})\n\n/**\n * Trajet component\n * ce Class permet de gérer les trajets\n * \n */\nexport class TrajetComponent implements OnInit {\n  villeD: string = '';\n  villeA: string = '';\n  dateT: string = '';\n  passagers: number = 1;\n  trajets: any[] = [];\n  originalTrajets: any[] = []; // Store the original list of trajets for filtering\n  maxPrice: number = 100;\n  departTime: string = '';\n  carType: string = '';\n  map: L.Map | undefined;\n\n\n  /**\n   *  Constructor\n   * @param route \n   * @param trajetService \n   * @param platformId \n   */\n  constructor(\n    private route: ActivatedRoute,\n    private trajetService: TrajetService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) { }\n\n  /**\n   * ngOnInit\n   * cette fonction permet de récupérer les paramètres de recherche à partir de l'URL\n   * et de récupérer les trajets en fonction des paramètres de recherche ou de récupérer tous les trajets s'il n'y a pas de paramètres de recherche\n   *  \n   */\n  ngOnInit(): void {\n    // Get search parameters from the URL\n    this.route.queryParams.subscribe((params) => {\n      this.villeD = params['villeD'] || '';\n      this.villeA = params['villeA'] || '';\n      this.dateT = params['dateT'] || '';\n      this.passagers = +params['passagers'] || 1;\n\n      // Fetch basé sur les paramètres de recherche\n      if (this.villeD && this.villeA && this.dateT) {\n        this.fetchTrajets();\n      } else {\n        this.fetchAllTrajets();\n      }\n    });\n  }\n\n  /**\n   * Fonction permettant de rechercher un trajet\n   * @returns void\n   */\n\n  fetchTrajets() {\n    if (!this.villeD || !this.villeA) {\n      console.error('City names are not defined');\n      return;\n    }\n\n    /**\n     * Fetch city IDs by name\n     * @returns Observable\n     */\n    forkJoin({\n      villeDData: this.getCityIdByName(this.villeD),\n      villeAData: this.getCityIdByName(this.villeA)\n    }).subscribe({\n      next: ({ villeDData, villeAData }) => {\n        if (!villeDData || !villeAData) {\n          console.error('City data is not defined');\n          return;\n        }\n\n        const villeDId = villeDData.id;\n        const villeAId = villeAData.id;\n        this.trajetService.findTrajetWithDetails(villeDId, villeAId, this.dateT).subscribe({\n          next: (data) => {\n            this.trajets = data;\n            this.originalTrajets = [...data]; // Store the original data for filtering\n            this.calculateAvailablePlaces();\n          },\n          error: (err) => {\n            console.error('Error fetching trajets:', err);\n          },\n        });\n      },\n      error: (err) => {\n        console.error('Error fetching city IDs:', err);\n      }\n    });\n  }\n\n  /**\n   * Fonction permettant de récupérer tous les trajets\n   * @returns void\n   * \n   */\n  fetchAllTrajets() {\n    this.trajetService.findAllTrajetsWithDetails().subscribe({\n      next: (data) => {\n        this.trajets = data;\n        this.originalTrajets = [...data]; // Store the original data for filtering\n        this.calculateAvailablePlaces();\n      },\n      error: (err) => {\n        console.error('Error fetching trajets:', err);\n      },\n    });\n  }\n\n\n  /**\n   *  cette fonction permet de récupérer l'ID d'une ville par son nom\n   * @param cityName \n   * @returns \n   */\n  getCityIdByName(cityName: string): Observable {\n    return this.trajetService.getCityIdByName(cityName);\n  }\n\n  /**\n   * Fonction permettant de filtrer les résultats\n   * @returns void\n   * \n   */\n  calculateAvailablePlaces() {\n    this.trajets.forEach((trajet) => {\n      trajet.availablePlaces = trajet.nplace - trajet.inscriptions.length;\n    });\n  }\n\n\n  /**\n   * Fonction permettant de filtrer les résultats\n   *\n   * \n   */\n  filterResults() {\n    this.trajets = this.originalTrajets.filter((trajet) => {\n      const matchesPrice = trajet.prix = filterDate.getTime();\n  }\n\n  /**\n   *  cette fonction permet de réserver un trajet\n   *  \n   * @param trajetId \n   * @returns \n   */\n  reserver(trajetId: number) {\n    const userId = localStorage.getItem('userId'); // Get the logged-in user's ID\n    if (!userId) {\n      alert('Veuillez vous connecter pour réserver un trajet.');\n      return;\n    }\n\n    // appel de la fonction reserverTrajet du service trajetService pour réserver un trajet\n    // \n    this.trajetService.reserverTrajet(+userId, trajetId).subscribe({\n      next: () => {\n        alert('Réservation réussie !');\n        this.fetchAllTrajets(); // Refresh the list of trajets after reservation\n      },\n      error: (err) => {\n        console.error('Error reserving trajet:', err);\n        alert('Erreur lors de la réservation.');\n      },\n    });\n  }\n\n  showMap(trajet: any): void {\n    // Destroy the map if it already exists\n    if (this.map) {\n      this.map.remove();\n    }\n  \n    // Check if the coordinates are valid\n    if (!trajet || !trajet.villeD || !trajet.villeA || !trajet.villeD.lat || !trajet.villeD.lng || !trajet.villeA.lat || !trajet.villeA.lng) {\n      console.warn('Invalid or missing trajet data. Showing default map view.');\n      this.map = L.map('map').setView([48.8566, 2.3522], 6); // Default to Paris\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; OpenStreetMap contributors',\n      }).addTo(this.map);\n      return;\n    }\n  \n    // Initialize the map with the departure location\n    this.map = L.map('map').setView([trajet.villeD.lat, trajet.villeD.lng], 10);\n  \n    // Add OpenStreetMap tiles\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors',\n    }).addTo(this.map);\n  \n    // Add markers for departure and arrival points\n    const markerD = L.marker([trajet.villeD.lat, trajet.villeD.lng]).addTo(this.map);\n    markerD.bindPopup(`Départ: ${trajet.villeD.nom}`).openPopup();\n  \n    const markerA = L.marker([trajet.villeA.lat, trajet.villeA.lng]).addTo(this.map);\n    markerA.bindPopup(`Arrivée: ${trajet.villeA.nom}`);\n  \n    // Draw a polyline between the two points\n    const latlngs = [\n      [trajet.villeD.lat, trajet.villeD.lng],\n      [trajet.villeA.lat, trajet.villeA.lng],\n    ];\n    L.polyline(latlngs, { color: 'blue' }).addTo(this.map);\n  }\n}\n    \n\n    \n        \n    \n    \n\n  \n  \n    Filtrer les résultats\n    \n      \n      \n        Prix maximum (€)\n        \n        {{ maxPrice }} €\n      \n\n      \n      \n        Heure de départ\n        \n      \n    \n  \n\n  \n   0; else noResults\" class=\"mt-4\">\n    \n      \n        \n          \n            \n              \n              \n                \n                  {{ trajet.utilisateur?.nom }} {{ trajet.utilisateur?.prenom }}\n                \n                \n                   4.8 (120 avis)\n                \n                \n                  \n                  {{ trajet.utilisateur?.voiture?.modele }} \n                  ({{ trajet.utilisateur?.voiture?.marque?.nom }})\n                \n              \n\n              \n              \n                \n                   \n                  {{ trajet.villeD.nom }} → {{ trajet.villeA.nom }}\n                \n                \n                   \n                  {{ trajet.dateT | date:'shortDate' }} \n                   \n                  Départ {{ trajet.dateT | date:'shortTime' }} \n                   \n                  {{ trajet.availablePlaces }} places restantes \n                   Inscriptions: \n                  {{ trajet.inscriptions.length }}\n                \n              \n\n              \n              \n                {{ trajet.prix }} €\n                \n                  Réserver \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n  \n    \n       Aucun trajet disponible pour votre recherche.\n    \n  \n\n    \n\n    \n                \n                    ./trajet.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Filtrer les résultats                        Prix maximum (€)                {{ maxPrice }} €                          Heure de départ                         0; else noResults\" class=\"mt-4\">                                                                                                      {{ trajet.utilisateur?.nom }} {{ trajet.utilisateur?.prenom }}                                                   4.8 (120 avis)                                                                    {{ trajet.utilisateur?.voiture?.modele }}                   ({{ trajet.utilisateur?.voiture?.marque?.nom }})                                                                                                               {{ trajet.villeD.nom }} → {{ trajet.villeA.nom }}                                                                     {{ trajet.dateT | date:\\'shortDate\\' }}                                      Départ {{ trajet.dateT | date:\\'shortTime\\' }}                                      {{ trajet.availablePlaces }} places restantes                    Inscriptions:                   {{ trajet.inscriptions.length }}                                                                          {{ trajet.prix }} €                                  Réserver                                                                                        Aucun trajet disponible pour votre recherche.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrajetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrajetService.html":{"url":"injectables/TrajetService.html","title":"injectable - TrajetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TrajetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/trajet/trajet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrajet\n                            \n                            \n                                deleteTrajet\n                            \n                            \n                                findAllTrajetsWithDetails\n                            \n                            \n                                findTrajetWithDetails\n                            \n                            \n                                getCityIdByName\n                            \n                            \n                                getTrajets\n                            \n                            \n                                reserverTrajet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/trajet/trajet.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTrajet\n                        \n                    \n                \n            \n            \n                \naddTrajet(trajet: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trajet\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTrajet\n                        \n                    \n                \n            \n            \n                \ndeleteTrajet(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllTrajetsWithDetails\n                        \n                    \n                \n            \n            \n                \nfindAllTrajetsWithDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findTrajetWithDetails\n                        \n                    \n                \n            \n            \n                \nfindTrajetWithDetails(villeD: number, villeA: number, dateT: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                villeD\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                villeA\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dateT\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCityIdByName\n                        \n                    \n                \n            \n            \n                \ngetCityIdByName(cityName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cityName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTrajets\n                        \n                    \n                \n            \n            \n                \ngetTrajets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reserverTrajet\n                        \n                    \n                \n            \n            \n                \nreserverTrajet(utilisateurId: number, trajetId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/trajet/trajet.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trajetId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/trajet/trajet.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment ';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrajetService {\n  private apiUrl = '/api'; // Use the proxy URL\n  // private apiUrl = environment.apiUrlGO; // Use the proxy URL for android \n\n\n  constructor(private http: HttpClient) { }\n\n  getTrajets(): Observable {\n    return this.http.get(`${this.apiUrl}`);\n  }\n\n  findAllTrajetsWithDetails(): Observable {\n    return this.http.get(`${this.apiUrl}/trajet/all-details`);\n  }\n\n  findTrajetWithDetails(villeD: number, villeA: number, dateT: string): Observable {\n    const params = new HttpParams()\n      .set('villeD', villeD.toString())\n      .set('villeA', villeA.toString())\n      .set('dateT', dateT);\n    return this.http.get(`${this.apiUrl}/trajet/details`, { params });\n  }\n\n  addTrajet(trajet: any): Observable {\n    return this.http.post(`${this.apiUrl}/trajet`, trajet);\n  }\n\n  deleteTrajet(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/trajet/${id}`);\n  }\n\n  reserverTrajet(utilisateurId: number, trajetId: number): Observable {\n    const reservationData = {\n      utilisateurId,\n      trajetId,\n      dateInscription: new Date().toISOString(), // Current date and time\n    };\n  \n    return this.http.post(`${this.apiUrl}/inscription`, reservationData);\n  }\n\n  getCityIdByName(cityName: string): Observable {\n    return this.http.get(`/api/ville/findbyName/${cityName}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Utilisateur.html":{"url":"interfaces/Utilisateur.html","title":"interface - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nom\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            prenom\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            tel\n                                        \n                                \n                                \n                                        \n                                            ville\n                                        \n                                \n                                \n                                        \n                                            voiture\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prenom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prenom:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ville\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ville:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        voiture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        voiture:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Utilisateur {\n  id: number;\n  nom: string;\n  prenom: string;\n  email: string;\n  password: string;\n  role: string;\n  tel: string;\n  ville: string;\n  voiture: {\n    place: number;\n    marque: string;\n    modele: string;\n    immatriculation: string;\n  } | null;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class UtilisateurService {\n  private apiUrl = '/api/utilisateur'; // Use the proxy URL\n\n  constructor(private http: HttpClient) {}\n\n  // Get all utilisateurs\n  getUtilisateurs(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Get a single utilisateur by ID\n  getUtilisateur(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  // Create a new utilisateur\n  createUtilisateur(utilisateur: Utilisateur): Observable {\n    return this.http.post(this.apiUrl, utilisateur);\n  }\n\n  // Update an utilisateur\n  updateUtilisateur(id: number, utilisateur: Utilisateur): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, utilisateur);\n  }\n\n  updateUtilisateurWithProfile(id: number, userData: any): Observable {\n    return this.http.patch(`${this.apiUrl}/${id}`, userData);\n  }\n  // Delete an utilisateur\n  deleteUtilisateur(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UtilisateurFormComponent.html":{"url":"components/UtilisateurFormComponent.html","title":"component - UtilisateurFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UtilisateurFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/utilisateur-form/utilisateur-form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-utilisateur-form\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./utilisateur-form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./utilisateur-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                saveUtilisateur\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                utilisateur\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                utilisateurSaved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurService: UtilisateurService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/utilisateur-form/utilisateur-form.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        utilisateur\n                    \n                \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Default value : { firstname: '', lastname: '', email: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/utilisateur-form/utilisateur-form.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        utilisateurSaved\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/utilisateur-form/utilisateur-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        saveUtilisateur\n                        \n                    \n                \n            \n            \n                \nsaveUtilisateur()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/utilisateur-form/utilisateur-form.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UtilisateurService, Utilisateur } from '../../services/utilisateur/utilisateur.service';\n\n@Component({\n  selector: 'app-utilisateur-form',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './utilisateur-form.component.html',\n  styleUrls: ['./utilisateur-form.component.css'],\n})\nexport class UtilisateurFormComponent {\n  @Input() utilisateur: Utilisateur = { firstname: '', lastname: '', email: '' };\n  @Output() utilisateurSaved = new EventEmitter();\n\n  constructor(private utilisateurService: UtilisateurService) {}\n\n  saveUtilisateur(): void {\n    if (this.utilisateur.id) {\n      this.utilisateurService.updateUtilisateur(this.utilisateur.id, this.utilisateur).subscribe(() => {\n        this.utilisateurSaved.emit();\n      });\n    } else {\n      this.utilisateurService.createUtilisateur(this.utilisateur).subscribe(() => {\n        this.utilisateurSaved.emit();\n      });\n    }\n  }\n}\n    \n\n    \n        {{ utilisateur.id ? 'Edit Utilisateur' : 'Create Utilisateur' }}\n\n  \n    First Name:\n    \n  \n  \n    Last Name:\n    \n  \n  \n    Email:\n    \n  \n  Save\n\n    \n\n    \n                \n                    ./utilisateur-form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ utilisateur.id ? \\'Edit Utilisateur\\' : \\'Create Utilisateur\\' }}      First Name:            Last Name:            Email:        Save'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UtilisateurFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UtilisateurListComponent.html":{"url":"components/UtilisateurListComponent.html","title":"component - UtilisateurListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UtilisateurListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/utilisateur-list/utilisateur-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-utilisateur-list\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./utilisateur-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./utilisateur-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                utilisateurs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUtilisateur\n                            \n                            \n                                loadUtilisateurs\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurService: UtilisateurService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/utilisateur-list/utilisateur-list.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUtilisateur\n                        \n                    \n                \n            \n            \n                \ndeleteUtilisateur(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/utilisateur-list/utilisateur-list.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUtilisateurs\n                        \n                    \n                \n            \n            \n                \nloadUtilisateurs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/utilisateur-list/utilisateur-list.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/utilisateur-list/utilisateur-list.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        utilisateurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/utilisateur-list/utilisateur-list.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Utilisateur, UtilisateurService } from '../../services/utilisateur/utilisateur.service';\n\n@Component({\n  selector: 'app-utilisateur-list',\n  imports: [CommonModule],\n  templateUrl: './utilisateur-list.component.html',\n  styleUrl: './utilisateur-list.component.css'\n})\nexport class UtilisateurListComponent implements OnInit {\n  utilisateurs: Utilisateur[] = [];\n\n  constructor(private utilisateurService: UtilisateurService) {}\n\n  ngOnInit(): void {\n    this.loadUtilisateurs();\n  }\n\n  loadUtilisateurs(): void {\n    this.utilisateurService.getUtilisateurs().subscribe((data) => {\n      this.utilisateurs = data;\n    });\n  }\n\n  deleteUtilisateur(id: number): void {\n    this.utilisateurService.deleteUtilisateur(id).subscribe(() => {\n      this.loadUtilisateurs(); // Refresh the list after deletion\n    });\n  }\n}\n    \n\n    \n        Utilisateur List\n\n  \n    \n      ID\n      First Name\n      Last Name\n      Email\n      Actions\n    \n  \n  \n    \n      {{ utilisateur.id }}\n      {{ utilisateur.firstname }}\n      {{ utilisateur.lastname }}\n      {{ utilisateur.email }}\n      \n        Delete\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Utilisateur List            ID      First Name      Last Name      Email      Actions                  {{ utilisateur.id }}      {{ utilisateur.firstname }}      {{ utilisateur.lastname }}      {{ utilisateur.email }}              Delete            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConnexionComponent', 'selector': 'app-connexion'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InscriptionComponent', 'selector': 'app-inscription'},{'name': 'ProfilComponent', 'selector': 'app-profil'},{'name': 'PublierTrajetComponent', 'selector': 'app-publier-trajet'},{'name': 'TrajetComponent', 'selector': 'app-trajet'},{'name': 'UtilisateurFormComponent', 'selector': 'app-utilisateur-form'},{'name': 'UtilisateurListComponent', 'selector': 'app-utilisateur-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UtilisateurListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateurService.html":{"url":"injectables/UtilisateurService.html","title":"injectable - UtilisateurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUtilisateur\n                            \n                            \n                                deleteUtilisateur\n                            \n                            \n                                getUtilisateur\n                            \n                            \n                                getUtilisateurs\n                            \n                            \n                                updateUtilisateur\n                            \n                            \n                                updateUtilisateurWithProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/utilisateur/utilisateur.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUtilisateur\n                        \n                    \n                \n            \n            \n                \ncreateUtilisateur(utilisateur: Utilisateur)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateur\n                                            \n                                                            Utilisateur\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUtilisateur\n                        \n                    \n                \n            \n            \n                \ndeleteUtilisateur(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUtilisateur\n                        \n                    \n                \n            \n            \n                \ngetUtilisateur(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUtilisateurs\n                        \n                    \n                \n            \n            \n                \ngetUtilisateurs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUtilisateur\n                        \n                    \n                \n            \n            \n                \nupdateUtilisateur(id: number, utilisateur: Utilisateur)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                utilisateur\n                                            \n                                                            Utilisateur\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUtilisateurWithProfile\n                        \n                    \n                \n            \n            \n                \nupdateUtilisateurWithProfile(id: number, userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utilisateur/utilisateur.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/api/utilisateur'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/utilisateur/utilisateur.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Utilisateur {\n  id: number;\n  nom: string;\n  prenom: string;\n  email: string;\n  password: string;\n  role: string;\n  tel: string;\n  ville: string;\n  voiture: {\n    place: number;\n    marque: string;\n    modele: string;\n    immatriculation: string;\n  } | null;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class UtilisateurService {\n  private apiUrl = '/api/utilisateur'; // Use the proxy URL\n\n  constructor(private http: HttpClient) {}\n\n  // Get all utilisateurs\n  getUtilisateurs(): Observable {\n    return this.http.get(this.apiUrl);\n  }\n\n  // Get a single utilisateur by ID\n  getUtilisateur(id: number): Observable {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n\n  // Create a new utilisateur\n  createUtilisateur(utilisateur: Utilisateur): Observable {\n    return this.http.post(this.apiUrl, utilisateur);\n  }\n\n  // Update an utilisateur\n  updateUtilisateur(id: number, utilisateur: Utilisateur): Observable {\n    return this.http.put(`${this.apiUrl}/${id}`, utilisateur);\n  }\n\n  updateUtilisateurWithProfile(id: number, userData: any): Observable {\n    return this.http.patch(`${this.apiUrl}/${id}`, userData);\n  }\n  // Delete an utilisateur\n  deleteUtilisateur(id: number): Observable {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/connexion/connexion.component.ts\n            \n            component\n            ConnexionComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/components/inscription/inscription.component.ts\n            \n            component\n            InscriptionComponent\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/components/profil/profil.component.ts\n            \n            component\n            ProfilComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/trajet/trajet.component.ts\n            \n            component\n            TrajetComponent\n            \n                42 %\n                (9/21)\n            \n        \n        \n            \n                \n                src/app/components/utilisateur-form/utilisateur-form.component.ts\n            \n            component\n            UtilisateurFormComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/utilisateur-list/utilisateur-list.component.ts\n            \n            component\n            UtilisateurListComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pipe/time.pipe.ts\n            \n            pipe\n            TimePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/publier-trajet/publier-trajet.component.ts\n            \n            component\n            PublierTrajetComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/app/services/api/api.service.ts\n            \n            interface\n            AuthResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/api/auth.intercepter.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                37 %\n                (6/16)\n            \n        \n        \n            \n                \n                src/app/services/auth/guard/auth.guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/profil/profil.service.ts\n            \n            injectable\n            ProfilService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/trajet/trajet.service.ts\n            \n            injectable\n            TrajetService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/utilisateur/utilisateur.service.ts\n            \n            injectable\n            UtilisateurService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/utilisateur/utilisateur.service.ts\n            \n            interface\n            Utilisateur\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/environments/environment .ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.3\n        \n            @angular/router : ^19.2.0\n        \n            @angular/ssr : ^19.2.4\n        \n            @capacitor/android : ^7.1.0\n        \n            @capacitor/core : ^7.1.0\n        \n            @capacitor/ios : ^7.1.0\n        \n            bootstrap : ^5.3.3\n        \n            express : ^4.18.2\n        \n            jquery : ^3.7.1\n        \n            jwt-decode : ^4.0.0\n        \n            leaflet : ^1.9.4\n        \n            leaflet-routing-machine : ^3.2.12\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCovoiturageFront2\nThis project was generated using Angular CLI version 19.2.4.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AppRoutingModule_providers\n\n\n\n\nTimePipe\n\nTimePipe\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nTimePipe->AppRoutingModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppRoutingModule -->\n\nAuthInterceptor->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment .ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }),\n     provideRouter(routes), provideHttpClient() , \n     provideClientHydration(withEventReplay())]\n}\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'fr.inter.YlaGO',\n  appName: 'covoiturage-front2',\n  webDir: 'dist/covoiturage-front2/browser',\n   // Update this to point to the correct directory\n\n  server: {\n    //  hostname: 'localhost',  // Only for dev (ng serve)\n    androidScheme: 'https',  // Force HTTPS in Android\n    // cleartext: false        // Disable HTTP (ngrok uses HTTPS)\n  },\n  plugins: {\n    CapacitorHttp: {\n      enabled: true,  // Enable native HTTP plugin for better performance\n    },\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment .ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n   apiUrlGO: 'https://d879-2a01-e0a-405-4470-6cdd-1b1f-f59e-4e40.ngrok-free.app' \n\n  // apiUrlGO: 'http://192.168.1.34:3000' \n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
